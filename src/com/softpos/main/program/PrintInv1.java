package com.softpos.main.program;

import com.softpos.main.model.Value;
import com.softpos.main.model.PublicVar;
import com.softpos.main.controller.PosControl;
import com.softpos.main.model.BranchBean;
import com.softpos.main.model.CompanyBean;
import com.softpos.main.controller.BranchControl;
import com.softpos.main.controller.CustomerConrol;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import database.MySQLConnect;
import java.sql.PreparedStatement;
import java.text.DecimalFormat;
import java.text.ParseException;
import posbean.CustomerBean;
import printReport.PrintDriver;
import sun.natee.project.util.ThaiUtil;
import util.MSG;
import util.NumberToString;

public class PrintInv1 extends javax.swing.JDialog {

    SimpleDateFormat SqlDateFmt = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
    SimpleDateFormat DateFmt = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
    SimpleDateFormat DateTimeFmt = new SimpleDateFormat("dd/MM/yyyy HH:mm", Locale.ENGLISH);
    SimpleDateFormat Timefmt = new SimpleDateFormat("HH:mm:ss");
    private SimpleDateFormat PPrint_DatefmtThai = new SimpleDateFormat("dd/MM/yyyy HH:mm", Locale.ENGLISH);
    DecimalFormat df = new DecimalFormat("#,##0.00");
    Date date = new Date();
    String PrintOK;
    String VoidOK;
    Double XTotalAmt;
    Double XSubTotal;
    Double XVat;
    Double XAmount;
    Double XDiscount;
    String XRegNo;
    Double XCashPay;
    Double XCrPay;
    String XCrNo;
    Double XCupon;
    Double XEarnest;
    Double XService;
    Double XAccrAmt;
    Double XNetDiff;
    boolean NoEdit;
    boolean DisplayClick;
    boolean FindCustomer;
    private POSHWSetup POSHW;
    private POSConfigSetup CONFIG;
    private String Space = " &nbsp; ";
    private String TAB = Space + Space + Space;
    private String TAB2 = TAB + TAB;
    Date dateP = new Date();

    /**
     * Creates new form PrintInv1
     */
    public PrintInv1(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        POSHW = POSHWSetup.Bean(Value.getMacno());
        CONFIG = POSConfigSetup.Bean();
        initComponents();
        ClearVariable();

        DisplayClick = false;
        FindCustomer = false;

        txtCode.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtAddr1 = new javax.swing.JTextField();
        txtAddr2 = new javax.swing.JTextField();
        txtTel1 = new javax.swing.JTextField();
        txtFax = new javax.swing.JTextField();
        txtRemark = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtDocNo = new javax.swing.JTextField();
        txtDate = new javax.swing.JFormattedTextField();
        txtContact = new javax.swing.JTextField();
        txtPoNo = new javax.swing.JTextField();
        txtRemark2 = new javax.swing.JTextField();
        TPrintOK = new javax.swing.JLabel();
        TCancel = new javax.swing.JLabel();
        TCancelMsg = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtCustBranch = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtTaxID = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtMacNo = new javax.swing.JTextField();
        txtDocNoRef = new javax.swing.JTextField();
        txtDateRef = new javax.swing.JFormattedTextField();
        txtTime = new javax.swing.JTextField();
        txtCashier = new javax.swing.JTextField();
        txtPrice = new javax.swing.JFormattedTextField();
        txtVat = new javax.swing.JFormattedTextField();
        txtAmountTotal = new javax.swing.JFormattedTextField();
        bntNew = new javax.swing.JButton();
        bntCancel = new javax.swing.JButton();
        bntSave = new javax.swing.JButton();
        bntDisplay = new javax.swing.JButton();
        bntPrint = new javax.swing.JButton();
        bntExit1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("โปรแกรมพิมพ์ใบกำกับภาษี/ใบเสร็จรับเงิน");
        setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(247, 242, 188));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBackground(new java.awt.Color(34, 229, 234));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, java.awt.Color.white));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setText(" ใบกำกับภาษี/ใบเสร็จรับเงิน");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel1)
                .addContainerGap(73, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("รหัสลูกค้า (Code)");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("ชื่อลูกค้า (Name)");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("ที่อยู่ (Address)");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("...");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("โทรศัพท์");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("หมายเหตุ");

        txtCode.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodeActionPerformed(evt);
            }
        });
        txtCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodeKeyPressed(evt);
            }
        });

        txtName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtName.setNextFocusableComponent(txtAddr1);
        txtName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNameFocusLost(evt);
            }
        });
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameKeyPressed(evt);
            }
        });

        txtAddr1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtAddr1.setNextFocusableComponent(txtAddr2);
        txtAddr1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddr1ActionPerformed(evt);
            }
        });
        txtAddr1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAddr1KeyPressed(evt);
            }
        });

        txtAddr2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtAddr2.setNextFocusableComponent(txtTel1);
        txtAddr2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAddr2KeyPressed(evt);
            }
        });

        txtTel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtTel1.setNextFocusableComponent(txtFax);
        txtTel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTel1KeyPressed(evt);
            }
        });

        txtFax.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtFax.setNextFocusableComponent(txtRemark);
        txtFax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFaxActionPerformed(evt);
            }
        });
        txtFax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFaxKeyPressed(evt);
            }
        });

        txtRemark.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtRemark.setNextFocusableComponent(txtRemark2);
        txtRemark.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRemarkKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("โทรสาร");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("เลขที่เอกสาร");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("วันที่ (Date)");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("ผู้ติดต่อ");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("PO Number");

        txtDocNo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtDocNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDocNoFocusLost(evt);
            }
        });
        txtDocNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDocNoKeyPressed(evt);
            }
        });

        txtDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        txtDate.setFocusable(false);
        txtDate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        txtContact.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtContact.setNextFocusableComponent(txtPoNo);
        txtContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtContactKeyPressed(evt);
            }
        });

        txtPoNo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtPoNo.setNextFocusableComponent(txtMacNo);
        txtPoNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPoNoKeyPressed(evt);
            }
        });

        txtRemark2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtRemark2.setNextFocusableComponent(txtContact);
        txtRemark2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRemark2KeyPressed(evt);
            }
        });

        TPrintOK.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        TPrintOK.setText("jLabel21");

        TCancel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        TCancel.setText("jLabel21");

        TCancelMsg.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        TCancelMsg.setText("jLabel21");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying glass.jpg"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtCustBranch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtCustBranch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCustBranchKeyPressed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setText("สาขา");

        txtTaxID.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtTaxID.setNextFocusableComponent(txtContact);
        txtTaxID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTaxIDKeyPressed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel22.setText("TAX : ID");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(txtAddr1, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel11))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel9)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtCustBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtAddr2, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(65, 65, 65)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPoNo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDocNo, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(271, 271, 271)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRemark, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRemark2, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTaxID, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(155, 155, 155)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TCancelMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTel1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel8)
                        .addGap(4, 4, 4)
                        .addComponent(txtFax, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(161, 161, 161)
                        .addComponent(TPrintOK, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtDocNo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9)
                                .addComponent(txtCustBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel21)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtAddr1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11)))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtAddr2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPoNo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12)))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtFax, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(TPrintOK, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtRemark, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addGap(6, 6, 6)
                                .addComponent(txtRemark2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtTaxID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel22)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(TCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TCancelMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addGap(15, 15, 15))
        );

        jPanel3.setBackground(new java.awt.Color(243, 187, 225));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, " อ้างถึงใบกำกับภาษีอย่างย่อเลขที่ ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Mac-No");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("ใบกำกับภาษีอย่างย่อ");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("วันที่ (Date)");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("เวลา (Time)");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("Cashier");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("มูลค่าสินค้า/บริการ");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setText("ภาษีมูลค่าเพิ่ม");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setText("จำนวนเงิน (Amount)");

        txtMacNo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtMacNo.setNextFocusableComponent(txtDocNoRef);
        txtMacNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMacNoFocusLost(evt);
            }
        });
        txtMacNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMacNoActionPerformed(evt);
            }
        });
        txtMacNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMacNoKeyPressed(evt);
            }
        });

        txtDocNoRef.setFont(new java.awt.Font("Norasi", 1, 16)); // NOI18N
        txtDocNoRef.setNextFocusableComponent(txtCode);
        txtDocNoRef.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDocNoRefFocusLost(evt);
            }
        });
        txtDocNoRef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDocNoRefActionPerformed(evt);
            }
        });
        txtDocNoRef.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDocNoRefKeyPressed(evt);
            }
        });

        txtDateRef.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        txtDateRef.setFocusable(false);
        txtDateRef.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N

        txtTime.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txtTime.setFocusable(false);

        txtCashier.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txtCashier.setFocusable(false);

        txtPrice.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtPrice.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPrice.setFocusable(false);
        txtPrice.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N

        txtVat.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtVat.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtVat.setFocusable(false);
        txtVat.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N

        txtAmountTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtAmountTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtAmountTotal.setFocusable(false);
        txtAmountTotal.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(txtMacNo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtDocNoRef, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtDateRef, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(txtCashier, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPrice)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(txtVat, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(txtAmountTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel14)
                    .addComponent(jLabel20)
                    .addComponent(jLabel19)
                    .addComponent(jLabel18))
                .addGap(0, 0, 0)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDocNoRef, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDateRef, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCashier, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAmountTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtVat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMacNo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bntNew.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bntNew.setText("เพิ่มเอกสารใหม่ &Clear");
        bntNew.setFocusable(false);
        bntNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bntNew.setIconTextGap(0);
        bntNew.setMargin(new java.awt.Insets(1, 1, 1, 1));
        bntNew.setPreferredSize(new java.awt.Dimension(150, 70));
        bntNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bntNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntNewActionPerformed(evt);
            }
        });

        bntCancel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bntCancel.setText("ยกเลิกเอกสาร");
        bntCancel.setFocusable(false);
        bntCancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bntCancel.setIconTextGap(0);
        bntCancel.setMargin(new java.awt.Insets(1, 1, 1, 1));
        bntCancel.setPreferredSize(new java.awt.Dimension(91, 70));
        bntCancel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bntCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntCancelActionPerformed(evt);
            }
        });

        bntSave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bntSave.setText("บันทึกข้อมูล");
        bntSave.setFocusable(false);
        bntSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bntSave.setIconTextGap(0);
        bntSave.setPreferredSize(new java.awt.Dimension(80, 70));
        bntSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bntSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntSaveActionPerformed(evt);
            }
        });

        bntDisplay.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bntDisplay.setText("แสดงรายการ");
        bntDisplay.setFocusable(false);
        bntDisplay.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bntDisplay.setIconTextGap(0);
        bntDisplay.setPreferredSize(new java.awt.Dimension(90, 70));
        bntDisplay.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bntDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntDisplayActionPerformed(evt);
            }
        });

        bntPrint.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bntPrint.setText("พิมพ์(Print)");
        bntPrint.setFocusable(false);
        bntPrint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bntPrint.setIconTextGap(0);
        bntPrint.setPreferredSize(new java.awt.Dimension(80, 70));
        bntPrint.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bntPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntPrintActionPerformed(evt);
            }
        });

        bntExit1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bntExit1.setText("ออก(Exit)");
        bntExit1.setFocusable(false);
        bntExit1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bntExit1.setIconTextGap(0);
        bntExit1.setPreferredSize(new java.awt.Dimension(80, 70));
        bntExit1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bntExit1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                bntExit1MouseReleased(evt);
            }
        });
        bntExit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntExit1ActionPerformed(evt);
            }
        });

        jMenu1.setText("Function");
        jMenu1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jMenuItem1.setText("เพิ่มเอกสารใหม่&Clear");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jMenuItem5.setText("ยกเลิกเอกสาร");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jMenuItem2.setText("บันทึกข้อมูล (Save/Update)");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jMenuItem3.setText("แสดงรายการ");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);
        jMenu1.add(jSeparator1);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jMenuItem4.setText("ออกจากการทำงาน (Exit)");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(bntNew, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bntCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bntSave, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bntDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bntPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bntExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(bntPrint, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(bntDisplay, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(bntSave, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(bntCancel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(bntNew, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(bntExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1008, 548));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
    bntNewClick();
}//GEN-LAST:event_jMenuItem1ActionPerformed

private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
    bntSaveClick();
}//GEN-LAST:event_jMenuItem2ActionPerformed

private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
    bntDisplayClick();
}//GEN-LAST:event_jMenuItem3ActionPerformed

private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
    bntExitClick();
}//GEN-LAST:event_jMenuItem4ActionPerformed

private void bntExit1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bntExit1MouseReleased

}//GEN-LAST:event_bntExit1MouseReleased

private void txtDocNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDocNoFocusLost
    InvNoExit();
}//GEN-LAST:event_txtDocNoFocusLost

private void txtDocNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDocNoKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        if (txtCode.getText().equals("")) {
            txtCode.setFocusable(true);
            txtCode.requestFocus();
        } else {
            txtName.setFocusable(true);
            txtName.requestFocus();
        }
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntExitClick();
    }

}//GEN-LAST:event_txtDocNoKeyPressed

private void txtAddr1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddr1ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_txtAddr1ActionPerformed

private void txtNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameFocusLost
    CustNameExit();
}//GEN-LAST:event_txtNameFocusLost

private void txtMacNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMacNoFocusLost
    MacNoExit();
}//GEN-LAST:event_txtMacNoFocusLost

private void txtDocNoRefFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDocNoRefFocusLost
    MacNoExit();
}//GEN-LAST:event_txtDocNoRefFocusLost

private void txtCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodeKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        CustCodeExit();
        txtName.requestFocus();
    } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        //bntNewClick();
        dispose();
    } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
        FindCustomer = true;
        FindCustomer frm = new FindCustomer(null, true);
        frm.setVisible(true);
        if (!PublicVar.ReturnString.equals("")) {
            txtCode.setText(PublicVar.ReturnString);
            txtName.requestFocus();
        }
        FindCustomer = false;
    }
}//GEN-LAST:event_txtCodeKeyPressed

private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtAddr1.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntNewClick();
    }
}//GEN-LAST:event_txtNameKeyPressed

private void txtAddr1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddr1KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtAddr2.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntNewClick();
    }
}//GEN-LAST:event_txtAddr1KeyPressed

private void txtAddr2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddr2KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtTel1.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntNewClick();
    }
}//GEN-LAST:event_txtAddr2KeyPressed

private void txtTel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTel1KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtFax.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntNewClick();
    }
}//GEN-LAST:event_txtTel1KeyPressed

private void txtFaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFaxActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_txtFaxActionPerformed

private void txtFaxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFaxKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtRemark.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntNewClick();
    }
}//GEN-LAST:event_txtFaxKeyPressed

private void txtRemarkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRemarkKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtRemark2.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        ClearVariable();
    }
}//GEN-LAST:event_txtRemarkKeyPressed

private void txtRemark2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRemark2KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtContact.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntNewClick();
    }
}//GEN-LAST:event_txtRemark2KeyPressed

private void txtContactKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtPoNo.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntNewClick();
    }
}//GEN-LAST:event_txtContactKeyPressed

private void txtPoNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPoNoKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtMacNo.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntNewClick();
    }
}//GEN-LAST:event_txtPoNoKeyPressed

private void txtMacNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMacNoKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtDocNoRef.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntNewClick();
    }
}//GEN-LAST:event_txtMacNoKeyPressed

private void txtDocNoRefKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDocNoRefKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        MacNoExit();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntNewClick();
    }
}//GEN-LAST:event_txtDocNoRefKeyPressed

private void bntNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntNewActionPerformed
    ClearVariable();
    txtDocNo.setFocusable(true);
    txtDocNo.setEditable(true);
    txtDocNo.requestFocus();
}//GEN-LAST:event_bntNewActionPerformed

private void txtMacNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMacNoActionPerformed

}//GEN-LAST:event_txtMacNoActionPerformed

private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
    bntCancelClick();
}//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ExtItemList ex = new ExtItemList(null, true);
        ex.setVisible(true);

        if (!ExtItemList.data.equals("")) {
            /**
             * * OPEN CONNECTION **
             */
            MySQLConnect mysql = new MySQLConnect();
            mysql.open();
            try {
                String sql = "select * from customer where sp_code='" + ExtItemList.data + "'";
                Statement stmt = mysql.getConnection().createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    txtCode.setText(rs.getString("sp_code"));
                    txtName.setText(ThaiUtil.ASCII2Unicode(rs.getString("sp_desc")));
                    txtAddr1.setText(ThaiUtil.ASCII2Unicode(rs.getString("sp_addr1")));
                    txtAddr2.setText(ThaiUtil.ASCII2Unicode(rs.getString("sp_addr2")));
                    txtTel1.setText(ThaiUtil.ASCII2Unicode(rs.getString("tel")));
                    txtFax.setText(ThaiUtil.ASCII2Unicode(rs.getString("fax")));
                    txtContact.setText(ThaiUtil.ASCII2Unicode(rs.getString("contack")));
                    txtRemark.setText(ThaiUtil.ASCII2Unicode(rs.getString("remark")));
                    txtRemark2.setText(ThaiUtil.ASCII2Unicode(rs.getString("remark2")));
                    txtCustBranch.setText(ThaiUtil.ASCII2Unicode(rs.getString("CustBranch")));
                    txtTaxID.setText(ThaiUtil.ASCII2Unicode(rs.getString("TaxID")));
                }

                rs.close();
                stmt.close();
            } catch (SQLException e) {
                MSG.ERR(this, e.getMessage());
            } finally {
                mysql.close();
            }

            txtCode.requestFocus();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void bntExit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntExit1ActionPerformed
        FindCustomer = true;
        bntExitClick();
    }//GEN-LAST:event_bntExit1ActionPerformed

    private void bntCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntCancelActionPerformed
        bntCancelClick();
    }//GEN-LAST:event_bntCancelActionPerformed

    private void bntSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntSaveActionPerformed
        bntSaveClick();
    }//GEN-LAST:event_bntSaveActionPerformed

    private void bntDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntDisplayActionPerformed
        bntDisplayClick();
    }//GEN-LAST:event_bntDisplayActionPerformed

    private void bntPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntPrintActionPerformed
        if (!PrintOK.equals("Y")) {
            bntPrintClick();
        }
    }//GEN-LAST:event_bntPrintActionPerformed

    private void txtCustBranchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustBranchKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustBranchKeyPressed

    private void txtTaxIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTaxIDKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTaxIDKeyPressed

    private void txtCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodeActionPerformed

    private void txtDocNoRefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDocNoRefActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDocNoRefActionPerformed

    public void InvNoExit() {
        String TempInvNo = txtDocNo.getText();
        SetReadOnlyOff();
        if (!TempInvNo.equals("")) {
            /**
             * * OPEN CONNECTION **
             */
            MySQLConnect mysql = new MySQLConnect();
            mysql.open();
            try {
                Statement stmt = mysql.getConnection().createStatement();
                String SQLQuery = "Select *from invcashdoc where invno='" + TempInvNo + "'";
                ResultSet rec = stmt.executeQuery(SQLQuery);
                rec.first();
                if (rec.getRow() == 0) {
                    MSG.ERR(this, "ไม่พบใบกำกับภาษี/ใบเสร็จรับเงินที่ต้องการ...");
                    ClearVariable();
                } else {
                    txtDate.setText(DateFmt.format(rec.getDate("invdate")));
                    txtCode.setText(rec.getString("custcode"));
                    txtName.setText(rec.getString("custname"));
                    txtAddr1.setText(rec.getString("custaddr1"));
                    txtAddr2.setText(rec.getString("custaddr2"));
                    txtTel1.setText(rec.getString("custtel"));
                    txtFax.setText(rec.getString("custfax"));
                    txtContact.setText(rec.getString("contack"));
                    txtRemark.setText(rec.getString("remark"));
                    txtRemark2.setText(rec.getString("remark2"));
                    txtPoNo.setText(rec.getString("pono"));

                    txtMacNo.setText(rec.getString("macno"));
                    txtDocNoRef.setText(rec.getString("refno"));
                    txtDateRef.setText(DateFmt.format(rec.getDate("ondate")));
                    txtTime.setText(rec.getString("ontime"));
                    txtCashier.setText(rec.getString("cashier"));
                    txtTime.setText(rec.getString("ontime"));
                    txtPrice.setValue(rec.getDouble("subtotal"));
                    txtVat.setValue(rec.getDouble("vat"));
                    txtAmountTotal.setValue(rec.getDouble("amount"));

                    XTotalAmt = rec.getDouble("totalamt");
                    XSubTotal = rec.getDouble("subtotal");
                    XVat = rec.getDouble("vat");
                    XAmount = rec.getDouble("amount");
                    XDiscount = rec.getDouble("discount");
                    XRegNo = rec.getString("regno");
                    XCashPay = rec.getDouble("cashpay");
                    XCrPay = rec.getDouble("crpay");
                    XCrNo = rec.getString("crno");
                    XCupon = rec.getDouble("cupon");
                    XEarnest = rec.getDouble("earnest");
                    XService = rec.getDouble("service");

                    PrintOK = rec.getString("printok");
                    if (PrintOK.equals("Y")) {
                        TPrintOK.setText("พิมพ์เอกสารแล้ว โดย : " + rec.getString("invuser"));
                        TPrintOK.setVisible(true);
                        SetReadOnlyOn();
                    }
                    VoidOK = rec.getString("void");
                    if (VoidOK.equals("Y")) {
                        TCancel.setText("เอกสารยกเลิกโดย : " + rec.getString("uservoid"));
                        TCancelMsg.setText(rec.getString("voidmessage"));
                        TCancel.setVisible(true);
                        TCancelMsg.setVisible(true);
                        SetReadOnlyOn();
                    }
                    try {
                        Statement stmt2 = mysql.getConnection().createStatement();
                        String SQLQuery2 = "Select *from billno where (b_refno='" + txtDocNoRef.getText() + "') and "
                                + "(b_macno='" + txtMacNo.getText() + "') and (b_void<>'V')";
                        ResultSet rec2 = stmt.executeQuery(SQLQuery2);
                        rec2.first();
                        if (rec2.getRow() == 0) {
                        } else {
                            NoEdit = true;
                            txtMacNo.setFocusable(false);
                            txtDocNoRef.setFocusable(false);
                        }
                        rec2.close();
                        stmt2.close();
                    } catch (SQLException e2) {
                        MSG.ERR(e2.getMessage());
                    }
                    txtDocNo.setFocusable(true);
                    if (!txtCode.getText().equals("")) {
                        txtName.requestFocus();
                    } else {
                        txtCode.requestFocus();
                    }
                }
                rec.close();
                stmt.close();
            } catch (SQLException e) {
                MSG.ERR(e.getMessage());
            }
        } else {
            if (!DisplayClick) {
                txtDocNo.setText("***NEW***");
                txtDocNo.setFocusable(false);
                if (!txtCode.getText().equals("")) {
                    txtName.requestFocus();
                } else {
                    txtCode.requestFocus();
                }
            }
        }
    }

    public void CustCodeExit() {
        if (!txtCode.getText().equals("")) {
            /**
             * * OPEN CONNECTION **
             */
            MySQLConnect mysql = new MySQLConnect();
            mysql.open();
            try {
                Statement stmt = mysql.getConnection().createStatement();
                String SQLQuery = "Select *from customer where sp_code='" + txtCode.getText() + "'";
                ResultSet rec = stmt.executeQuery(SQLQuery);
                rec.first();
                if (rec.getRow() == 0) {
                } else {
                    txtCode.setText(ThaiUtil.ASCII2Unicode(rec.getString("sp_code")));
                    txtName.setText(ThaiUtil.ASCII2Unicode(rec.getString("sp_desc")));
                    txtAddr1.setText(ThaiUtil.ASCII2Unicode(rec.getString("sp_addr1")));
                    txtAddr2.setText(ThaiUtil.ASCII2Unicode(rec.getString("sp_addr2") + " " + rec.getString("sp_zip")));
                    txtTel1.setText(ThaiUtil.ASCII2Unicode(rec.getString("tel")));
                    txtFax.setText(ThaiUtil.ASCII2Unicode(rec.getString("fax")));
                    txtContact.setText(ThaiUtil.ASCII2Unicode(rec.getString("contack")));
                    txtRemark.setText(ThaiUtil.ASCII2Unicode(rec.getString("remark")));
                    txtRemark2.setText(ThaiUtil.ASCII2Unicode(rec.getString("remark2")));
                    txtMacNo.requestFocus();
                }
                rec.close();
                stmt.close();
            } catch (SQLException e) {
                MSG.ERR(e.getMessage());
            } finally {
                mysql.close();
            }
        } else {
            if (!txtDocNo.isFocusable()) {
                if ((!FindCustomer) && (!DisplayClick)) {
                    MSG.ERR(this, "กรุณาป้อนรหัสลูกค้า...(ในกรณีที่เป็นลูกค้าใหม่...ให้ป้อนรหัสลูกค้าใหม่ก่อนการทำรายการ...)");
                    txtCode.requestFocus();
                }
            }
        }

    }

    public void CustNameExit() {
        if ((txtAddr1.getText().equals("")) & (PrintOK.equals("N"))) {
            /**
             * * OPEN CONNECTION **
             */
            MySQLConnect mysql = new MySQLConnect();
            mysql.open();
            try {
                Statement stmt = mysql.getConnection().createStatement();
                String SQLQuery = "Select *from customer where sp_desc='" + ThaiUtil.Unicode2ASCII(txtName.getText()) + "'";
                ResultSet rec = stmt.executeQuery(SQLQuery);
                rec.first();
                if (rec.getRow() == 0) {
                } else {
                    txtCode.setText(rec.getString("sp_code"));
                    txtName.setText(rec.getString("sp_desc"));
                    txtAddr1.setText(rec.getString("sp_addr1"));
                    txtAddr2.setText(rec.getString("sp_addr2") + " " + rec.getString("sp_zip"));
                    txtTel1.setText(rec.getString("tel"));
                    txtFax.setText(rec.getString("fax"));
                    txtContact.setText(rec.getString("contack"));
                    txtRemark.setText(rec.getString("remark"));
                    txtRemark2.setText(rec.getString("remark2"));
                }
                rec.close();
                stmt.close();
            } catch (SQLException e) {
                MSG.ERR(e.getMessage());
            } finally {
                mysql.close();
            }
        }
    }

    public void MacNoExit() {
        String TempInv;
        String TempType;
        if ((!txtMacNo.getText().equals("")) & (!txtDocNoRef.getText().equals("")) & (!NoEdit)) {
            /**
             * * OPEN CONNECTION **
             */
            MySQLConnect mysql = new MySQLConnect();
            mysql.open();
            try {
                Statement stmt = mysql.getConnection().createStatement();
                String SQLQuery = "Select *from billno where (b_refno='" + txtDocNoRef.getText() + "') and "
                        + "(b_macno='" + txtMacNo.getText() + "') and (b_void<>'V')";
                ResultSet rec = stmt.executeQuery(SQLQuery);
                rec.first();
                if (rec.getRow() == 0) {
                    MSG.ERR(this, "ไม่พบรายการขายของใบกำกับภาษีอย่างย่อเลขที่ " + txtDocNoRef.getText() + " ที่เครื่อง " + txtMacNo.getText() + " กรุณาตรวจสอบ...");
                    txtMacNo.setText("");
                    txtDocNoRef.setText("");
                    txtMacNo.requestFocus();
                } else {
                    TempInv = rec.getString("b_invno");
                    TempType = rec.getString("b_invtype");
                    if (TempInv == null) {
                        TempInv = "";
                    }
                    if (TempType == null) {
                        TempType = "";
                    }
                    if (((TempInv.equals("")) & (TempType.equals(""))) | (TempInv.equals(txtDocNo.getText()))) {
                        txtDateRef.setText(DateFmt.format(rec.getDate("b_ondate")));
                        txtTime.setText(rec.getString("b_ontime"));
                        txtCashier.setText(rec.getString("b_cashier"));
                        XTotalAmt = rec.getDouble("b_total");
                        XVat = rec.getDouble("b_vat");
                        XAmount = rec.getDouble("b_nettotal");
                        XService = rec.getDouble("b_serviceamt");
                        XCashPay = rec.getDouble("b_cash");
                        XCrPay = rec.getDouble("b_cramt1");
//                        XCrNo = rec.getString("b_cardno1")+"/"+rec.getString("b_appcode1");
                        XCrNo = GetCrNo(txtDocNoRef.getText(), txtMacNo.getText());
                        XCupon = rec.getDouble("b_giftvoucher");
                        XEarnest = rec.getDouble("b_earnest");
                        XRegNo = PUtility.SeekRegNo(txtMacNo.getText());
                        XSubTotal = XAmount - XVat;
                        XDiscount = rec.getDouble("b_itemdiscamt")
                                + rec.getDouble("b_fastdiscamt")
                                + rec.getDouble("b_empdiscamt")
                                + rec.getDouble("b_traindiscamt")
                                + rec.getDouble("b_memdiscamt")
                                + rec.getDouble("b_subdiscamt")
                                + rec.getDouble("b_subdiscbath")
                                + rec.getDouble("b_prodiscamt")
                                + rec.getDouble("b_cupondiscamt")
                                + rec.getDouble("b_spadiscamt");
                        XNetDiff = rec.getDouble("b_netdiff");
                        XAccrAmt = rec.getDouble("b_AccrAmt");
                        txtPrice.setValue(XSubTotal);
                        txtVat.setValue(XVat);
                        txtAmountTotal.setValue(XAmount);
                    } else {
                        if (rec.getString("b_accrcode").equals("")) {
                            if (TempType.equals("1")) {
                                MSG.ERR(this, "ใบกำกับภาษีอย่างย่อเลขที่ " + txtMacNo.getText() + "/" + txtDocNoRef.getText() + " มีการพิมพ์ใบกำกับภาษีแล้วเลขที่ " + TempInv);
                            } else {
                                MSG.ERR(this, "ใบกำกับภาษีอย่างย่อเลขที่ " + txtMacNo.getText() + "/" + txtDocNoRef.getText() + " มีการพิมพ์ใบกำกับภาษีแล้วเลขที่ " + TempInv);
                            }
                        } else {
                            MSG.ERR(this, "ใบกำกับภาษีอย่างย่อเลขที่ " + txtMacNo.getText() + "/" + txtDocNoRef.getText() + "มีการบันทึกการขายเป็นลูกหนี้ ไม่สามารถพิมพ์ใบกำกับภาษี/ใบเสร็จรับเงินได้... ");
                        }
                        txtMacNo.setText("");
                        txtDocNoRef.setText("");
                        txtMacNo.requestFocus();
                    }
                }
                rec.close();
                stmt.close();
            } catch (SQLException e2) {
                MSG.ERR(e2.getMessage());
            } finally {
                mysql.close();
            }
        }
    }

    public void ClearVariable() {
        NoEdit = false;
        XAmount = 0.0;
        PrintOK = "N";
        VoidOK = "N";
        txtDocNo.setText("");
        txtDate.setText(DateFmt.format(date));
        txtContact.setText("");
        txtPoNo.setText("");
        txtCode.setText("");
        txtName.setText("");
        txtAddr1.setText("");
        txtAddr2.setText("");
        txtTel1.setText("");
        txtFax.setText("");
        txtRemark.setText("");
        txtRemark2.setText("");
        txtMacNo.setText("");
        txtDocNoRef.setText("");
        txtDateRef.setText("");
        txtTime.setText("");
        txtCashier.setText("");
        txtPrice.setValue(0);
        txtVat.setValue(0);
        txtAmountTotal.setValue(0);
        //SetReadOnlyOff() ;
        TPrintOK.setText("");
        TCancel.setText("");
        TCancelMsg.setText("");
        txtDocNo.setEnabled(true);
        txtDocNo.setEditable(true);
        txtDocNo.requestFocus();
    }

    public void bntNewClick() {
        ClearVariable();
        txtDocNo.setFocusable(true);
        txtDocNo.requestFocus();
    }

    public void SetReadOnlyOff() {
        txtDocNo.setEnabled(true);
        txtCode.setFocusable(true);
        txtName.setFocusable(true);
        txtAddr1.setFocusable(true);
        txtAddr2.setFocusable(true);
        txtTel1.setFocusable(true);
        txtFax.setFocusable(true);
        txtRemark.setFocusable(true);
        txtContact.setFocusable(true);
        txtPoNo.setFocusable(true);
        txtMacNo.setFocusable(true);
        txtDocNoRef.setFocusable(true);
    }

    public void SetReadOnlyOn() {
        txtDocNo.setEnabled(false);
        txtCode.setFocusable(false);
        txtName.setFocusable(false);
        txtAddr1.setFocusable(false);
        txtAddr2.setFocusable(false);
        txtTel1.setFocusable(false);
        txtFax.setFocusable(false);
        txtRemark.setFocusable(false);
        txtRemark2.setFocusable(false);
        txtContact.setFocusable(false);
        txtPoNo.setFocusable(false);
        txtMacNo.setFocusable(false);
        txtDocNoRef.setFocusable(false);
    }

    public void bntSaveClick() {
        String TempInvNo = txtDocNo.getText();
        if ((!txtDocNo.getText().equals("")) & (!txtName.getText().equals("")) & (XAmount != 0) & (ValidSave())) {

            if (!VoidOK.equals("Y")) {
                if (TempInvNo.equals("***NEW***")) {
                    TempInvNo = FindMaxInvNo();
                }
                txtDocNo.setText(TempInvNo);
                if (SeekInvNo(TempInvNo)) {
                    updateInv(TempInvNo);
                } else {
                    addInv(TempInvNo);
                }

                String BillNo = PublicVar.Branch_Code + "/" + txtMacNo.getText() + "/" + txtDocNoRef.getText();
                UpdateAccr(BillNo, TempInvNo);
                UpdateBillNo(txtMacNo.getText(), txtDocNoRef.getText(), TempInvNo, "1");
                InsertDetail(TempInvNo, txtMacNo.getText(), txtDocNoRef.getText());
                if (!txtCode.getText().equals("")) {
                    CustomerBean bean = new CustomerBean();
                    bean.setSp_code(txtCode.getText());
                    bean.setSp_Desc(ThaiUtil.Unicode2ASCII(txtName.getText()));
                    bean.setSp_Addr1(ThaiUtil.Unicode2ASCII(txtAddr1.getText()));
                    bean.setSp_Addr2(ThaiUtil.Unicode2ASCII(txtAddr2.getText()));
                    bean.setTel(ThaiUtil.Unicode2ASCII(txtTel1.getText()));
                    bean.setFax(ThaiUtil.Unicode2ASCII(txtFax.getText()));
                    bean.setContack(ThaiUtil.Unicode2ASCII(txtContact.getText()));
                    bean.setRemark(ThaiUtil.Unicode2ASCII(txtRemark.getText()));
                    bean.setRemark2(ThaiUtil.Unicode2ASCII(txtRemark2.getText()));
                    bean.setTaxid(ThaiUtil.Unicode2ASCII(txtTaxID.getText()));
                    bean.setCustBranch(ThaiUtil.Unicode2ASCII(txtCustBranch.getText()));
                    if (SeekCustomer(ThaiUtil.Unicode2ASCII(txtCode.getText()))) {
                        updateCustomer(bean);
                    } else {
                        addCustomer(bean);
                    }
                }

            }
        }
    }

    public boolean ValidSave() {
        Boolean RetVal = true;
        if (txtCode.getText().length() > 10) {
            MSG.ERR(this, "รหัสลูกค้าสามารถนาป้อนได้ไม่เกิน 10 ตัวอักษร");
            RetVal = false;
            txtCode.requestFocus();
        } else if (txtName.getText().length() > 80) {
            MSG.ERR(this, "ชื่อลูกค้าสามารถนาป้อนได้ไม่เกิน 80 ตัวอักษร");
            RetVal = false;
            txtName.requestFocus();
        } else if (txtAddr1.getText().length() > 80) {
            MSG.ERR(this, "ที่อยู่ลูกค้าสามารถนาป้อนได้ไม่เกิน 80 ตัวอักษร");
            RetVal = false;
            txtAddr1.requestFocus();
        } else if (txtAddr2.getText().length() > 80) {
            MSG.ERR(this, "ที่อยู่ลูกค้าสามารถนาป้อนได้ไม่เกิน 80 ตัวอักษร");
            RetVal = false;
            txtAddr2.requestFocus();
        } else if (txtTel1.getText().length() > 25) {
            MSG.ERR(this, "เบอร์โทรศัพทลูกค้าสามารถนาป้อนได้ไม่เกิน 25 ตัวอักษร");
            RetVal = false;
            txtTel1.requestFocus();
        } else if (txtFax.getText().length() > 25) {
            MSG.ERR(this, "เบอร์โทรสารลูกค้าสามารถนาป้อนได้ไม่เกิน 25 ตัวอักษร");
            RetVal = false;
            txtFax.requestFocus();
        } else if (txtRemark.getText().length() > 50) {
            MSG.ERR(this, "หมายเหตุสามารถนาป้อนได้ไม่เกิน 50 ตัวอักษร");
            RetVal = false;
            txtRemark.requestFocus();
        } else if (txtRemark2.getText().length() > 50) {
            MSG.ERR(this, "หมายเหตุสามารถนาป้อนได้ไม่เกิน 50 ตัวอักษร");
            RetVal = false;
            txtRemark2.requestFocus();
        } else if (txtContact.getText().length() > 40) {
            MSG.ERR(this, "ชื่อผู้ติดต่อสามารถนาป้อนได้ไม่เกิน 50 ตัวอักษร");
            RetVal = false;
            txtContact.requestFocus();
        } else if (txtPoNo.getText().length() > 30) {
            MSG.ERR(this, "PONO สามารถป้อนได้ไม่เกิน 30 ตัวอักษร");
            RetVal = false;
            txtPoNo.requestFocus();
        }
        return RetVal;
    }

    public void addCustomer(CustomerBean bean) {
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            String sql = "insert into customer "
                    + "(sp_code,sp_Desc,sp_Addr1,sp_Addr2,sp_zip,tel,fax,Contack,Remark,Remark2) "
                    + "values('" + bean.getSp_code() + "','" + bean.getSp_Desc() + "','" + bean.getSp_Addr1() + "',"
                    + "'" + bean.getSp_Addr2() + "','" + bean.getSp_zip() + "','" + bean.getTel() + "',"
                    + "'" + bean.getFax() + "','" + bean.getContack() + "','" + bean.getRemark() + "',"
                    + "'" + bean.getRemark2() + "')";
            Statement stmt = mysql.getConnection().createStatement();
            stmt.executeUpdate(sql);
            stmt.close();
        } catch (Exception e) {
            MSG.ERR(e.getMessage());
        } finally {
            mysql.close();
        }
    }

    public void updateCustomer(CustomerBean bean) {
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            String sql = "update customer "
                    + "set sp_code='" + bean.getSp_code() + "', sp_Desc='" + bean.getSp_Desc() + "', sp_Addr1='" + bean.getSp_Addr1() + "', "
                    + "sp_Addr2='" + bean.getSp_Addr2() + "', sp_zip='" + bean.getSp_zip() + "', tel='" + bean.getTel() + "', "
                    + "fax='" + bean.getFax() + "', Contack='" + bean.getContack() + "', Remark='" + bean.getRemark() + "', "
                    + "Remark2='" + bean.getRemark2() + "', Taxid='" + bean.getTaxid() + "', CustBranch='" + bean.getCustBranch() + "' "
                    + "where sp_code='" + bean.getSp_code() + "'";
//            sql = sql.replace("null", "").replace("NULL", "").replace(null, "");
            Statement stmt = mysql.getConnection().createStatement();
            stmt.executeUpdate(sql);
            stmt.close();
        } catch (Exception e2) {
            MSG.ERR(e2.getMessage());
        } finally {
            mysql.close();
        }
    }

    public void InsertDetail(String InvNo, String MacNo, String RefNo) {
        Date TempInvDate = date;
        try {
            TempInvDate = DateFmt.parse(txtDate.getText());
        } catch (ParseException e) {
            MSG.ERR(this, e.getMessage());
        }

        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "delete from invdetail where invno=?";
            PreparedStatement prm = mysql.getConnection().prepareStatement(SqlQuery);
            prm.setString(1, InvNo);
            prm.executeUpdate();
            prm.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        }
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SQLQuery = "Select *from t_sale where (macno='" + MacNo + "') and (r_refno='" + RefNo + "')";
            ResultSet rec = stmt.executeQuery(SQLQuery);
            rec.first();
            if (rec.getRow() == 0) {
            } else {
                do {
                    try {
                        Statement stmt2 = mysql.getConnection().createStatement();
                        String SqlQuery = "insert into invdetail (invno,invdate,pcode,pname,price,pqty,"
                                + "pamount,punit,pgroup) values (?,?,?,?,?,?,?,?,?)";
                        PreparedStatement prm = mysql.getConnection().prepareStatement(SqlQuery);
                        prm.setString(1, InvNo);
                        prm.setString(2, SqlDateFmt.format(TempInvDate));
                        prm.setString(3, rec.getString("r_plucode"));
                        prm.setString(4, rec.getString("r_pname"));
                        prm.setDouble(5, rec.getDouble("r_price"));
                        prm.setDouble(6, rec.getDouble("r_quan"));
                        prm.setDouble(7, rec.getDouble("r_total"));
                        prm.setString(8, rec.getString("r_unit"));
                        prm.setString(9, rec.getString("r_group"));
                        prm.executeUpdate();
                        prm.close();
                        stmt2.close();
                    } catch (SQLException e2) {
                        MSG.ERR(e2.getMessage());
                    }

                } while (rec.next());
            }
            rec.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        }

        mysql.close();
    }

    public void UpdateBillNo(String MacNo, String RefNo, String InvNo, String InvType) {
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "update billno set b_invno=?,b_invtype=? where (b_macno=?) and (b_refno=?)";
            PreparedStatement prm = mysql.getConnection().prepareStatement(SqlQuery);
            prm.setString(1, InvNo);
            prm.setString(2, InvType);
            prm.setString(3, MacNo);
            prm.setString(4, RefNo);
            prm.executeUpdate();
            prm.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        } finally {
            mysql.close();
        }
    }

    public void UpdateAccr(String BillNo, String InvNo) {
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "update accr set arinvno=? where arno=?";
            PreparedStatement prm = mysql.getConnection().prepareStatement(SqlQuery);
            prm.setString(1, InvNo);
            prm.setString(2, BillNo);
            prm.executeUpdate();
            prm.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        } finally {
            mysql.close();
        }
    }

    public void addInv(String InvNo) {
        Date TempInvDate = date;
        Date TempOnDate = date;
        try {
            TempInvDate = DateFmt.parse(txtDate.getText());
            TempOnDate = DateFmt.parse(txtDateRef.getText());
        } catch (ParseException e) {
            MSG.ERR(this, e.getMessage());
        }

        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "insert into invcashdoc (s_bran,invdate,custcode,custname,custaddr1,"
                    + "custaddr2,macno,refno,ondate,ontime,cashier,totalamt,discount,subtotal,"
                    + "vat,amount,invuser,service,regno,cashpay,crpay,cupon,crno,arcode,"
                    + "custtel,custfax,custcr,contack,remark,earnest,remark2,pono,duedate,invno,void,uservoid,voiddate,voidmessage,printok) "
                    + "values (?,?,?,?,?,?,?,?,?,? ,?,?,?,?,?,?,?,?,?,? ,?,?,?,?,?,?,?,?,?,? ,?,?,?,?,?,?,?,?,?)";
//            SqlQuery = SqlQuery.replace("null", "").replace(null, "").replace("NULL", "");
            PreparedStatement prm = mysql.getConnection().prepareStatement(SqlQuery);
            prm.setString(1, PublicVar.Branch_Code);
            prm.setString(2, SqlDateFmt.format(TempInvDate));
            prm.setString(3, txtCode.getText());
            prm.setString(4, ThaiUtil.Unicode2ASCII(txtName.getText()));
            prm.setString(5, ThaiUtil.Unicode2ASCII(txtAddr1.getText()));
            prm.setString(6, ThaiUtil.Unicode2ASCII(txtAddr2.getText()));
            prm.setString(7, txtMacNo.getText());
            prm.setString(8, txtDocNoRef.getText());
            prm.setString(9, SqlDateFmt.format(TempOnDate));
            prm.setString(10, txtTime.getText());
            prm.setString(11, txtCashier.getText());
            prm.setDouble(12, XTotalAmt);
            prm.setDouble(13, XDiscount);
            prm.setDouble(14, XSubTotal);
            prm.setDouble(15, XVat);
            prm.setDouble(16, XAmount);
            prm.setString(17, PublicVar._User);
            prm.setDouble(18, XService);
            prm.setString(19, XRegNo);
            prm.setDouble(20, XCashPay);
            prm.setDouble(21, XCrPay);
            prm.setDouble(22, XCupon);
            prm.setString(23, XCrNo);
            prm.setString(24, "");
            prm.setString(25, txtTel1.getText());
            prm.setString(26, txtFax.getText());
            prm.setInt(27, 0);
            prm.setString(28, ThaiUtil.Unicode2ASCII(txtContact.getText()));
            prm.setString(29, ThaiUtil.Unicode2ASCII(txtRemark.getText()));
            prm.setDouble(30, XEarnest);
            prm.setString(31, ThaiUtil.Unicode2ASCII(txtRemark2.getText()));
            prm.setString(32, txtPoNo.getText());
            prm.setString(33, SqlDateFmt.format(date));
            prm.setString(34, InvNo);
            prm.setString(35, "N");
            prm.setString(36, "");
            prm.setString(37, "0000-00-00");
            prm.setString(38, "");
            prm.setString(39, "N");
            prm.executeUpdate();
            prm.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        } finally {
            mysql.close();
        }
    }

    public void updateInv(String InvNo) {
        Date TempInvDate = date;
        Date TempOnDate = date;
        try {
            TempInvDate = DateFmt.parse(txtDate.getText());
            TempOnDate = DateFmt.parse(txtDateRef.getText());
        } catch (ParseException e) {
            MSG.ERR(e.getMessage());
        }

        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "update invcashdoc set s_bran=?,invdate=?,custcode=?,custname=?,custaddr1=?,"
                    + "custaddr2=?,macno=?,refno=?,ondate=?,ontime=?,cashier=?,totalamt=?,discount=?,subtotal=?,"
                    + "vat=?,amount=?,invuser=?,service=?,regno=?,cashpay=?,crpay=?,cupon=?,crno=?,arcode=?,"
                    + "custtel=?,custfax=?,custcr=?,contack=?,remark=?,earnest=?,remark2=?,pono=?,duedate=? "
                    + " where invno=?";
            PreparedStatement prm = mysql.getConnection().prepareStatement(SqlQuery);
            prm.setString(1, PublicVar.Branch_Code);
            prm.setString(2, SqlDateFmt.format(TempInvDate));
            prm.setString(3, txtCode.getText());
            prm.setString(4, ThaiUtil.Unicode2ASCII(txtName.getText()));
            prm.setString(5, ThaiUtil.Unicode2ASCII(txtAddr1.getText()));
            prm.setString(6, ThaiUtil.Unicode2ASCII(txtAddr2.getText()));
            prm.setString(7, txtMacNo.getText());
            prm.setString(8, txtDocNoRef.getText());
            prm.setString(9, SqlDateFmt.format(TempOnDate));
            prm.setString(10, txtTime.getText());
            prm.setString(11, txtCashier.getText());
            prm.setDouble(12, XTotalAmt);
            prm.setDouble(13, XDiscount);
            prm.setDouble(14, XSubTotal);
            prm.setDouble(15, XVat);
            prm.setDouble(16, XAmount);
            prm.setString(17, PublicVar._User);
            prm.setDouble(18, XService);
            prm.setString(19, XRegNo);
            prm.setDouble(20, XCashPay);
            prm.setDouble(21, XCrPay);
            prm.setDouble(22, XCupon);
            prm.setString(23, XCrNo);
            prm.setString(24, "");
            prm.setString(25, txtTel1.getText());
            prm.setString(26, txtFax.getText());
            prm.setInt(27, 0);
            prm.setString(28, ThaiUtil.Unicode2ASCII(txtContact.getText()));
            prm.setString(29, ThaiUtil.Unicode2ASCII(txtRemark.getText()));
            prm.setDouble(30, XEarnest);
            prm.setString(31, ThaiUtil.Unicode2ASCII(txtRemark2.getText()));
            prm.setString(32, txtPoNo.getText());
            prm.setString(33, SqlDateFmt.format(date));
            prm.setString(34, InvNo);
            prm.executeUpdate();
            prm.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        } finally {
            mysql.close();
        }
    }

    public boolean SeekInvNo(String InvNo) {
        boolean RetVal = false;
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SQLQuery = "Select * from invcashdoc where invno='" + InvNo + "'";
            ResultSet rec = stmt.executeQuery(SQLQuery);
            rec.first();
            if (rec.getRow() == 0) {
                RetVal = false;
            } else {
                RetVal = true;
            }
            rec.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        } finally {
            mysql.close();
        }

        return RetVal;
    }

    public boolean SeekCustomer(String CustCode) {
        Boolean RetVal = false;
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SQLQuery = "Select *from customer where sp_code='" + CustCode + "'";
            ResultSet rec = stmt.executeQuery(SQLQuery);
            rec.first();
            if (rec.getRow() == 0) {
                RetVal = false;
            } else {
                RetVal = true;
            }
            rec.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        } finally {
            mysql.close();
        }

        return RetVal;
    }

    public String FindMaxInvNo() {
        String RetVal = "";
        int TempInv = 0;
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SQLQuery = "Select *from branch";
            ResultSet rec = stmt.executeQuery(SQLQuery);
            rec.first();
            if (rec.getRow() == 0) {
                TempInv = 1;
                RetVal = 'P' + PublicVar.Branch_Code + PUtility.Addzero(Integer.toString(TempInv), 6);
            } else {
                TempInv = rec.getInt("invcashno");
                RetVal = 'P' + PublicVar.Branch_Code + PUtility.Addzero(Integer.toString(TempInv), 6);
            }
            rec.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        }
        int UpdateInvNo = TempInv + 1;
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SQLQuery = "update branch set invcashno=" + UpdateInvNo;
            stmt.executeUpdate(SQLQuery);
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        }

        mysql.close();

        return RetVal;
    }

    public void bntCancelClick() {
        CancelInv();
    }

    public void CancelInv() {
        String TempInvNo = txtDocNo.getText();
        if (!TempInvNo.equals("")) {
            if (PrintOK.equals("Y")) {
                if (!VoidOK.equals("Y")) {
                    String VoidMessage = "";
                    GetVoidMsg frm = new GetVoidMsg(null, true);
                    frm.setVisible(true);
                    VoidMessage = GetVoidMsg.VoidMsg;
                    if (VoidMessage.equals("")) {
                        MSG.ERR(this, "กรุณาป้อนสาเหตุการยกเลิก...");
                    } else {
                        if (PUtility.ShowConfirmMsg("คุณต้องการยกเลิกใบกำกับภาษี/ใบเสร็จรับเงินนี้หรือไม่ ?")) {
                            /**
                             * * OPEN CONNECTION **
                             */
                            MySQLConnect mysql = new MySQLConnect();
                            mysql.open();
                            try {
                                Statement stmt = mysql.getConnection().createStatement();
                                String SqlQuery = "update invcashdoc set void=?,uservoid=?,voiddate=?,"
                                        + "voidmessage=? where invno=?";
                                PreparedStatement prm = mysql.getConnection().prepareStatement(SqlQuery);
                                prm.setString(1, "Y");
                                prm.setString(2, PublicVar._User);
                                prm.setString(3, SqlDateFmt.format(date));
                                prm.setString(4, PUtility.DataFull(VoidMessage, 30));
                                prm.setString(5, TempInvNo);
                                prm.executeUpdate();
                                prm.close();
                                stmt.close();
                            } catch (SQLException e2) {
                                MSG.ERR(e2.getMessage());
                            } finally {
                                mysql.close();
                            }
                            TCancel.setText("เอกสารยกเลิกโดย : " + PublicVar._User + "/" + DateFmt.format(date));
                            TCancelMsg.setText("  " + VoidMessage);
                            TCancel.setVisible(true);
                            TCancelMsg.setVisible(true);
                            VoidOK = "Y";
                            UpdateBillNo(txtMacNo.getText(), txtDocNoRef.getText(), "", "");
                            String BillNo = PublicVar.Branch_Code + "/" + txtMacNo.getText() + "/" + txtDocNoRef.getText();
                            UpdateAccr(BillNo, "");
                        }
                    }
                } else {
                    MSG.ERR(this, "เอกสารนี้ได้มีการยกเลิกไปแล้ว");
                }
            } else {
                MSG.ERR(this, "เอกสารนี้ยังไม่ได้จัดพิมพ์ต้นฉบับ...ไม่สามารถยกเลิกได้");
            }
        }
    }

    public void bntDisplayClick() {
        DisplayClick = true;
        DispInv1 frm = new DispInv1(null, true);
        frm.setVisible(true);
        if (!PublicVar.ReturnString.equals("")) {
            txtDocNo.setText(PublicVar.ReturnString);
            InvNoExit();
        }
        DisplayClick = false;
    }

    public void bntExitClick() {
        this.dispose();
    }

    public void bntPrintClick() {
        if (!txtDocNo.getText().equals("")) {
            bntSaveClick();
            try {
//                ViewReport vp = new ViewReport();
//                vp.printReportPVat(txtDocNo.getText());
                if (Value.printdriver) {
                    printINVDriver(0);
                    printINVDriver(1);
                } else {

                }
                UpdatePrintFlage(txtDocNo.getText());
            } catch (Exception e) {
                MSG.NOTICE(e.toString());
            }

            ClearVariable();
            txtDocNo.setFocusable(true);
            txtDocNo.setEditable(true);
            txtDocNo.requestFocus();
        }
    }

    public void UpdatePrintFlage(String InvNo) {
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "update invcashdoc set printok='Y',invuser=? where invno=?";
            PreparedStatement prm = mysql.getConnection().prepareStatement(SqlQuery);
            prm.setString(1, PublicVar._User);
            prm.setString(2, InvNo);
            prm.executeUpdate();
            prm.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        } finally {
            mysql.close();
        }
    }

    public void printINVDriver(int i) throws ParseException {
//        int i = 0;
        String t = "";
        Date TempInvDate = date;
        Date TempOnDate = date;
        TempInvDate = DateFmt.parse(txtDate.getText());
        TempOnDate = DateFmt.parse(txtDateRef.getText());

        NumberToString numToString = new NumberToString();

        CustomerConrol custControl = new CustomerConrol();
        CustomerBean custBean = new CustomerBean();
        custBean = custControl.getCustomer(txtCode.getText());

        BranchControl branch = new BranchControl();
        BranchBean branchBean = new BranchBean();
        branchBean = branch.getBranch();

        PosControl posBean = new PosControl();
        CompanyBean companyBean = new CompanyBean();
        companyBean = posBean.getCompany();
        // 1.Company Area
        t += "colspan=5 align=left><font face=Angsana New size=1>" + companyBean.getName() + "_";
        t += "colspan=5 align=left><font face=Angsana New size=1>" + companyBean.getAddress() + "_";
        t += "colspan=5 align=left><font face=Angsana New size=1>" + "Tel. : " + Space + companyBean.getTel() + TAB + "Fax : " + Space + companyBean.getFax() + "_";
        t += ("colspan=5 align=left><font face=Angsana New size=1>" + "_");
        t += "colspan=5 align=left><font face=Angsana New size=1>" + "เลขประจำตัวผู้เสียภาษี :" + TAB + companyBean.getTax() + "_";
        t += "colspan=5 align=left><font face=Angsana New size=1>" + "สาขาที่ออกใบกำกับภาษี :" + TAB + branchBean.getName() + "_";
        t += ("colspan=5 align=center><font face=Angsana New size=1>" + "-----------------------------------------------" + "_");
        // 2.Header Area
        if (i == 0) {
            t += ("colspan=1 align=center><font face=Angsana New size=1>" + "ต้นฉบับ" + "</td></font>" + "<td colspan=4 align=center><font face=Angsana New size=1>" + "ใบกำกับภาษีเต็มรูป" + "_");
        }
        if (i == 1) {
            t += ("colspan=1 align=left><font face=Angsana New size=1>" + "สำเนา" + "</td></font>" + "<td colspan=4 align=center><font face=Angsana New size=1>" + "ใบกำกับภาษีเต็มรูป" + "_");
        }
        t += "colspan=5 align=left><font face=Angsana New size=1>" + "เลขที่เอกสาร" + TAB + txtDocNo.getText() + "_";
        t += ("colspan=5 align=left><font face=Angsana New size=1>" + "วันที่/เวลา" + Space + PPrint_DatefmtThai.format(dateP) + "_");
        t += ("colspan=5 align=center><font face=Angsana New size=1>" + "-----------------------------------------------" + "_");
        // 3.Customer Area
        t += "colspan=5 align=left><font face=Angsana New size=1>" + "รหัสลูกค้า ID :" + Space + custBean.getSp_code() + "_";
        t += "colspan=5 align=left><font face=Angsana New size=1>" + custBean.getSp_Desc() + "_";
//        t += "colspan=5 align=left><font face=Angsana New size=1>" + "ที่อยู่ : " + "_";
        t += "colspan=5 align=left><font face=Angsana New size=1>" + custBean.getSp_Addr1() + "_";
        if (!custBean.getSp_Addr2().equals("")) {
            t += "colspan=5 align=left><font face=Angsana New size=1>" + custBean.getSp_Addr2() + "_";
        }
        t += "colspan=5 align=left><font face=Angsana New size=1>" + "Tel." + Space + custBean.getTel() + TAB + "Fax :" + Space + custBean.getFax() + "_";
//        t += "colspan=5 align=left><font face=Angsana New size=1>" + "โทรสาร : " + TAB + custBean.getFax() + "_";
        t += ("colspan=5 align=center><font face=Angsana New size=1>" + "-----------------------------------------------" + "_");
        t += ("colspan=5 align=left><font face=Angsana New size=1>" + "วันที่ออกใบกำกับภาษี" + TAB + DateFmt.format(TempOnDate) + "_");
        t += ("colspan=5 align=left><font face=Angsana New size=1>" + "เวลา(Time)" + TAB + txtTime.getText() + "_");
        t += ("colspan=5 align=left><font face=Angsana New size=1>" + "ลำดับเครื่องเก็บเงิน" + Space + Value.MACNO + "_");
        t += ("colspan=5 align=left><font face=Angsana New size=1>" + "หมายเลขเครื่องเก็บเงิน" + Space + POSHW.getTerminal() + "_");
        t += ("colspan=5 align=left><font face=Angsana New size=1>" + "เลขที่ใบกำกับภาษีอย่างย่อ" + Space + txtDocNoRef.getText() + "_");
        t += ("colspan=5 align=left><font face=Angsana New size=1>" + "พนักงานเก็บเงิน" + Space + txtCashier.getText() + "_");
        t += ("colspan=5 align=center><font face=Angsana New size=1>" + "_");
        t += ("colspan=5 align=center><font face=Angsana New size=1>" + "-----------------------------------------------" + "_");
        // 4.Detail Area
        t += ("align=left><font face=Angsana New size=1>" + "ลำดับที่" + "</td></font>"
                + "<td colspan=2 align=left><font face=Angsana New size=1>" + "รายการ (Description)" + "</td></font>"
                + "<td colspan=2 align=right><font face=Angsana New size=1>" + "จำนวนเงิน(Amount)" + "</td></font>"
                + "_");
        t += ("align=left><font face=Angsana New size=1>" + "1)" + "</td></font>"
                + "<td colspan=2 align=left><font face=Angsana New size=1>" + "อาหาร/เครื่องดื่ม/สินค้า" + "</td></font>"
                + "<td colspan=2 align=right><font face=Angsana New size=1>" + df.format(Double.parseDouble(txtAmountTotal.getText().replace(",", ""))) + "</td></font>"
                + "_");
        t += ("colspan=5 align=center><font face=Angsana New size=1>" + "-----------------------------------------------" + "_");
        t += "colspan=5 align=left><font face=Angsana New size=1>" + Space + numToString.number(Double.parseDouble(txtAmountTotal.getText().replace(",", ""))) + "_";
        t += "colspan=4 align=right><font face=Angsana New size=1>" + "หักส่วนลดการขาย" + "</td></font>"
                + "<td align=right><font face=Angsana New size=1>" + df.format(XDiscount) + "_";
//        t += "colspan=4 align=right><font face=Angsana New size=1>" + "หักเงินมัดจำ" + "</td></font>"
//                + "<td align=right><font face=Angsana New size=1>" + XEarnest + "_";
        t += "colspan=4 align=right><font face=Angsana New size=1>" + "หักเงินมัดจำ" + "</td></font>"
                + "<td align=right><font face=Angsana New size=1>" + df.format(XEarnest) + "_";
        t += "colspan=4 align=right><font face=Angsana New size=1>" + "ค่าบริการ (Service)" + "</td></font>"
                + "<td align=right><font face=Angsana New size=1>" + df.format(XService) + "_";
        t += "colspan=4 align=right><font face=Angsana New size=1>" + "จำนวนเงินก่อนภาษีมูลค่าเพิ่ม" + "</td></font>"
                + "<td align=right><font face=Angsana New size=1>" + df.format(XSubTotal) + "_";;
        t += "colspan=4 align=right><font face=Angsana New size=1>" + "ภาษีมูลค่าเพิ่ม" + Space + df.format(CONFIG.getP_Vat()) + Space + "%" + "</td></font>"
                + "<td align=right><font face=Angsana New size=1>" + df.format(XVat) + "_";
        t += "colspan=4 align=right><font face=Angsana New size=1>" + "จำนวนเงินรวมภาษีมูลค่าเพิ่ม" + "</td></font>"
                //                + "<td align=right><font face=Angsana New size=1>" + df.format(XAmount) + "_";
                //        t += "colspan=4 align=right><font face=Angsana New size=1>" + "ปัดเศษท้ายบิล" + "</td></font>"
                + "<td align=right><font face=Angsana New size=1>" + df.format(XNetDiff) + "_";
        t += ("colspan=5 align=left><font face=Angsana New size=1>" + "ชำระโดย" + "_");
        if (XCashPay != 0) {
            t += ("colspan=5 align=left><font face=Angsana New size=1>" + TAB + "เงินสด(Cash)" + "_");
        }
        if (XCrPay != 0) {
            t += ("colspan=5 align=left><font face=Angsana New size=1>" + TAB + "เครดิต(Credit)" + "_");
        }
        if (XCupon != 0) {
            t += ("colspan=5 align=left><font face=Angsana New size=1>" + TAB + "คูปอง" + "_");
        }
        if (XAccrAmt != 0) {
            t += ("colspan=5 align=left><font face=Angsana New size=1>" + TAB + "ลูกหนี้" + "_");
        }
        t += ("colspan=5 align=left><U><font face=Angsana New size=1>" + "หมายเหตุ" + "</U>" + "_");
        t += ("colspan=5 align=left><font face=Angsana New size=1>" + Space + txtRemark.getText() + "_");
        t += ("colspan=5 align=left><font face=Angsana New size=1>" + Space + txtRemark2.getText() + "_");
        t += ("colspan=5 align=left><font face=Angsana New size=1>" + "ผู้ติดต่อ : " + "_");
        t += ("colspan=5 align=left><font face=Angsana New size=1>" + Space + txtContact.getText() + "_");

        t += ("colspan=5 align=left><font face=Angsana New size=1>" + "_");
        t += ("colspan=5 align=left><font face=Angsana New size=1>" + "_");
        t += ("colspan=5 align=center><font face=Angsana New size=1>" + "ลงชื่อ......................................." + "_");
        t += ("colspan=5 align=center><font face=Angsana New size=1>" + "ผู้รับเงิน" + "_");

        PrintDriver pd = new PrintDriver();
        String[] strs = t.split("_");

        for (String data1 : strs) {
            pd.addTextIFont(data1);
            try {
                Thread.sleep(50);
            } catch (InterruptedException e) {
                
            }
        }
        pd.printHTML();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new MySQLConnect();
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                PrintInv1 dialog = new PrintInv1(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel TCancel;
    private javax.swing.JLabel TCancelMsg;
    private javax.swing.JLabel TPrintOK;
    private javax.swing.JButton bntCancel;
    private javax.swing.JButton bntDisplay;
    private javax.swing.JButton bntExit1;
    private javax.swing.JButton bntNew;
    private javax.swing.JButton bntPrint;
    private javax.swing.JButton bntSave;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField txtAddr1;
    private javax.swing.JTextField txtAddr2;
    private javax.swing.JFormattedTextField txtAmountTotal;
    private javax.swing.JTextField txtCashier;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtCustBranch;
    private javax.swing.JFormattedTextField txtDate;
    private javax.swing.JFormattedTextField txtDateRef;
    private javax.swing.JTextField txtDocNo;
    private javax.swing.JTextField txtDocNoRef;
    private javax.swing.JTextField txtFax;
    private javax.swing.JTextField txtMacNo;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPoNo;
    private javax.swing.JFormattedTextField txtPrice;
    private javax.swing.JTextField txtRemark;
    private javax.swing.JTextField txtRemark2;
    private javax.swing.JTextField txtTaxID;
    private javax.swing.JTextField txtTel1;
    private javax.swing.JTextField txtTime;
    private javax.swing.JFormattedTextField txtVat;
    // End of variables declaration//GEN-END:variables

    private String GetCrNo(String refno, String macno) {
        String str = "";
        String str2 = "";
//        try {
//            String sql = "SELECT decode(b_crcardno1,'snpfood') as bcardno1 FROM billcredit " +
//                    "where b_refno='"+refno+"' and b_macno='"+macno+"'";
////            System.out.println(sql);
//            MySQLConnect db1 = new MySQLConnect();
//            db1.dbconnect();
//            Statement stmt = mysql.getConnection().createStatement();
//            ResultSet rs = stmt.executeQuery(sql);
//            while(rs.next()){
//                str = rs.getString(1);
//                str2+= "XXXXXXXXXXX" + PUtility.Addzero(str,16).substring(12, 16)+",";
//            }
//            System.out.println(str2);
//        } catch (Exception e) {
//        }
        return str2;
    }
}
