package com.softpos.main.program;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import database.MySQLConnect;
import java.sql.PreparedStatement;
import util.MSG;

public class PrintInv2 extends javax.swing.JDialog {

    SimpleDateFormat SqlDateFmt = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
    SimpleDateFormat DateFmt = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
    SimpleDateFormat DateTimeFmt = new SimpleDateFormat("dd/MM/yyyy HH:mm", Locale.ENGLISH);
    SimpleDateFormat Timefmt = new SimpleDateFormat("HH:mm:ss");
    Date date = new Date();
    String PrintOK;
    String VoidOK;
    Double XTotalAmt;
    Double XSubTotal;
    Double XVat;
    Double XAmount;
    Double XDiscount;
    String XRegNo;
    Double XCashPay;
    Double XCrPay;
    String XCrNo;
    Double XCupon;
    Double XEarnest;
    Double XService;
    boolean NoEdit;
    boolean DisplayClick;
    boolean FindCustomer;
    static DecimalFormat DecFmt = new DecimalFormat("##,###,##0.00");
    static DecimalFormat IntFmt = new DecimalFormat("##,###,##0");

    /**
     * Creates new form PrintInv1
     */
    public PrintInv2(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        initComponents();
        ClearVariable();

        DisplayClick = false;
        FindCustomer = false;

        CustCode.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        InvNo = new javax.swing.JTextField();
        InvDate = new javax.swing.JFormattedTextField();
        Contack = new javax.swing.JTextField();
        PONo = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        CustCr = new javax.swing.JFormattedTextField();
        jLabel22 = new javax.swing.JLabel();
        DueDate = new javax.swing.JFormattedTextField();
        jLabel23 = new javax.swing.JLabel();
        ArCode = new javax.swing.JTextField();
        TPrintOK = new javax.swing.JLabel();
        TCancel = new javax.swing.JLabel();
        TCancelMsg = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        CustTel = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        CustAddr2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        CustCode = new javax.swing.JTextField();
        CustAddr1 = new javax.swing.JTextField();
        CustName = new javax.swing.JTextField();
        CustFax = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        CustRemark = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        CustRemark2 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        MacNo = new javax.swing.JTextField();
        RefNo = new javax.swing.JTextField();
        OnDate = new javax.swing.JFormattedTextField();
        OnTime = new javax.swing.JTextField();
        Cashier = new javax.swing.JTextField();
        SubTotal = new javax.swing.JFormattedTextField();
        Vat = new javax.swing.JFormattedTextField();
        Amount = new javax.swing.JFormattedTextField();
        bntNew = new javax.swing.JButton();
        bntCancel = new javax.swing.JButton();
        bntSave = new javax.swing.JButton();
        bntDisplay = new javax.swing.JButton();
        bntPrint = new javax.swing.JButton();
        bntExit1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("โปรแกรมพิมพ์ใบกำกับภาษี/ใบแจ้งหนี้");
        setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(243, 187, 225));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBackground(new java.awt.Color(34, 229, 234));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, java.awt.Color.white));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(" ใบกำกับภาษี/ใบแจ้งหนี้");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1)
        );

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("เลขที่เอกสาร");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("วันที่ (Date)");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("ผู้ติดต่อ");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("PO Number");

        InvNo.setFont(new java.awt.Font("Norasi", 1, 16)); // NOI18N
        InvNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                InvNoFocusLost(evt);
            }
        });
        InvNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                InvNoKeyPressed(evt);
            }
        });

        InvDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        InvDate.setFocusable(false);
        InvDate.setFont(new java.awt.Font("Norasi", 1, 16)); // NOI18N

        Contack.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        Contack.setNextFocusableComponent(PONo);
        Contack.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ContackKeyPressed(evt);
            }
        });

        PONo.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        PONo.setNextFocusableComponent(MacNo);
        PONo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PONoKeyPressed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setText("เครดิต (วัน)");

        CustCr.setEditable(false);
        CustCr.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));
        CustCr.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CustCr.setFocusable(false);
        CustCr.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        CustCr.setRequestFocusEnabled(false);

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel22.setText("กำหนดชำระ");

        DueDate.setEditable(false);
        DueDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        DueDate.setFocusable(false);
        DueDate.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel23.setText("รหัสลูกหนี้");

        ArCode.setEditable(false);
        ArCode.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        ArCode.setFocusable(false);

        TPrintOK.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        TPrintOK.setText("jLabel21");

        TCancel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        TCancel.setText("jLabel21");

        TCancelMsg.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        TCancelMsg.setText("jLabel21");

        jPanel4.setBackground(new java.awt.Color(255, 204, 255));

        CustTel.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        CustTel.setNextFocusableComponent(CustFax);
        CustTel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CustTelKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("รหัสลูกค้า (Code)");

        CustAddr2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        CustAddr2.setNextFocusableComponent(CustTel);
        CustAddr2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CustAddr2KeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("โทรศัพท์");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("...");

        CustCode.setFont(new java.awt.Font("Norasi", 1, 16)); // NOI18N
        CustCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustCodeActionPerformed(evt);
            }
        });
        CustCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CustCodeFocusLost(evt);
            }
        });
        CustCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CustCodeKeyPressed(evt);
            }
        });

        CustAddr1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        CustAddr1.setNextFocusableComponent(CustAddr2);
        CustAddr1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustAddr1ActionPerformed(evt);
            }
        });
        CustAddr1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CustAddr1KeyPressed(evt);
            }
        });

        CustName.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        CustName.setNextFocusableComponent(CustAddr1);
        CustName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustNameActionPerformed(evt);
            }
        });
        CustName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CustNameFocusLost(evt);
            }
        });
        CustName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CustNameKeyPressed(evt);
            }
        });

        CustFax.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        CustFax.setNextFocusableComponent(CustRemark);
        CustFax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustFaxActionPerformed(evt);
            }
        });
        CustFax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CustFaxKeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("หมายเหตุ");

        CustRemark.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        CustRemark.setNextFocusableComponent(CustRemark2);
        CustRemark.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CustRemarkKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("ชื่อลูกค้า (Name)");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("ที่อยู่ (Address)");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("โทรสาร");

        CustRemark2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        CustRemark2.setNextFocusableComponent(Contack);
        CustRemark2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CustRemark2KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGap(106, 106, 106)
                            .addComponent(jLabel5))
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel2))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CustCode, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CustName, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CustAddr1, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CustAddr2, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CustTel, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CustFax, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CustRemark, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CustRemark2, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CustCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(CustName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CustAddr1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CustAddr2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CustTel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CustFax, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(5, 5, 5)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CustRemark, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CustRemark2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel21)
                            .addComponent(jLabel23)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(CustCr, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ArCode, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PONo, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TPrintOK, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TCancelMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(InvNo, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(InvDate, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Contack, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InvNo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InvDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Contack, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(CustCr, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22)
                            .addComponent(DueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ArCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(PONo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TPrintOK, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TCancelMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(247, 242, 188));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, " อ้างถึงใบกำกับภาษีอย่างย่อเลขที่ ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Mac-No");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("ใบกำกับภาษีอย่างย่อ");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("วันที่ (Date)");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("เวลา (Time)");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("Cashier");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("มูลค่าสินค้า/บริการ");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setText("ภาษีมูลค่าเพิ่ม");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setText("จำนวนเงิน (Amount)");

        MacNo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        MacNo.setNextFocusableComponent(RefNo);
        MacNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MacNoActionPerformed(evt);
            }
        });
        MacNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                MacNoFocusLost(evt);
            }
        });
        MacNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MacNoKeyPressed(evt);
            }
        });

        RefNo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        RefNo.setNextFocusableComponent(CustCode);
        RefNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RefNoFocusLost(evt);
            }
        });
        RefNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                RefNoKeyPressed(evt);
            }
        });

        OnDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        OnDate.setFocusable(false);
        OnDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        OnTime.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        OnTime.setFocusable(false);

        Cashier.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Cashier.setFocusable(false);

        SubTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        SubTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        SubTotal.setFocusable(false);
        SubTotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        Vat.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        Vat.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Vat.setFocusable(false);
        Vat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        Amount.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        Amount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Amount.setFocusable(false);
        Amount.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(MacNo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(RefNo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(OnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(OnTime, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(Cashier, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SubTotal)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(Vat, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(Amount, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel14)
                    .addComponent(jLabel20)
                    .addComponent(jLabel19)
                    .addComponent(jLabel18))
                .addGap(0, 0, 0)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RefNo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OnTime, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cashier, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Amount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Vat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MacNo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        bntNew.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bntNew.setText("เพิ่มเอกสารใหม่ &Clear");
        bntNew.setFocusable(false);
        bntNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bntNew.setIconTextGap(0);
        bntNew.setMargin(new java.awt.Insets(1, 1, 1, 1));
        bntNew.setPreferredSize(new java.awt.Dimension(150, 70));
        bntNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bntNew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                bntNewMouseReleased(evt);
            }
        });
        bntNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntNewActionPerformed(evt);
            }
        });

        bntCancel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bntCancel.setText("ยกเลิกเอกสาร");
        bntCancel.setFocusable(false);
        bntCancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bntCancel.setIconTextGap(0);
        bntCancel.setMargin(new java.awt.Insets(1, 1, 1, 1));
        bntCancel.setPreferredSize(new java.awt.Dimension(91, 70));
        bntCancel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bntCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                bntCancelMouseReleased(evt);
            }
        });

        bntSave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bntSave.setText("บันทึกข้อมูล");
        bntSave.setFocusable(false);
        bntSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bntSave.setIconTextGap(0);
        bntSave.setPreferredSize(new java.awt.Dimension(80, 70));
        bntSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bntSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                bntSaveMouseReleased(evt);
            }
        });

        bntDisplay.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bntDisplay.setText("แสดงรายการ");
        bntDisplay.setFocusable(false);
        bntDisplay.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bntDisplay.setIconTextGap(0);
        bntDisplay.setPreferredSize(new java.awt.Dimension(90, 70));
        bntDisplay.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bntDisplay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                bntDisplayMouseReleased(evt);
            }
        });

        bntPrint.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bntPrint.setText("พิมพ์(Print)");
        bntPrint.setFocusable(false);
        bntPrint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bntPrint.setIconTextGap(0);
        bntPrint.setPreferredSize(new java.awt.Dimension(80, 70));
        bntPrint.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bntPrint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                bntPrintMouseReleased(evt);
            }
        });

        bntExit1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bntExit1.setText("ออก(Exit)");
        bntExit1.setFocusable(false);
        bntExit1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bntExit1.setIconTextGap(0);
        bntExit1.setPreferredSize(new java.awt.Dimension(80, 70));
        bntExit1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bntExit1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                bntExit1MouseReleased(evt);
            }
        });

        jMenu1.setText("Function");
        jMenu1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jMenuItem1.setText("เพิ่มเอกสารใหม่&Clear");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jMenuItem5.setText("ยกเลิกเอกสาร");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jMenuItem2.setText("บันทึกข้อมูล (Save/Update)");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jMenuItem3.setText("แสดงรายการ");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);
        jMenu1.add(jSeparator1);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jMenuItem4.setText("ออกจากการทำงาน (Exit)");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bntNew, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bntCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bntSave, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bntDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bntPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bntExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bntNew, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntSave, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1018, 586));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

private void bntCancelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bntCancelMouseReleased
    bntCancelClick();
}//GEN-LAST:event_bntCancelMouseReleased

private void bntSaveMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bntSaveMouseReleased
    bntSaveClick();
}//GEN-LAST:event_bntSaveMouseReleased

private void bntDisplayMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bntDisplayMouseReleased
    bntDisplayClick();
}//GEN-LAST:event_bntDisplayMouseReleased

private void bntPrintMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bntPrintMouseReleased
    if (!PrintOK.equals("Y")) {
        bntPrintClick();
    }

}//GEN-LAST:event_bntPrintMouseReleased

private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
    bntNewClick();
}//GEN-LAST:event_jMenuItem1ActionPerformed

private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
    bntSaveClick();
}//GEN-LAST:event_jMenuItem2ActionPerformed

private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
    bntDisplayClick();
}//GEN-LAST:event_jMenuItem3ActionPerformed

private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
    bntExitClick();
}//GEN-LAST:event_jMenuItem4ActionPerformed

private void bntExit1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bntExit1MouseReleased
    FindCustomer = true;
    bntExitClick();
}//GEN-LAST:event_bntExit1MouseReleased

private void InvNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_InvNoFocusLost
    InvNoExit();
}//GEN-LAST:event_InvNoFocusLost

private void InvNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InvNoKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        if (CustCode.getText().equals("")) {
            CustCode.setFocusable(true);
            CustCode.requestFocus();
        } else {
            CustName.setFocusable(true);
            CustName.requestFocus();
        }
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntExitClick();
    }

}//GEN-LAST:event_InvNoKeyPressed

private void CustAddr1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustAddr1ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_CustAddr1ActionPerformed

private void CustCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CustCodeFocusLost
    CustCodeExit();
}//GEN-LAST:event_CustCodeFocusLost

private void CustNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CustNameFocusLost
    CustNameExit();
}//GEN-LAST:event_CustNameFocusLost

private void MacNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MacNoFocusLost
    MacNoExit();
}//GEN-LAST:event_MacNoFocusLost

private void RefNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RefNoFocusLost
    MacNoExit();
}//GEN-LAST:event_RefNoFocusLost

private void CustCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustCodeActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_CustCodeActionPerformed

private void CustCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustCodeKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        CustName.requestFocus();
    } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        dispose();
        //bntNewClick();
    } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
        FindCustomer = true;
        FindAr frm = new FindAr(null, true);
        frm.setVisible(true);
        if (!PublicVar.ReturnString.equals("")) {
            CustCode.setText(PublicVar.ReturnString);
            CustName.requestFocus();
        }
        FindCustomer = true;
    }

}//GEN-LAST:event_CustCodeKeyPressed

private void bntNewMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bntNewMouseReleased
    ClearVariable();
    InvNo.setFocusable(true);
    InvNo.setEditable(true);
    InvNo.requestFocus();
}//GEN-LAST:event_bntNewMouseReleased

private void CustNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustNameActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_CustNameActionPerformed

private void CustNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustNameKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        CustAddr1.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntNewClick();
    }
}//GEN-LAST:event_CustNameKeyPressed

private void CustAddr1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustAddr1KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        CustAddr2.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntNewClick();
    }
}//GEN-LAST:event_CustAddr1KeyPressed

private void CustAddr2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustAddr2KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        CustTel.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntNewClick();
    }
}//GEN-LAST:event_CustAddr2KeyPressed

private void CustTelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustTelKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        CustFax.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntNewClick();
    }
}//GEN-LAST:event_CustTelKeyPressed

private void CustFaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustFaxActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_CustFaxActionPerformed

private void CustFaxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustFaxKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        CustRemark.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntNewClick();
    }
}//GEN-LAST:event_CustFaxKeyPressed

private void CustRemarkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustRemarkKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        CustRemark2.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        ClearVariable();
    }
}//GEN-LAST:event_CustRemarkKeyPressed

private void CustRemark2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustRemark2KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        Contack.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntNewClick();
    }
}//GEN-LAST:event_CustRemark2KeyPressed

private void ContackKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ContackKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        PONo.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntNewClick();
    }
}//GEN-LAST:event_ContackKeyPressed

private void PONoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PONoKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        MacNo.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntNewClick();
    }
}//GEN-LAST:event_PONoKeyPressed

private void MacNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MacNoKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        RefNo.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntNewClick();
    }
}//GEN-LAST:event_MacNoKeyPressed

private void RefNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RefNoKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        MacNoExit();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntNewClick();
    }
}//GEN-LAST:event_RefNoKeyPressed

private void bntNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntNewActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_bntNewActionPerformed

private void MacNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MacNoActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_MacNoActionPerformed

private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
    bntCancelClick();
}//GEN-LAST:event_jMenuItem5ActionPerformed
    public void InvNoExit() {
        String TempInvNo = InvNo.getText();
        SetReadOnlyOff();
        if (!TempInvNo.equals("")) {
            /**
             * * OPEN CONNECTION **
             */
            MySQLConnect mysql = new MySQLConnect();
            mysql.open();
            try {
                Statement stmt = mysql.getConnection().createStatement();
                String SQLQuery = "Select *from invcashdoc where invno='" + TempInvNo + "'";
                ResultSet rec = stmt.executeQuery(SQLQuery);
                rec.first();
                if (rec.getRow() == 0) {
                    MSG.ERR(this, "ไม่พบใบกำกับภาษี/ใบแจ้งหนี้ที่ต้องการ...");
                    ClearVariable();
                } else {
                    InvDate.setText(DateFmt.format(rec.getDate("invdate")));
                    CustCode.setText(rec.getString("custcode"));
                    CustName.setText(rec.getString("custname"));
                    CustAddr1.setText(rec.getString("custaddr1"));
                    CustAddr2.setText(rec.getString("custaddr2"));
                    CustTel.setText(rec.getString("custtel"));
                    CustFax.setText(rec.getString("custfax"));
                    Contack.setText(rec.getString("contack"));
                    CustRemark.setText(rec.getString("remark"));
                    CustRemark2.setText(rec.getString("remark2"));
                    PONo.setText(rec.getString("pono"));
                    CustCr.setText(IntFmt.format(rec.getInt("custcr")));
                    ArCode.setText(rec.getString("arcode"));
                    DueDate.setText(DateFmt.format(rec.getDate("duedate")));

                    MacNo.setText(rec.getString("macno"));
                    RefNo.setText(rec.getString("refno"));
                    OnDate.setText(DateFmt.format(rec.getDate("ondate")));
                    OnTime.setText(rec.getString("ontime"));
                    Cashier.setText(rec.getString("cashier"));
                    OnTime.setText(rec.getString("ontime"));
                    SubTotal.setValue(rec.getDouble("subtotal"));
                    Vat.setValue(rec.getDouble("vat"));
                    Amount.setValue(rec.getDouble("amount"));

                    XTotalAmt = rec.getDouble("totalamt");
                    XSubTotal = rec.getDouble("subtotal");
                    XVat = rec.getDouble("vat");
                    XAmount = rec.getDouble("amount");
                    XDiscount = rec.getDouble("discount");
                    XRegNo = rec.getString("regno");
                    XCashPay = rec.getDouble("cashpay");
                    XCrPay = rec.getDouble("crpay");
                    XCrNo = rec.getString("crno");
                    XCupon = rec.getDouble("cupon");
                    XEarnest = rec.getDouble("earnest");
                    XService = rec.getDouble("service");

                    PrintOK = rec.getString("printok");
                    if (PrintOK.equals("Y")) {
                        TPrintOK.setText("พิมพ์เอกสารแล้ว โดย : " + rec.getString("invuser"));
                        TPrintOK.setVisible(true);
                        SetReadOnlyOn();
                    }
                    VoidOK = rec.getString("void");
                    if (VoidOK.equals("Y")) {
                        TCancel.setText("เอกสารยกเลิกโดย : " + rec.getString("uservoid"));
                        TCancelMsg.setText(rec.getString("voidmessage"));
                        TCancel.setVisible(true);
                        TCancelMsg.setVisible(true);
                        SetReadOnlyOn();
                    }
                    try {
                        Statement stmt2 = mysql.getConnection().createStatement();
                        String SQLQuery2 = "Select *from billno where (b_refno='" + RefNo.getText() + "') and "
                                + "(b_macno='" + MacNo.getText() + "') and (b_void<>'V')";
                        ResultSet rec2 = stmt.executeQuery(SQLQuery2);
                        rec2.first();
                        if (rec2.getRow() == 0) {
                        } else {
                            NoEdit = true;
                            MacNo.setFocusable(false);
                            RefNo.setFocusable(false);
                        }
                        rec2.close();
                        stmt2.close();
                    } catch (SQLException e2) {
                        MSG.ERR(e2.getMessage());
                    }
                    InvNo.setFocusable(true);
                    if (!CustCode.getText().equals("")) {
                        CustName.requestFocus();
                    } else {
                        CustCode.requestFocus();
                    }
                }
                rec.close();
                stmt.close();
            } catch (SQLException e) {
                MSG.ERR(e.getMessage());
            } finally {
                mysql.close();
            }
        } else {
            if (!DisplayClick) {
                InvNo.setText("***NEW***");
                InvNo.setFocusable(false);
                if (!CustCode.getText().equals("")) {
                    CustName.requestFocus();
                } else {
                    CustCode.requestFocus();
                }
            }
        }
    }

    public void CustCodeExit() {
        if (!CustCode.getText().equals("")) {
            /**
             * * OPEN CONNECTION **
             */
            MySQLConnect mysql = new MySQLConnect();
            mysql.open();
            try {
                Statement stmt = mysql.getConnection().createStatement();
                String SQLQuery = "Select *from custfile where sp_code='" + CustCode.getText() + "'";
                ResultSet rec = stmt.executeQuery(SQLQuery);
                rec.first();
                if (rec.getRow() == 0) {
                } else {
                    CustCode.setText(rec.getString("sp_code"));
                    CustName.setText(rec.getString("sp_desc"));
                    CustAddr1.setText(rec.getString("sp_addr1"));
                    CustAddr2.setText(rec.getString("sp_addr2") + " " + rec.getString("sp_zip"));
                    CustTel.setText(rec.getString("tel"));
                    CustFax.setText(rec.getString("fax"));
                    Contack.setText(rec.getString("contack"));
                    CustRemark.setText(rec.getString("remark"));
                    CustRemark2.setText("");
                    MacNo.requestFocus();
                }
                rec.close();
                stmt.close();
            } catch (SQLException e) {
                MSG.ERR(e.getMessage());
            } finally {
                mysql.close();
            }
        } else {
            if (!InvNo.isFocusable()) {
                if ((!FindCustomer) && (!DisplayClick)) {
                    MSG.ERR(this, "กรุณาป้อนรหัสลูกค้า...(ในกรณีที่เป็นลูกค้าใหม่...ให้ป้อนรหัสลูกค้าใหม่ก่อนการทำรายการ...)");
                    CustCode.requestFocus();
                }
            }
        }

    }

    public void CustNameExit() {
        if ((CustAddr1.getText().equals("")) & (PrintOK.equals("N"))) {
            /**
             * * OPEN CONNECTION **
             */
            MySQLConnect mysql = new MySQLConnect();
            mysql.open();
            try {
                Statement stmt = mysql.getConnection().createStatement();
                String SQLQuery = "Select *from custfile where sp_desc='" + CustName.getText() + "'";
                ResultSet rec = stmt.executeQuery(SQLQuery);
                rec.first();
                if (rec.getRow() == 0) {
                } else {
                    CustCode.setText(rec.getString("sp_code"));
                    CustName.setText(rec.getString("sp_desc"));
                    CustAddr1.setText(rec.getString("sp_addr1"));
                    CustAddr2.setText(rec.getString("sp_addr2") + " " + rec.getString("sp_zip"));
                    CustTel.setText(rec.getString("tel"));
                    CustFax.setText(rec.getString("fax"));
                    Contack.setText(rec.getString("contack"));
                    CustRemark.setText(rec.getString("remark"));
                    //CustRemark2.setText(rec.getString("remark2"));
                }
                rec.close();
                stmt.close();
            } catch (SQLException e) {
                MSG.ERR(e.getMessage());
            } finally {
                mysql.close();
            }
        }
    }

    public void MacNoExit() {
        String TempInv;
        String TempType;
        if ((!MacNo.getText().equals("")) & (!RefNo.getText().equals("")) & (!NoEdit)) {
            /**
             * * OPEN CONNECTION **
             */
            MySQLConnect mysql = new MySQLConnect();
            mysql.open();
            try {
                Statement stmt = mysql.getConnection().createStatement();
                String SQLQuery = "Select *from billno where (b_refno='" + RefNo.getText() + "') and "
                        + "(b_macno='" + MacNo.getText() + "') and (b_void<>'V')";
                ResultSet rec = stmt.executeQuery(SQLQuery);
                rec.first();
                if (rec.getRow() == 0) {
                    MSG.ERR(this, "ไม่พบรายการขายของใบกำกับภาษีอย่างย่อเลขที่ " + RefNo.getText() + " ที่เครื่อง " + MacNo.getText() + " กรุณาตรวจสอบ...");
                    MacNo.setText("");
                    RefNo.setText("");
                    MacNo.requestFocus();
                } else {
                    TempInv = rec.getString("b_invno");
                    TempType = rec.getString("b_invtype");
                    if (((TempInv.equals("")) & (TempType.equals(""))) | (TempInv.equals(InvNo.getText()))) {
                        OnDate.setText(DateFmt.format(rec.getDate("b_ondate")));
                        OnTime.setText(rec.getString("b_ontime"));
                        Cashier.setText(rec.getString("b_cashier"));
                        XTotalAmt = rec.getDouble("b_total");
                        XVat = rec.getDouble("b_vat");
                        XAmount = rec.getDouble("b_nettotal");
                        XService = rec.getDouble("b_serviceamt");
                        XCashPay = rec.getDouble("b_cash");
                        XCrPay = rec.getDouble("b_cramt1");
//                        XCrNo = rec.getString("b_cardno1")+"/"+rec.getString("b_appcode1");
                        XCrNo = GetCrNo(RefNo.getText(), MacNo.getText());
                        XCupon = rec.getDouble("b_giftvoucher");
                        XEarnest = rec.getDouble("b_earnest");
                        XRegNo = PUtility.SeekRegNo(MacNo.getText());
                        XSubTotal = XAmount - XVat;
                        XDiscount = rec.getDouble("b_itemdiscamt")
                                + rec.getDouble("b_fastdiscamt")
                                + rec.getDouble("b_empdiscamt")
                                + rec.getDouble("b_traindiscamt")
                                + rec.getDouble("b_memdiscamt")
                                + rec.getDouble("b_subdiscamt")
                                + rec.getDouble("b_subdiscbath")
                                + rec.getDouble("b_prodiscamt")
                                + rec.getDouble("b_cupondiscamt")
                                + rec.getDouble("b_spadiscamt");
                        SubTotal.setValue(XSubTotal);
                        ArCode.setText(rec.getString("b_accrcode"));
                        Vat.setValue(XVat);
                        Amount.setValue(XAmount);
                    } else {
                        if (!rec.getString("b_accrcode").equals("")) {
                            if (TempType.equals("1")) {
                                MSG.ERR(this, "ใบกำกับภาษีอย่างย่อเลขที่ " + MacNo.getText() + "/" + RefNo.getText() + " มีการพิมพ์ใบกำกับภาษีแล้วเลขที่ " + TempInv);
                            } else {
                                MSG.ERR(this, "ใบกำกับภาษีอย่างย่อเลขที่ " + MacNo.getText() + "/" + RefNo.getText() + " มีการพิมพ์ใบกำกับภาษีแล้วเลขที่ " + TempInv);
                            }
                        } else {
                            MSG.ERR(this, "ใบกำกับภาษีอย่างย่อเลขที่ " + MacNo.getText() + "/" + RefNo.getText() + "ไม่มีการบันทึกการขายเป็นลูกหนี้ ไม่สามารถพิมพ์ใบกำกับภาษี/ใบแจ้งหนี้ได้... ");
                        }
                        MacNo.setText("");
                        RefNo.setText("");
                        MacNo.requestFocus();
                    }
                }
                rec.close();
                stmt.close();
            } catch (SQLException e2) {
                MSG.ERR(e2.getMessage());
            } finally {
                mysql.close();
            }
        }
    }

    public void ClearVariable() {
        NoEdit = false;
        XAmount = 0.0;
        PrintOK = "N";
        VoidOK = "N";
        InvNo.setText("");
        InvDate.setText(DateFmt.format(date));
        Contack.setText("");
        PONo.setText("");
        ArCode.setText("");
        DueDate.setText("");
        CustCr.setText("0");
        CustCode.setText("");
        CustName.setText("");
        CustAddr1.setText("");
        CustAddr2.setText("");
        CustTel.setText("");
        CustFax.setText("");
        CustRemark.setText("");
        CustRemark2.setText("");
        MacNo.setText("");
        RefNo.setText("");
        OnDate.setText("");
        OnTime.setText("");
        Cashier.setText("");
        SubTotal.setValue(0);
        Vat.setValue(0);
        Amount.setValue(0);
        //SetReadOnlyOff() ;
        TPrintOK.setText("");
        TCancel.setText("");
        TCancelMsg.setText("");
        InvNo.setEnabled(true);
        InvNo.setEditable(true);
        InvNo.requestFocus();
    }

    public void bntNewClick() {
        ClearVariable();
        InvNo.setFocusable(true);
        InvNo.requestFocus();
    }

    public void SetReadOnlyOff() {
        InvNo.setEnabled(true);
        CustCode.setFocusable(true);
        CustName.setFocusable(true);
        CustAddr1.setFocusable(true);
        CustAddr2.setFocusable(true);
        CustTel.setFocusable(true);
        CustFax.setFocusable(true);
        CustRemark.setFocusable(true);
        Contack.setFocusable(true);
        PONo.setFocusable(true);
        MacNo.setFocusable(true);
        RefNo.setFocusable(true);
    }

    public void SetReadOnlyOn() {
        InvNo.setEnabled(false);
        CustCode.setFocusable(false);
        CustName.setFocusable(false);
        CustAddr1.setFocusable(false);
        CustAddr2.setFocusable(false);
        CustTel.setFocusable(false);
        CustFax.setFocusable(false);
        CustRemark.setFocusable(false);
        CustRemark2.setFocusable(false);
        Contack.setFocusable(false);
        PONo.setFocusable(false);
        MacNo.setFocusable(false);
        RefNo.setFocusable(false);
    }

    public void bntSaveClick() {
        String TempInvNo = InvNo.getText();
        if ((!InvNo.getText().equals("")) & (!CustName.getText().equals("")) & (XAmount != 0) & (ValidSave())) {
            if (!VoidOK.equals("Y")) {
                if (TempInvNo.equals("***NEW***")) {
                    TempInvNo = FindMaxInvNo();
                }
                InvNo.setText(TempInvNo);
                if (SeekInvNo(TempInvNo)) {
                    UpdateInv(TempInvNo);
                } else {
                    InsertInv(TempInvNo);
                }

                String BillNo = PublicVar.Branch_Code + "/" + MacNo.getText() + "/" + RefNo.getText();
                UpdateAccr(BillNo, TempInvNo);
                UpdateBillNo(MacNo.getText(), RefNo.getText(), TempInvNo, "1");
                InsertDetail(TempInvNo, MacNo.getText(), RefNo.getText());
                if (!CustCode.getText().equals("")) {
                    if (SeekCustomer(CustCode.getText())) {
                        UpdateCustomer(CustCode.getText());
                    } else {
                        InsertCustomer(CustCode.getText());
                    }
                }

            }
        }
    }

    public Boolean ValidSave() {
        Boolean RetVal = true;
        if (CustCode.getText().length() > 10) {
            MSG.ERR(this, "รหัสลูกค้าสามารถนาป้อนได้ไม่เกิน 10 ตัวอักษร");
            RetVal = false;
            CustCode.requestFocus();
        } else if (CustName.getText().length() > 80) {
            MSG.ERR(this, "ชื่อลูกค้าสามารถนาป้อนได้ไม่เกิน 80 ตัวอักษร");
            RetVal = false;
            CustName.requestFocus();
        } else if (CustAddr1.getText().length() > 80) {
            MSG.ERR(this, "ที่อยู่ลูกค้าสามารถนาป้อนได้ไม่เกิน 80 ตัวอักษร");
            RetVal = false;
            CustAddr1.requestFocus();
        } else if (CustAddr2.getText().length() > 80) {
            MSG.ERR(this, "ที่อยู่ลูกค้าสามารถนาป้อนได้ไม่เกิน 80 ตัวอักษร");
            RetVal = false;
            CustAddr2.requestFocus();
        } else if (CustTel.getText().length() > 25) {
            MSG.ERR(this, "เบอร์โทรศัพทลูกค้าสามารถนาป้อนได้ไม่เกิน 25 ตัวอักษร");
            RetVal = false;
            CustTel.requestFocus();
        } else if (CustFax.getText().length() > 25) {
            MSG.ERR(this, "เบอร์โทรสารลูกค้าสามารถนาป้อนได้ไม่เกิน 25 ตัวอักษร");
            RetVal = false;
            CustFax.requestFocus();
        } else if (CustRemark.getText().length() > 50) {
            MSG.ERR(this, "หมายเหตุสามารถนาป้อนได้ไม่เกิน 50 ตัวอักษร");
            RetVal = false;
            CustRemark.requestFocus();
        } else if (CustRemark2.getText().length() > 50) {
            MSG.ERR(this, "หมายเหตุสามารถนาป้อนได้ไม่เกิน 50 ตัวอักษร");
            RetVal = false;
            CustRemark2.requestFocus();
        } else if (Contack.getText().length() > 40) {
            MSG.ERR(this, "ชื่อผู้ติดต่อสามารถนาป้อนได้ไม่เกิน 50 ตัวอักษร");
            RetVal = false;
            Contack.requestFocus();
        } else if (PONo.getText().length() > 30) {
            MSG.ERR(this, "PONO สามารถป้อนได้ไม่เกิน 30 ตัวอักษร");
            RetVal = false;
            PONo.requestFocus();
        }
        return RetVal;
    }

    public void InsertCustomer(String CustCode) {
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "insert into custfile (sp_code,sp_desc,sp_addr1,sp_addr2,tel,fax,sp_zip,remark,"
                    + "contack,sp_date) values (?,?,?,?,?,?,?,?,?,?)";
            PreparedStatement prm = mysql.getConnection().prepareStatement(SqlQuery);
            prm.setString(1, CustCode);
            prm.setString(2, CustName.getText());
            prm.setString(3, CustAddr1.getText());
            prm.setString(4, CustAddr2.getText());
            prm.setString(5, CustTel.getText());
            prm.setString(6, CustFax.getText());
            prm.setString(7, "");
            prm.setString(8, CustRemark.getText());
            prm.setString(9, Contack.getText());
            prm.setString(10, SqlDateFmt.format(date));
            prm.executeUpdate();
            prm.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        } finally {
            mysql.close();
        }
    }

    public void UpdateCustomer(String CustCode) {
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "update custfile set sp_desc=?,sp_addr1=?,sp_addr2=?,tel=?,fax=?,sp_zip=?"
                    + ",remark=?,contack=?,sp_date=? where sp_code=?";
            PreparedStatement prm = mysql.getConnection().prepareStatement(SqlQuery);
            prm.setString(1, CustName.getText());
            prm.setString(2, CustAddr1.getText());
            prm.setString(3, CustAddr2.getText());
            prm.setString(4, CustTel.getText());
            prm.setString(5, CustFax.getText());
            prm.setString(6, "");
            prm.setString(7, CustRemark.getText());
            prm.setString(8, Contack.getText());
            prm.setString(9, SqlDateFmt.format(date));
            prm.setString(10, CustCode);
            prm.executeUpdate();
            prm.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        } finally {
            mysql.close();
        }
    }

    public void InsertDetail(String InvNo, String MacNo, String RefNo) {
        Date TempInvDate = date;
        try {
            TempInvDate = DateFmt.parse(InvDate.getText());
        } catch (Exception e) {

        }

        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "delete from invdetail where invno=?";
            PreparedStatement prm = mysql.getConnection().prepareStatement(SqlQuery);
            prm.setString(1, InvNo);
            prm.executeUpdate();
            prm.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        }
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SQLQuery = "Select *from t_sale where (macno='" + MacNo + "') and (r_refno='" + RefNo + "')";
            ResultSet rec = stmt.executeQuery(SQLQuery);
            rec.first();
            if (rec.getRow() == 0) {
            } else {
                do {
                    try {
                        Statement stmt2 = mysql.getConnection().createStatement();
                        String SqlQuery = "insert into invdetail (invno,invdate,pcode,pname,price,pqty,"
                                + "pamount,punit,pgroup) values (?,?,?,?,?,?,?,?,?)";
                        PreparedStatement prm = mysql.getConnection().prepareStatement(SqlQuery);
                        prm.setString(1, InvNo);
                        prm.setString(2, SqlDateFmt.format(TempInvDate));
                        prm.setString(3, rec.getString("r_plucode"));
                        prm.setString(4, rec.getString("r_pname"));
                        prm.setDouble(5, rec.getDouble("r_price"));
                        prm.setDouble(6, rec.getDouble("r_quan"));
                        prm.setDouble(7, rec.getDouble("r_total"));
                        prm.setString(8, rec.getString("r_unit"));
                        prm.setString(9, rec.getString("r_group"));
                        prm.executeUpdate();
                        prm.close();
                        stmt2.close();
                    } catch (SQLException e2) {
                        MSG.ERR(e2.getMessage());
                    }

                } while (rec.next());
            }
            rec.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        }

        mysql.close();
    }

    public void UpdateBillNo(String MacNo, String RefNo, String InvNo, String InvType) {
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "update billno set b_invno=?,b_invtype=? where (b_macno=?) and (b_refno=?)";
            PreparedStatement prm = mysql.getConnection().prepareStatement(SqlQuery);
            prm.setString(1, InvNo);
            prm.setString(2, InvType);
            prm.setString(3, MacNo);
            prm.setString(4, RefNo);
            prm.executeUpdate();
            prm.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        } finally {
            mysql.close();
        }
    }

    public void UpdateAccr(String BillNo, String InvNo) {
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "update accr set arinvno=? where arno=?";
            PreparedStatement prm = mysql.getConnection().prepareStatement(SqlQuery);
            prm.setString(1, InvNo);
            prm.setString(2, BillNo);
            prm.executeUpdate();
            prm.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        } finally {
            mysql.close();
        }

    }

    public void InsertInv(String InvNo) {
        Date TempInvDate = date;
        Date TempOnDate = date;
        try {
            TempInvDate = DateFmt.parse(InvDate.getText());
            TempOnDate = DateFmt.parse(OnDate.getText());
        } catch (Exception e) {

        }

        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "insert into invcashdoc (s_bran,invdate,custcode,custname,custaddr1,"
                    + "custaddr2,macno,refno,ondate,ontime,cashier,totalamt,discount,subtotal,"
                    + "vat,amount,invuser,service,regno,cashpay,crpay,cupon,crno,arcode,"
                    + "custtel,custfax,custcr,contack,remark,earnest,remark2,pono,duedate,invno,void,uservoid,voiddate,voidmessage,printok) "
                    + "values (?,?,?,?,?,?,?,?,?,? ,?,?,?,?,?,?,?,?,?,? ,?,?,?,?,?,?,?,?,?,? ,?,?,?,?,?,?,?,?,?)";
            PreparedStatement prm = mysql.getConnection().prepareStatement(SqlQuery);
            prm.setString(1, PublicVar.Branch_Code);
            prm.setString(2, SqlDateFmt.format(TempInvDate));
            prm.setString(3, CustCode.getText());
            prm.setString(4, CustName.getText());
            prm.setString(5, CustAddr1.getText());
            prm.setString(6, CustAddr2.getText());
            prm.setString(7, MacNo.getText());
            prm.setString(8, RefNo.getText());
            prm.setString(9, SqlDateFmt.format(TempOnDate));
            prm.setString(10, OnTime.getText());
            prm.setString(11, Cashier.getText());
            prm.setDouble(12, XTotalAmt);
            prm.setDouble(13, XDiscount);
            prm.setDouble(14, XSubTotal);
            prm.setDouble(15, XVat);
            prm.setDouble(16, XAmount);
            prm.setString(17, PublicVar._User);
            prm.setDouble(18, XService);
            prm.setString(19, XRegNo);
            prm.setDouble(20, XCashPay);
            prm.setDouble(21, XCrPay);
            prm.setDouble(22, XCupon);
            prm.setString(23, XCrNo);
            prm.setString(24, "");
            prm.setString(25, CustTel.getText());
            prm.setString(26, CustFax.getText());
            prm.setInt(27, 0);
            prm.setString(28, Contack.getText());
            prm.setString(29, CustRemark.getText());
            prm.setDouble(30, XEarnest);
            prm.setString(31, CustRemark2.getText());
            prm.setString(32, PONo.getText());
            prm.setString(33, SqlDateFmt.format(date));
            prm.setString(34, InvNo);
            prm.setString(35, "N");
            prm.setString(36, "");
            prm.setString(37, "0000-00-00");
            prm.setString(38, "");
            prm.setString(39, "N");
            prm.executeUpdate();
            prm.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        } finally {
            mysql.close();
        }
    }

    public void UpdateInv(String InvNo) {
        Date TempInvDate = date;
        Date TempOnDate = date;
        try {
            TempInvDate = DateFmt.parse(InvDate.getText());
            TempOnDate = DateFmt.parse(OnDate.getText());
        } catch (Exception e) {

        }

        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "update invcashdoc set s_bran=?,invdate=?,custcode=?,custname=?,custaddr1=?,"
                    + "custaddr2=?,macno=?,refno=?,ondate=?,ontime=?,cashier=?,totalamt=?,discount=?,subtotal=?,"
                    + "vat=?,amount=?,invuser=?,service=?,regno=?,cashpay=?,crpay=?,cupon=?,crno=?,arcode=?,"
                    + "custtel=?,custfax=?,custcr=?,contack=?,remark=?,earnest=?,remark2=?,pono=?,duedate=? "
                    + " where invno=?";
            PreparedStatement prm = mysql.getConnection().prepareStatement(SqlQuery);
            prm.setString(1, PublicVar.Branch_Code);
            prm.setString(2, SqlDateFmt.format(TempInvDate));
            prm.setString(3, CustCode.getText());
            prm.setString(4, CustName.getText());
            prm.setString(5, CustAddr1.getText());
            prm.setString(6, CustAddr2.getText());
            prm.setString(7, MacNo.getText());
            prm.setString(8, RefNo.getText());
            prm.setString(9, SqlDateFmt.format(TempOnDate));
            prm.setString(10, OnTime.getText());
            prm.setString(11, Cashier.getText());
            prm.setDouble(12, XTotalAmt);
            prm.setDouble(13, XDiscount);
            prm.setDouble(14, XSubTotal);
            prm.setDouble(15, XVat);
            prm.setDouble(16, XAmount);
            prm.setString(17, PublicVar._User);
            prm.setDouble(18, XService);
            prm.setString(19, XRegNo);
            prm.setDouble(20, XCashPay);
            prm.setDouble(21, XCrPay);
            prm.setDouble(22, XCupon);
            prm.setString(23, XCrNo);
            prm.setString(24, "");
            prm.setString(25, CustTel.getText());
            prm.setString(26, CustFax.getText());
            prm.setInt(27, 0);
            prm.setString(28, Contack.getText());
            prm.setString(29, CustRemark.getText());
            prm.setDouble(30, XEarnest);
            prm.setString(31, CustRemark2.getText());
            prm.setString(32, PONo.getText());
            prm.setString(33, SqlDateFmt.format(date));
            prm.setString(34, InvNo);
            prm.executeUpdate();
            prm.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        } finally {
            mysql.close();
        }
    }

    public Boolean SeekInvNo(String InvNo) {
        Boolean RetVal = false;
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SQLQuery = "Select *from invcashdoc where invno='" + InvNo + "'";
            ResultSet rec = stmt.executeQuery(SQLQuery);
            rec.first();
            if (rec.getRow() == 0) {
                RetVal = false;
            } else {
                RetVal = true;
            }
            rec.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        } finally {
            mysql.close();
        }

        return RetVal;
    }

    public Boolean SeekCustomer(String CustCode) {
        Boolean RetVal = false;
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SQLQuery = "Select *from custfile where sp_code='" + CustCode + "'";
            ResultSet rec = stmt.executeQuery(SQLQuery);
            rec.first();
            if (rec.getRow() == 0) {
                RetVal = false;
            } else {
                RetVal = true;
            }
            rec.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        } finally {
            mysql.close();
        }

        return RetVal;
    }

    public String FindMaxInvNo() {
        String RetVal = "";
        int TempInv = 0;
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SQLQuery = "Select *from branch";
            ResultSet rec = stmt.executeQuery(SQLQuery);
            rec.first();
            if (rec.getRow() == 0) {
                TempInv = 1;
                RetVal = 'I' + PublicVar.Branch_Code + PUtility.Addzero(Integer.toString(TempInv), 6);
            } else {
                TempInv = rec.getInt("invno");
                RetVal = 'I' + PublicVar.Branch_Code + PUtility.Addzero(Integer.toString(TempInv), 6);
            }
            rec.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        }
        int UpdateInvNo = TempInv + 1;
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SQLQuery = "update branch set invno=" + UpdateInvNo;
            stmt.executeUpdate(SQLQuery);
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        }

        mysql.close();

        return RetVal;
    }

    public void bntCancelClick() {
        CancelInv();
    }

    public void CancelInv() {
        String TempInvNo = InvNo.getText();
        if (!TempInvNo.equals("")) {
            if (PrintOK.equals("Y")) {
                if (!VoidOK.equals("Y")) {
                    String VoidMessage = "";
                    GetVoidMsg frm = new GetVoidMsg(null, true);
                    frm.setVisible(true);
                    VoidMessage = GetVoidMsg.VoidMsg;
                    if (VoidMessage.equals("")) {
                        MSG.ERR(this, "กรุณาป้อนสาเหตุการยกเลิก...");
                    } else {
                        if (PUtility.ShowConfirmMsg("คุณต้องการยกเลิกใบกำกับภาษี/ใบแจ้งหนี้นี้หรือไม่ ?")) {
                            /**
                             * * OPEN CONNECTION **
                             */
                            MySQLConnect mysql = new MySQLConnect();
                            mysql.open();
                            try {
                                Statement stmt = mysql.getConnection().createStatement();
                                String SqlQuery = "update invcashdoc set void=?,uservoid=?,voiddate=?,"
                                        + "voidmessage=? where invno=?";
                                PreparedStatement prm = mysql.getConnection().prepareStatement(SqlQuery);
                                prm.setString(1, "Y");
                                prm.setString(2, PublicVar._User);
                                prm.setString(3, SqlDateFmt.format(date));
                                prm.setString(4, PUtility.DataFull(VoidMessage, 30));
                                prm.setString(5, TempInvNo);
                                prm.executeUpdate();
                                prm.close();
                                stmt.close();
                            } catch (SQLException e2) {
                                MSG.ERR(e2.getMessage());
                            } finally {
                                mysql.close();
                            }
                            TCancel.setText("เอกสารยกเลิกโดย : " + PublicVar._User + "/" + DateFmt.format(date));
                            TCancelMsg.setText("  " + VoidMessage);
                            TCancel.setVisible(true);
                            TCancelMsg.setVisible(true);
                            VoidOK = "Y";
                            UpdateBillNo(MacNo.getText(), RefNo.getText(), "", "");
                            String BillNo = PublicVar.Branch_Code + "/" + MacNo.getText() + "/" + RefNo.getText();
                            UpdateAccr(BillNo, "");
                        }
                    }
                } else {
                    MSG.ERR(this, "เอกสารนี้ได้มีการยกเลิกไปแล้ว");
                }
            } else {
                MSG.ERR(this, "เอกสารนี้ยังไม่ได้จัดพิมพ์ต้นฉบับ...ไม่สามารถยกเลิกได้");
            }
        }
    }

    public void bntDisplayClick() {
        DisplayClick = true;
        DispInv2 frm = new DispInv2(null, true);
        frm.setVisible(true);
        if (!PublicVar.ReturnString.equals("")) {
            InvNo.setText(PublicVar.ReturnString);
            InvNoExit();
        }
        DisplayClick = false;
    }

    public void bntExitClick() {
        this.dispose();
    }

    public void bntPrintClick() {
        if (!InvNo.getText().equals("")) {
            bntSaveClick();
            ViewReport vp = new ViewReport();
            vp.printReportIVat(InvNo.getText());
            UpdatePrintFlage(InvNo.getText());
            ClearVariable();
            InvNo.setFocusable(true);
            InvNo.setEditable(true);
            InvNo.requestFocus();
        }
    }

    public void UpdatePrintFlage(String InvNo) {
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "update invcashdoc set printok='Y',invuser=? where invno=?";
            PreparedStatement prm = mysql.getConnection().prepareStatement(SqlQuery);
            prm.setString(1, PublicVar._User);
            prm.setString(2, InvNo);
            prm.executeUpdate();
            prm.close();
            stmt.close();
        } catch (SQLException e2) {
            MSG.ERR(e2.getMessage());
        } finally {
            mysql.close();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                PrintInv1 dialog = new PrintInv1(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField Amount;
    private javax.swing.JTextField ArCode;
    private javax.swing.JTextField Cashier;
    private javax.swing.JTextField Contack;
    private javax.swing.JTextField CustAddr1;
    private javax.swing.JTextField CustAddr2;
    private javax.swing.JTextField CustCode;
    private javax.swing.JFormattedTextField CustCr;
    private javax.swing.JTextField CustFax;
    private javax.swing.JTextField CustName;
    private javax.swing.JTextField CustRemark;
    private javax.swing.JTextField CustRemark2;
    private javax.swing.JTextField CustTel;
    private javax.swing.JFormattedTextField DueDate;
    private javax.swing.JFormattedTextField InvDate;
    private javax.swing.JTextField InvNo;
    private javax.swing.JTextField MacNo;
    private javax.swing.JFormattedTextField OnDate;
    private javax.swing.JTextField OnTime;
    private javax.swing.JTextField PONo;
    private javax.swing.JTextField RefNo;
    private javax.swing.JFormattedTextField SubTotal;
    private javax.swing.JLabel TCancel;
    private javax.swing.JLabel TCancelMsg;
    private javax.swing.JLabel TPrintOK;
    private javax.swing.JFormattedTextField Vat;
    private javax.swing.JButton bntCancel;
    private javax.swing.JButton bntDisplay;
    private javax.swing.JButton bntExit1;
    private javax.swing.JButton bntNew;
    private javax.swing.JButton bntPrint;
    private javax.swing.JButton bntSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
    private String GetCrNo(String refno, String macno) {
        String str = "";
        String str2 = "";
//        try {
//            String sql = "SELECT decode(b_crcardno1,'snpfood') as bcardno1 FROM billcredit " +
//                    "where b_refno='"+refno+"' and b_macno='"+macno+"'";
////            System.out.println(sql);
//            MySQLConnect db1 = new MySQLConnect();
//            db1.dbconnect();
//            Statement stmt = mysql.getConnection().createStatement();
//            ResultSet rs = stmt.executeQuery(sql);
//            while(rs.next()){
//                str = rs.getString(1);
//                str2+= "XXXXXXXXXXX" + PUtility.Addzero(str,16).substring(12, 16)+",";
//            }
//            System.out.println(str2);
//        } catch (SQLException e) {
//        }
        return str2;
    }

}
