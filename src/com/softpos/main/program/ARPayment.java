package com.softpos.main.program;

import database.MySQLConnect;
import java.awt.Color;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import printReport.PrintDriver;
import sun.natee.project.util.ThaiUtil;
import util.MSG;

public class ARPayment extends javax.swing.JDialog {

    DefaultTableModel model1;
    DefaultTableModel model2;
    Boolean CashPayOK;
    Boolean GetHyper;
    Boolean _SubTotalOK;
    String XCuCode;
    double XTotal;
    double XDiscPer;
    double XNetAmt;
    double _AmtPayment;
    double _CurAmount;
    double _NetTotal;
    double _PayAmt;
    double _Cash;
    double _Ton;
    double _Earnest;
    double _TGift;
    double _CrAmount;
    double _ArPay;
    double TempValue;
    String TempPersentDisc;
    String TempFastDisc;
    String TempEmpDisc;
    String TempMemDisc;
    String TempTrainDisc;
    String TempSubDisc;
    boolean GetHyPer = false;
    DecimalFormat DecFmt = new DecimalFormat("##,###,##0.00");
    SimpleDateFormat Datefmt = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
    SimpleDateFormat DatefmtShow = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
    SimpleDateFormat DateTimeFmt = new SimpleDateFormat("dd/MM/yyyy HH:mm", Locale.ENGLISH);
    SimpleDateFormat DatefmtThai = new SimpleDateFormat("dd/MM/yyyy(HH:mm)", Locale.ENGLISH);
    SimpleDateFormat Timefmt = new SimpleDateFormat("HH:mm:ss");
    Date date = new Date();
    CreditRec CrRec;
    DecimalFormat IntFmt = new DecimalFormat("##,###,##0");
    PPrint prn = new PPrint();
    double _Gift_Voucher;
    double _Cr_Amount1;
    String _Cr_Code1;
    String _Cr_CardNo1;
    String _Cr_App_Code1;
    String _Cr_Name1;
    String _Cr_Bank;
    CreditPaymentRec[] CreditArray;
    int CreditSize;
    int CreditCnt;
    boolean ESCKEY;
    private POSHWSetup POSHW;
    private String Space = " &nbsp; ";
    private String TAB = Space + Space + Space;

    public ARPayment(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        POSHW = POSHWSetup.Bean(Value.getMacno());
        model1 = (DefaultTableModel) tblAr.getModel();
        tblAr.setShowGrid(true);
        tblAr.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblAr.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblAr.setRowSelectionAllowed(true);
        tblAr.setGridColor(Color.gray);
        tblAr.setBackground(Color.WHITE);

        JTableHeader header = tblAr.getTableHeader();
        //header.setBackground(Color.yellow);
        header.setFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16));
        header.setFocusable(false);
        header.setFocusable(false);

        int[] ColSize = {150, 110, 100, 110};
        for (int i = 0; i < 4; i++) {
            //int vColIndex = 0;
            TableColumn col = tblAr.getColumnModel().getColumn(i);
            col.setPreferredWidth(ColSize[i]);
        }
        model2 = (DefaultTableModel) tblArPay.getModel();
        tblArPay.setShowGrid(true);
        tblArPay.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblArPay.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblArPay.setRowSelectionAllowed(true);
        tblArPay.setGridColor(Color.gray);
        tblArPay.setBackground(Color.WHITE);

        JTableHeader header2 = tblArPay.getTableHeader();
        //header.setBackground(Color.yellow);
        header2.setFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16));
        header2.setFocusable(false);

        int[] ColSize2 = {150, 110, 100, 110};
        for (int i = 0; i < 4; i++) {
            //int vColIndex = 0;
            TableColumn col2 = tblArPay.getColumnModel().getColumn(i);
            col2.setPreferredWidth(ColSize2[i]);
        }
        ClearAr();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        Digital_Msg = new javax.swing.JLabel();
        Digital_Amount = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtArCode = new javax.swing.JTextField();
        txtArName = new javax.swing.JTextField();
        txtSumArNet = new javax.swing.JFormattedTextField();
        txtArCr = new javax.swing.JFormattedTextField();
        txtArCount = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAr = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblArPay = new javax.swing.JTable();
        PaymentPanel = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        bntCash = new javax.swing.JButton();
        bntGiftVoicher = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        _TCash = new javax.swing.JFormattedTextField();
        jPanel18 = new javax.swing.JPanel();
        _TGiftvoucher = new javax.swing.JFormattedTextField();
        jPanel3 = new javax.swing.JPanel();
        bntCredit = new javax.swing.JButton();
        _CreditAmt = new javax.swing.JFormattedTextField();
        _CrCardNo = new javax.swing.JTextField();
        _CrAppNo = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        _CrName = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        CreditList = new javax.swing.JTextArea();
        bntfunction = new javax.swing.JButton();
        calc5 = new javax.swing.JPanel();
        c_bnt22 = new javax.swing.JButton();
        c_bnt23 = new javax.swing.JButton();
        c_bnt24 = new javax.swing.JButton();
        c_bntplus5 = new javax.swing.JButton();
        c_bntbs5 = new javax.swing.JButton();
        c_bnt4 = new javax.swing.JButton();
        c_bnt5 = new javax.swing.JButton();
        c_bnt6 = new javax.swing.JButton();
        c_bntsub = new javax.swing.JButton();
        c_bntesc = new javax.swing.JButton();
        c_bnt25 = new javax.swing.JButton();
        c_bnt2 = new javax.swing.JButton();
        c_bnt3 = new javax.swing.JButton();
        c_bntmulti = new javax.swing.JButton();
        c_bntenter = new javax.swing.JButton();
        c_bnt0 = new javax.swing.JButton();
        c_bntdot = new javax.swing.JButton();
        c_bntclr = new javax.swing.JButton();
        c_bntsal = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("รับชำระจากลูกหนี้ภายนอก");
        setUndecorated(true);

        jPanel1.setBackground(java.awt.Color.black);
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, java.awt.Color.lightGray));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(java.awt.Color.white);
        jLabel2.setText("รับชำระจากลูกหนี้ภายนอก");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel21.setBackground(new java.awt.Color(0, 0, 0));
        jPanel21.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, java.awt.Color.lightGray));

        Digital_Msg.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Digital_Msg.setForeground(java.awt.Color.lightGray);
        Digital_Msg.setText("Net Total ");

        Digital_Amount.setFont(new java.awt.Font("Tahoma", 1, 40)); // NOI18N
        Digital_Amount.setForeground(java.awt.Color.white);
        Digital_Amount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Digital_Amount.setText("999,999.00");
        Digital_Amount.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Digital_Msg, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Digital_Amount, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Digital_Msg, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Digital_Amount, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(243, 183, 229));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.white, 3));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(22, 13, 120));
        jLabel3.setText("รหัสลูกหนี้");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(22, 13, 120));
        jLabel4.setText("ชื่อลูกหนี้");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(22, 13, 120));
        jLabel5.setText("จำนวนบิลค้างชำระ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(22, 13, 120));
        jLabel6.setText("จำนวนเงินค้างชำระ");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(22, 13, 120));
        jLabel7.setText("วงเงินเครดิต");

        txtArCode.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtArCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtArCodeKeyPressed(evt);
            }
        });

        txtArName.setEditable(false);
        txtArName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtArName.setDisabledTextColor(new java.awt.Color(209, 43, 10));
        txtArName.setRequestFocusEnabled(false);

        txtSumArNet.setEditable(false);
        txtSumArNet.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtSumArNet.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtSumArNet.setDisabledTextColor(new java.awt.Color(222, 30, 18));
        txtSumArNet.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtSumArNet.setRequestFocusEnabled(false);
        txtSumArNet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSumArNetActionPerformed(evt);
            }
        });

        txtArCr.setEditable(false);
        txtArCr.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtArCr.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtArCr.setDisabledTextColor(new java.awt.Color(222, 30, 18));
        txtArCr.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtArCr.setRequestFocusEnabled(false);

        txtArCount.setEditable(false);
        txtArCount.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));
        txtArCount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtArCount.setDisabledTextColor(new java.awt.Color(222, 30, 18));
        txtArCount.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtArCount.setRequestFocusEnabled(false);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying glass.jpg"))); // NOI18N
        jButton1.setText("jButton1");
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSumArNet, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtArCr, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(txtArCode, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtArCount, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtArName, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtArCount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtArCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtArName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtSumArNet, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtArCr, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblAr.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        tblAr.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "เลขที่บิล", "วันที่ซื้อ", "จำนวนเงิน", "กำหนดชำระ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAr.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblAr.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        tblAr.setDoubleBuffered(true);
        tblAr.setDragEnabled(true);
        tblAr.setRowHeight(25);
        tblAr.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblAr.setSurrendersFocusOnKeystroke(true);
        tblAr.getTableHeader().setResizingAllowed(false);
        tblAr.getTableHeader().setReorderingAllowed(false);
        tblAr.setUpdateSelectionOnSort(false);
        tblAr.setVerifyInputWhenFocusTarget(false);
        tblAr.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblArFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tblArFocusLost(evt);
            }
        });
        tblAr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblArKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblAr);
        tblAr.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tblAr.getColumnModel().getColumnCount() > 0) {
            tblAr.getColumnModel().getColumn(0).setResizable(false);
            tblAr.getColumnModel().getColumn(1).setResizable(false);
            tblAr.getColumnModel().getColumn(2).setResizable(false);
            tblAr.getColumnModel().getColumn(3).setResizable(false);
        }

        tblArPay.setBackground(new java.awt.Color(211, 213, 245));
        tblArPay.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        tblArPay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "เลขที่บิล", "วันที่ซื้อ", "จำนวนเงิน", "กำหนดชำระ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblArPay.setRowHeight(25);
        tblArPay.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblArPayFocusGained(evt);
            }
        });
        tblArPay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblArPayKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblArPay);

        PaymentPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel14.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel14.setLayout(new java.awt.GridLayout(2, 0));

        bntCash.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bntCash.setForeground(new java.awt.Color(9, 29, 122));
        bntCash.setText("(F7) ชำระโดยเงินสด (Cash)");
        bntCash.setFocusable(false);
        bntCash.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bntCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntCashActionPerformed(evt);
            }
        });
        jPanel14.add(bntCash);

        bntGiftVoicher.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bntGiftVoicher.setForeground(new java.awt.Color(9, 29, 122));
        bntGiftVoicher.setText("(F9) ชำระโดยบัตรกำนัล (Gift Voucher)");
        bntGiftVoicher.setFocusable(false);
        bntGiftVoicher.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bntGiftVoicher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntGiftVoicherActionPerformed(evt);
            }
        });
        jPanel14.add(bntGiftVoicher);

        jPanel15.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel15.setLayout(new java.awt.GridLayout(2, 0));

        jPanel16.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        _TCash.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        _TCash.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        _TCash.setFocusable(false);
        _TCash.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        _TCash.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                _TCashFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                _TCashFocusLost(evt);
            }
        });
        _TCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _TCashActionPerformed(evt);
            }
        });
        _TCash.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                _TCashKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(_TCash, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(_TCash, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel15.add(jPanel16);

        jPanel18.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        _TGiftvoucher.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        _TGiftvoucher.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        _TGiftvoucher.setFocusable(false);
        _TGiftvoucher.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        _TGiftvoucher.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                _TGiftvoucherFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                _TGiftvoucherFocusLost(evt);
            }
        });
        _TGiftvoucher.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                _TGiftvoucherKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(_TGiftvoucher, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addComponent(_TGiftvoucher, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel15.add(jPanel18);

        jPanel3.setBackground(new java.awt.Color(244, 248, 118));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        bntCredit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bntCredit.setForeground(new java.awt.Color(9, 29, 122));
        bntCredit.setText("(F8) ชำระโดยบัตรเครดิต (Credit)");
        bntCredit.setFocusable(false);
        bntCredit.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bntCredit.setMargin(new java.awt.Insets(1, 1, 1, 1));
        bntCredit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntCreditActionPerformed(evt);
            }
        });

        _CreditAmt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        _CreditAmt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        _CreditAmt.setFocusable(false);
        _CreditAmt.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        _CreditAmt.setNextFocusableComponent(_CrCardNo);
        _CreditAmt.setOpaque(false);
        _CreditAmt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _CreditAmtActionPerformed(evt);
            }
        });
        _CreditAmt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                _CreditAmtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                _CreditAmtFocusLost(evt);
            }
        });
        _CreditAmt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                _CreditAmtKeyPressed(evt);
            }
        });

        _CrCardNo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _CrCardNo.setText("Card ID NO");
        _CrCardNo.setFocusable(false);
        _CrCardNo.setMargin(new java.awt.Insets(0, 3, 0, 0));
        _CrCardNo.setNextFocusableComponent(_CrAppNo);
        _CrCardNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                _CrCardNoFocusLost(evt);
            }
        });
        _CrCardNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                _CrCardNoKeyPressed(evt);
            }
        });

        _CrAppNo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _CrAppNo.setText("Track");
        _CrAppNo.setFocusable(false);
        _CrAppNo.setMargin(new java.awt.Insets(0, 3, 0, 0));
        _CrAppNo.setNextFocusableComponent(bntfunction);
        _CrAppNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _CrAppNoActionPerformed(evt);
            }
        });
        _CrAppNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                _CrAppNoFocusLost(evt);
            }
        });
        _CrAppNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                _CrAppNoKeyPressed(evt);
            }
        });

        jTextField5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField5.setText("Amount");
        jTextField5.setDisabledTextColor(java.awt.Color.black);
        jTextField5.setEnabled(false);
        jTextField5.setOpaque(false);

        _CrName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _CrName.setText("Card Name");
        _CrName.setFocusable(false);
        _CrName.setMargin(new java.awt.Insets(0, 3, 0, 0));
        _CrName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _CrNameActionPerformed(evt);
            }
        });
        _CrName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                _CrNameKeyPressed(evt);
            }
        });

        CreditList.setEditable(false);
        CreditList.setColumns(20);
        CreditList.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CreditList.setForeground(new java.awt.Color(31, 13, 135));
        CreditList.setRows(1);
        CreditList.setDisabledTextColor(new java.awt.Color(17, 22, 134));
        CreditList.setEnabled(false);
        CreditList.setFocusable(false);
        CreditList.setRequestFocusEnabled(false);
        CreditList.setVerifyInputWhenFocusTarget(false);
        jScrollPane3.setViewportView(CreditList);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(_CreditAmt, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(_CrCardNo, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(_CrAppNo, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(bntCredit, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(_CrName, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
            .addComponent(jScrollPane3)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(_CrName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntCredit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(_CreditAmt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(_CrCardNo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(_CrAppNo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout PaymentPanelLayout = new javax.swing.GroupLayout(PaymentPanel);
        PaymentPanel.setLayout(PaymentPanelLayout);
        PaymentPanelLayout.setHorizontalGroup(
            PaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PaymentPanelLayout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(PaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PaymentPanelLayout.createSequentialGroup()
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        PaymentPanelLayout.setVerticalGroup(
            PaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PaymentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PaymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel15, 0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        bntfunction.setText("...");
        bntfunction.setFocusCycleRoot(true);
        bntfunction.setSelected(true);
        bntfunction.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bntfunctionKeyPressed(evt);
            }
        });

        calc5.setFocusable(false);
        calc5.setLayout(new java.awt.GridLayout(4, 0));

        c_bnt22.setBackground(new java.awt.Color(0, 0, 0));
        c_bnt22.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        c_bnt22.setForeground(new java.awt.Color(255, 255, 255));
        c_bnt22.setText("7");
        c_bnt22.setFocusable(false);
        c_bnt22.setMargin(new java.awt.Insets(1, 1, 1, 1));
        c_bnt22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c_bnt22MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c_bnt22MouseReleased(evt);
            }
        });
        calc5.add(c_bnt22);

        c_bnt23.setBackground(new java.awt.Color(0, 0, 0));
        c_bnt23.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        c_bnt23.setForeground(new java.awt.Color(255, 255, 255));
        c_bnt23.setText("8");
        c_bnt23.setFocusable(false);
        c_bnt23.setMargin(new java.awt.Insets(1, 1, 1, 1));
        c_bnt23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c_bnt23MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c_bnt23MouseReleased(evt);
            }
        });
        c_bnt23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_bnt23ActionPerformed(evt);
            }
        });
        calc5.add(c_bnt23);

        c_bnt24.setBackground(new java.awt.Color(0, 0, 0));
        c_bnt24.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        c_bnt24.setForeground(new java.awt.Color(255, 255, 255));
        c_bnt24.setText("9");
        c_bnt24.setFocusable(false);
        c_bnt24.setMargin(new java.awt.Insets(1, 1, 1, 1));
        c_bnt24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c_bnt24MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c_bnt24MouseReleased(evt);
            }
        });
        calc5.add(c_bnt24);

        c_bntplus5.setBackground(new java.awt.Color(0, 0, 0));
        c_bntplus5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        c_bntplus5.setForeground(new java.awt.Color(255, 255, 255));
        c_bntplus5.setText("+");
        c_bntplus5.setFocusable(false);
        c_bntplus5.setMargin(new java.awt.Insets(1, 1, 1, 1));
        c_bntplus5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c_bntplus5MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c_bntplus5MouseReleased(evt);
            }
        });
        calc5.add(c_bntplus5);

        c_bntbs5.setBackground(new java.awt.Color(0, 0, 0));
        c_bntbs5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        c_bntbs5.setForeground(new java.awt.Color(255, 255, 255));
        c_bntbs5.setText("<-BS");
        c_bntbs5.setFocusable(false);
        c_bntbs5.setMargin(new java.awt.Insets(1, 1, 1, 1));
        c_bntbs5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c_bntbs5MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c_bntbs5MouseReleased(evt);
            }
        });
        calc5.add(c_bntbs5);

        c_bnt4.setBackground(new java.awt.Color(0, 0, 0));
        c_bnt4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        c_bnt4.setForeground(new java.awt.Color(255, 255, 255));
        c_bnt4.setText("4");
        c_bnt4.setFocusable(false);
        c_bnt4.setMargin(new java.awt.Insets(1, 1, 1, 1));
        c_bnt4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c_bnt4MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c_bnt4MouseReleased(evt);
            }
        });
        calc5.add(c_bnt4);

        c_bnt5.setBackground(new java.awt.Color(0, 0, 0));
        c_bnt5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        c_bnt5.setForeground(new java.awt.Color(255, 255, 255));
        c_bnt5.setText("5");
        c_bnt5.setFocusable(false);
        c_bnt5.setMargin(new java.awt.Insets(1, 1, 1, 1));
        c_bnt5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c_bnt5MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c_bnt5MouseReleased(evt);
            }
        });
        calc5.add(c_bnt5);

        c_bnt6.setBackground(new java.awt.Color(0, 0, 0));
        c_bnt6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        c_bnt6.setForeground(new java.awt.Color(255, 255, 255));
        c_bnt6.setText("6");
        c_bnt6.setFocusable(false);
        c_bnt6.setMargin(new java.awt.Insets(1, 1, 1, 1));
        c_bnt6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c_bnt6MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c_bnt6MouseReleased(evt);
            }
        });
        calc5.add(c_bnt6);

        c_bntsub.setBackground(new java.awt.Color(0, 0, 0));
        c_bntsub.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        c_bntsub.setForeground(new java.awt.Color(255, 255, 255));
        c_bntsub.setText("-");
        c_bntsub.setFocusable(false);
        c_bntsub.setMargin(new java.awt.Insets(1, 1, 1, 1));
        c_bntsub.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c_bntsubMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c_bntsubMouseReleased(evt);
            }
        });
        c_bntsub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_bntsubActionPerformed(evt);
            }
        });
        calc5.add(c_bntsub);

        c_bntesc.setBackground(new java.awt.Color(0, 0, 0));
        c_bntesc.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        c_bntesc.setForeground(new java.awt.Color(255, 255, 255));
        c_bntesc.setText("ESC");
        c_bntesc.setFocusable(false);
        c_bntesc.setMargin(new java.awt.Insets(1, 1, 1, 1));
        c_bntesc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c_bntescMouseClicked(evt);
            }
        });
        calc5.add(c_bntesc);

        c_bnt25.setBackground(new java.awt.Color(0, 0, 0));
        c_bnt25.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        c_bnt25.setForeground(new java.awt.Color(255, 255, 255));
        c_bnt25.setText("1");
        c_bnt25.setFocusable(false);
        c_bnt25.setMargin(new java.awt.Insets(1, 1, 1, 1));
        c_bnt25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c_bnt25MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c_bnt25MouseReleased(evt);
            }
        });
        calc5.add(c_bnt25);

        c_bnt2.setBackground(new java.awt.Color(0, 0, 0));
        c_bnt2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        c_bnt2.setForeground(new java.awt.Color(255, 255, 255));
        c_bnt2.setText("2");
        c_bnt2.setFocusable(false);
        c_bnt2.setMargin(new java.awt.Insets(1, 1, 1, 1));
        c_bnt2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c_bnt2MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c_bnt2MouseReleased(evt);
            }
        });
        calc5.add(c_bnt2);

        c_bnt3.setBackground(new java.awt.Color(0, 0, 0));
        c_bnt3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        c_bnt3.setForeground(new java.awt.Color(255, 255, 255));
        c_bnt3.setText("3");
        c_bnt3.setFocusable(false);
        c_bnt3.setMargin(new java.awt.Insets(1, 1, 1, 1));
        c_bnt3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c_bnt3MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c_bnt3MouseReleased(evt);
            }
        });
        calc5.add(c_bnt3);

        c_bntmulti.setBackground(new java.awt.Color(0, 0, 0));
        c_bntmulti.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        c_bntmulti.setForeground(new java.awt.Color(255, 255, 255));
        c_bntmulti.setText("x");
        c_bntmulti.setFocusable(false);
        c_bntmulti.setMargin(new java.awt.Insets(1, 1, 1, 1));
        c_bntmulti.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c_bntmultiMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c_bntmultiMouseReleased(evt);
            }
        });
        calc5.add(c_bntmulti);

        c_bntenter.setBackground(new java.awt.Color(0, 0, 0));
        c_bntenter.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        c_bntenter.setForeground(new java.awt.Color(255, 255, 255));
        c_bntenter.setText("ENT");
        c_bntenter.setFocusable(false);
        c_bntenter.setMargin(new java.awt.Insets(1, 1, 1, 1));
        c_bntenter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c_bntenterMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c_bntenterMouseReleased(evt);
            }
        });
        c_bntenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_bntenterActionPerformed(evt);
            }
        });
        calc5.add(c_bntenter);

        c_bnt0.setBackground(new java.awt.Color(0, 0, 0));
        c_bnt0.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        c_bnt0.setForeground(new java.awt.Color(255, 255, 255));
        c_bnt0.setText("0");
        c_bnt0.setFocusable(false);
        c_bnt0.setMargin(new java.awt.Insets(1, 1, 1, 1));
        c_bnt0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c_bnt0MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c_bnt0MouseReleased(evt);
            }
        });
        calc5.add(c_bnt0);

        c_bntdot.setBackground(new java.awt.Color(0, 0, 0));
        c_bntdot.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        c_bntdot.setForeground(new java.awt.Color(255, 255, 255));
        c_bntdot.setText(".");
        c_bntdot.setFocusable(false);
        c_bntdot.setMargin(new java.awt.Insets(1, 1, 1, 1));
        c_bntdot.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c_bntdotMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c_bntdotMouseReleased(evt);
            }
        });
        calc5.add(c_bntdot);

        c_bntclr.setBackground(new java.awt.Color(0, 0, 0));
        c_bntclr.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        c_bntclr.setForeground(new java.awt.Color(255, 255, 255));
        c_bntclr.setText("CLR");
        c_bntclr.setFocusable(false);
        c_bntclr.setMargin(new java.awt.Insets(1, 1, 1, 1));
        c_bntclr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c_bntclrMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c_bntclrMouseReleased(evt);
            }
        });
        calc5.add(c_bntclr);

        c_bntsal.setBackground(new java.awt.Color(0, 0, 0));
        c_bntsal.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        c_bntsal.setForeground(new java.awt.Color(255, 255, 255));
        c_bntsal.setText("/");
        c_bntsal.setFocusable(false);
        c_bntsal.setMargin(new java.awt.Insets(1, 1, 1, 1));
        c_bntsal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c_bntsalMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c_bntsalMouseReleased(evt);
            }
        });
        calc5.add(c_bntsal);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setText("<== ยอดที่ต้องชำระ");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(240, 26, 10));
        jLabel9.setText("(กด F1 เพื่อเลือก/ยกเลิกรายการที่จะชำระเงิน)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(calc5, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(bntfunction, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PaymentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jLabel9))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, 103, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(PaymentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(calc5, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(bntfunction))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addGap(27, 27, 27))
        );

        setSize(new java.awt.Dimension(1002, 737));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

private void bntCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntCashActionPerformed
    if (!_SubTotalOK && _CurAmount > 0) {
        bntCashClick();
    }
}//GEN-LAST:event_bntCashActionPerformed

private void bntGiftVoicherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntGiftVoicherActionPerformed
    if (!_SubTotalOK && _CurAmount > 0) {
        bntGiftVoucherClick();
    }
}//GEN-LAST:event_bntGiftVoicherActionPerformed

private void _TCashFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event__TCashFocusGained
    TempValue = _PayAmt;
}//GEN-LAST:event__TCashFocusGained

private void _TCashFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event__TCashFocusLost
    _TCashExit();
}//GEN-LAST:event__TCashFocusLost

private void _TCashKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event__TCashKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        _SubTotalOK = false;
        _TCash.setValue(_PayAmt);
        _TCash.setFocusable(false);
        bntfunction.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        bntfunction.requestFocus();
    }
}//GEN-LAST:event__TCashKeyPressed

private void _TGiftvoucherFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event__TGiftvoucherFocusGained
    TempValue = 0.00;
}//GEN-LAST:event__TGiftvoucherFocusGained

private void _TGiftvoucherFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event__TGiftvoucherFocusLost
// TODO add your handling code here:
}//GEN-LAST:event__TGiftvoucherFocusLost

private void _TGiftvoucherKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event__TGiftvoucherKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        _SubTotalOK = false;
        _TGiftvoucher.setText("0");
        _TGiftvoucher.setFocusable(false);
    }
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        _TGiftvoucherExit();
    }
}//GEN-LAST:event__TGiftvoucherKeyPressed

private void bntCreditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntCreditActionPerformed
    if (!_SubTotalOK && _CurAmount > 0) {
        bntCreditClick();
    }
}//GEN-LAST:event_bntCreditActionPerformed

private void _CreditAmtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__CreditAmtActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event__CreditAmtActionPerformed

private void _CreditAmtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event__CreditAmtFocusGained
}//GEN-LAST:event__CreditAmtFocusGained

private void _CreditAmtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event__CreditAmtKeyPressed
    ESCKEY = false;
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        ESCKEY = true;
        ClearCredit();
        ShowSubtotal();
        bntfunction.requestFocus();
    }
//    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//        bntfunction.requestFocus();
//        double TempCreditAmt;
//        TempCreditAmt = double.parsedouble(PUtility.ConvertReal(_CreditAmt.getText()));
//        if (double.parsedouble(PUtility.ConvertReal(_CreditAmt.getText())) > (double.parsedouble(PUtility.ConvertReal(DecFmt.format(_CurAmount))))) {
//            JOptionPane.showMessageDialog(this, "ยอดรับชำระด้วยบัตรเครดิต มากกว่ายอดที่ต้องจ่ายจริง...");
//            _CreditAmt.setValue(_CurAmount);
//            _CreditAmt.requestFocus(true);
//            _CreditAmt.selectAll();
//        } else {
//            _CreditAmt.setFocusable(false);
//            if (TempCreditAmt > 0) {
//                _CrCardNo.setFocusable(true);
//                _CrCardNo.requestFocus();
//            } else {
//                JOptionPane.showMessageDialog(this, "ยอดรับชำระด้วยบัตรเครดิต ต้องมากกว่า 0 บาท...");
//                _CreditAmt.setValue(_CurAmount);
//                _CreditAmt.requestFocus(true);
//                _CreditAmt.selectAll();
//            }
//        }
//    }

    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        if (!DecFmt.format(Double.parseDouble(_CreditAmt.getText())).equals(DecFmt.format(_CurAmount))) {
            MSG.WAR_MSG(this, "ยอดรับชำระด้วยบัตรเครดิต ไม่เท่ากับยอดที่ต้องจ่ายจริง...");
            _CreditAmt.setValue(_CurAmount);
            _CreditAmt.requestFocus(true);
            _CreditAmt.selectAll();
        } else {
            _CreditAmt.setFocusable(false);
            double TempCreditAmt;
            TempCreditAmt = Double.parseDouble(_CreditAmt.getText());
            _Cr_Amount1 = TempCreditAmt;
            if (_NetTotal - (_PayAmt + _Gift_Voucher + _Cr_Amount1) == 0) {
                _CurAmount = (_NetTotal - (_Gift_Voucher + _Cr_Amount1));
                if (_CurAmount != 0) {
                    _Ton = (_CurAmount * -1);
                } else {
                    _Ton = (_CurAmount);
                }
                ShowDigital("เงินทอน", _Ton);
                if (ChkPrintOK()) {
                    _SubTotalOK = true;
                    SaveDataArPayment();
                } else {
                    ClearAllArMark(txtArCode.getText());
                    ClearAr();
                }

                bntfunction.requestFocus();
            }
        }
    }
}//GEN-LAST:event__CreditAmtKeyPressed

private void _CrCardNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event__CrCardNoKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        ClearCredit();
        _CrCardNo.setText("");
        _CrCardNo.setFocusable(false);
        bntfunction.requestFocus();
        ShowSubtotal();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        bntfunction.requestFocus();
        /*
         if (!_CrCardNo.getText().equals("")) {
         if (_CrCardNo.getText().length() <= 16) {
         _CrCardNoExit();
         _CrAppNo.setFocusable(true);
         _CrAppNo.requestFocus();
         } else {
         JOptionPane.showMessageDialog(this, "รหัสบัตรเครดิต ป้อนได้ไม่เกิน 16 ตัวอักษร...");
         _CrCardNo.requestFocus();
         }
         } else {
         GetEDC();
         }
         *
         */
    }
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        if (!_CrCardNo.getText().equals("")) {
            if (_CrCardNo.getText().length() <= 16) {
                _CrCardNoExit();
                _CrAppNo.setFocusable(true);
                _CrAppNo.requestFocus();
            } else {
                MSG.WAR_MSG(this, "รหัสบัตรเครดิต ป้อนได้ไม่เกิน 16 ตัวอักษร...");
                _CrCardNo.requestFocus();
            }
        } else {
            GetEDC();
        }

    }

}//GEN-LAST:event__CrCardNoKeyPressed

private void _CrAppNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__CrAppNoActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event__CrAppNoActionPerformed

private void _CrAppNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event__CrAppNoKeyPressed
    ESCKEY = false;
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        ESCKEY = true;
        ClearCredit();
        _CrAppNo.setText("");
        _CrAppNo.setFocusable(false);
        ShowSubtotal();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        bntfunction.requestFocus();

        if (!_CrAppNo.getText().equals("")) {
            if (_CrAppNo.getText().length() <= 6) {
                _CrAppNoExit();
                _CreditAmt.setFocusable(true);
                _CreditAmt.requestFocus();
                _CreditAmt.setText(_CurAmount + "");
                _CreditAmt.selectAll();

            } else {
                MSG.WAR_MSG(this, "รหัสอนุมัติบัตรเครดิต ป้อนได้ไม่เกิน 6 ตัวอักษร...");
                _CrAppNo.requestFocus();

            }
        }

    }
}//GEN-LAST:event__CrAppNoKeyPressed

private void _CrNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__CrNameActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event__CrNameActionPerformed

private void _CrNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event__CrNameKeyPressed
}//GEN-LAST:event__CrNameKeyPressed

private void bntfunctionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bntfunctionKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        if (_SubTotalOK) {
            ClearAr();
        } else {
            tblAr.requestFocus();
        }
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        if (_SubTotalOK) {
            ClearAr();
        } else {
            tblAr.requestFocus();
        }
    }

    if (evt.getKeyCode() == KeyEvent.VK_F7) {
        if (!_SubTotalOK) {
            bntCashClick();
        }
    }
    if (evt.getKeyCode() == KeyEvent.VK_F8) {
        if (!_SubTotalOK) {
            bntCreditClick();
        }

    }
    if (evt.getKeyCode() == KeyEvent.VK_F9) {
        if (!_SubTotalOK) {
            bntGiftVoucherClick();
        }
    }

}//GEN-LAST:event_bntfunctionKeyPressed

private void c_bnt22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bnt22MouseClicked
//inputfrombnt("7");
}//GEN-LAST:event_c_bnt22MouseClicked

private void c_bnt22MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bnt22MouseReleased
    inputfrombnt("7");
}//GEN-LAST:event_c_bnt22MouseReleased

private void c_bnt23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bnt23MouseClicked
//inputfrombnt("8");
}//GEN-LAST:event_c_bnt23MouseClicked

private void c_bnt23MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bnt23MouseReleased
    inputfrombnt("8");
}//GEN-LAST:event_c_bnt23MouseReleased

private void c_bnt23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_bnt23ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_c_bnt23ActionPerformed

private void c_bnt24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bnt24MouseClicked
//inputfrombnt("9");
}//GEN-LAST:event_c_bnt24MouseClicked

private void c_bnt24MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bnt24MouseReleased
    inputfrombnt("9");
}//GEN-LAST:event_c_bnt24MouseReleased

private void c_bntplus5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bntplus5MouseClicked
//inputfrombnt("+");
}//GEN-LAST:event_c_bntplus5MouseClicked

private void c_bntplus5MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bntplus5MouseReleased
    inputfrombnt("+");
}//GEN-LAST:event_c_bntplus5MouseReleased

private void c_bntbs5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bntbs5MouseClicked
    /*
     if (txtTable.hasFocus()) {
     String tempstr = "";
     String tempstr2 = "";
     tempstr = txtTable.getText();
     for (int i = 0; i < tempstr.length() - 1; i++) {
     tempstr2 = tempstr2 + tempstr.charAt(i);
     }
     txtTable.setText(tempstr2);
     }
     if (txtEmp.hasFocus()) {
     String tempstr = "";
     String tempstr2 = "";
     tempstr = txtEmp.getText();
     for (int i = 0; i < tempstr.length() - 1; i++) {
     tempstr2 = tempstr2 + tempstr.charAt(i);
     }
     txtEmp.setText(tempstr2);
     }
     if (txtCust.hasFocus()) {
     String tempstr = "";
     String tempstr2 = "";
     tempstr = txtCust.getText();
     for (int i = 0; i < tempstr.length() - 1; i++) {
     tempstr2 = tempstr2 + tempstr.charAt(i);
     }
     txtCust.setText(tempstr2);
     }
     if (txtPluCode.hasFocus()) {
     String tempstr = "";
     String tempstr2 = "";
     tempstr = txtPluCode.getText();
     for (int i = 0; i < tempstr.length() - 1; i++) {
     tempstr2 = tempstr2 + tempstr.charAt(i);
     }
     txtPluCode.setText(tempstr2);
     }
     if (txtPrice.hasFocus()) {
     String tempstr = "";
     String tempstr2 = "";
     tempstr = txtPrice.getText();
     for (int i = 0; i < tempstr.length() - 1; i++) {
     tempstr2 = tempstr2 + tempstr.charAt(i);
     }
     txtPrice.setText(tempstr2);
     }
     */
}//GEN-LAST:event_c_bntbs5MouseClicked

private void c_bntbs5MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bntbs5MouseReleased
    if (txtArCode.hasFocus()) {
        String tempstr = "";
        String tempstr2 = "";
        tempstr = txtArCode.getText();
        for (int i = 0; i
                < tempstr.length() - 1; i++) {
            tempstr2 = tempstr2 + tempstr.charAt(i);
        }
        txtArCode.setText(tempstr2);
    }
    if (_TCash.hasFocus()) {
        String tempstr = "";
        String tempstr2 = "";
        tempstr = _TCash.getText();
        for (int i = 0; i
                < tempstr.length() - 1; i++) {
            tempstr2 = tempstr2 + tempstr.charAt(i);
        }
        _TCash.setText(tempstr2);
    }
    if (_CreditAmt.hasFocus()) {
        String tempstr = "";
        String tempstr2 = "";

        tempstr = _CreditAmt.getText();

        for (int i = 0; i
                < tempstr.length() - 1; i++) {
            tempstr2 = tempstr2 + tempstr.charAt(i);
        }
        _CreditAmt.setText(tempstr2);
    }
    if (_TGiftvoucher.hasFocus()) {
        String tempstr = "";
        String tempstr2 = "";
        tempstr = _TGiftvoucher.getText();
        for (int i = 0; i
                < tempstr.length() - 1; i++) {
            tempstr2 = tempstr2 + tempstr.charAt(i);
        }
        _TGiftvoucher.setText(tempstr2);
    }

    if (_CrCardNo.hasFocus()) {
        String tempstr = "";
        String tempstr2 = "";
        tempstr = _CrCardNo.getText();
        for (int i = 0; i
                < tempstr.length() - 1; i++) {
            tempstr2 = tempstr2 + tempstr.charAt(i);
        }
        _CrCardNo.setText(tempstr2);
    }
    if (_CrAppNo.hasFocus()) {
        String tempstr = "";
        String tempstr2 = "";
        tempstr = _CrAppNo.getText();
        for (int i = 0; i
                < tempstr.length() - 1; i++) {
            tempstr2 = tempstr2 + tempstr.charAt(i);
        }
        _CrAppNo.setText(tempstr2);
    }
}//GEN-LAST:event_c_bntbs5MouseReleased

private void c_bnt4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bnt4MouseClicked
//inputfrombnt("4");
}//GEN-LAST:event_c_bnt4MouseClicked

private void c_bnt4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bnt4MouseReleased
    inputfrombnt("4");
}//GEN-LAST:event_c_bnt4MouseReleased

private void c_bnt5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bnt5MouseClicked
//inputfrombnt("5");
}//GEN-LAST:event_c_bnt5MouseClicked

private void c_bnt5MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bnt5MouseReleased
    inputfrombnt("5");
}//GEN-LAST:event_c_bnt5MouseReleased

private void c_bnt6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bnt6MouseClicked
//inputfrombnt("6");
}//GEN-LAST:event_c_bnt6MouseClicked

private void c_bnt6MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bnt6MouseReleased
    inputfrombnt("6");
}//GEN-LAST:event_c_bnt6MouseReleased

private void c_bntsubMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bntsubMouseClicked
//inputfrombnt("-");
}//GEN-LAST:event_c_bntsubMouseClicked

private void c_bntsubMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bntsubMouseReleased
    inputfrombnt("-");
}//GEN-LAST:event_c_bntsubMouseReleased

private void c_bntsubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_bntsubActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_c_bntsubActionPerformed

private void c_bntescMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bntescMouseClicked
    this.dispose();
}//GEN-LAST:event_c_bntescMouseClicked

private void c_bnt25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bnt25MouseClicked
//inputfrombnt("1");
}//GEN-LAST:event_c_bnt25MouseClicked

private void c_bnt25MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bnt25MouseReleased
    inputfrombnt("1");
}//GEN-LAST:event_c_bnt25MouseReleased

private void c_bnt2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bnt2MouseClicked
//inputfrombnt("2");
}//GEN-LAST:event_c_bnt2MouseClicked

private void c_bnt2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bnt2MouseReleased
    inputfrombnt("2");
}//GEN-LAST:event_c_bnt2MouseReleased

private void c_bnt3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bnt3MouseClicked
//inputfrombnt("3");
}//GEN-LAST:event_c_bnt3MouseClicked

private void c_bnt3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bnt3MouseReleased
    inputfrombnt("3");
}//GEN-LAST:event_c_bnt3MouseReleased

private void c_bntmultiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bntmultiMouseClicked
//inputfrombnt("*");
}//GEN-LAST:event_c_bntmultiMouseClicked

private void c_bntmultiMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bntmultiMouseReleased
    inputfrombnt("*");
}//GEN-LAST:event_c_bntmultiMouseReleased

private void c_bntenterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bntenterMouseClicked
    if (bntfunction.hasFocus()) {
        if (PublicVar.SubTotalOK) {
            this.dispose();
        }
    } else {
        if (_TCash.hasFocus()) {
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                MSG.ERR_MSG(this, e.getMessage());
            }
            _TCashExit();
        } else {

            if (_TCash.hasFocus()) {
                _TCashExit();
            } else {
                if (_CreditAmt.hasFocus()) {
                    _CreditAmtExit();
                } else {
                    if (_TGiftvoucher.hasFocus()) {
                        _TGiftvoucherExit();
                    } else {

                        if (_CrCardNo.hasFocus()) {
                            _CrCardNoExit();
                        } else {
                            if (_CrAppNo.hasFocus()) {
                                _CrAppNoExit();
                            } else {
                                if (txtArCode.hasFocus()) {
                                    txtArCodeExit();
                                }
                            }
                        }

                    }
                }

            }

        }

    }
}//GEN-LAST:event_c_bntenterMouseClicked

private void c_bntenterMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bntenterMouseReleased
}//GEN-LAST:event_c_bntenterMouseReleased

private void c_bntenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_bntenterActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_c_bntenterActionPerformed

private void c_bnt0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bnt0MouseClicked
}//GEN-LAST:event_c_bnt0MouseClicked

private void c_bnt0MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bnt0MouseReleased
    inputfrombnt("0");
}//GEN-LAST:event_c_bnt0MouseReleased

private void c_bntdotMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bntdotMouseClicked
//inputfrombnt(".");
}//GEN-LAST:event_c_bntdotMouseClicked

private void c_bntdotMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bntdotMouseReleased
    inputfrombnt(".");
}//GEN-LAST:event_c_bntdotMouseReleased

private void c_bntclrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bntclrMouseClicked
    /*
     if (txtTable.hasFocus()) {
     txtTable.setText("");
     }
     if (txtEmp.hasFocus()) {
     txtEmp.setText("");
     }
     if (txtCust.hasFocus()) {
     txtCust.setText("");
     }
     if (txtPluCode.hasFocus()) {
     txtPluCode.setText("");
     }
     if (txtPrice.hasFocus()) {
     txtPrice.setText("");
     }
     */
}//GEN-LAST:event_c_bntclrMouseClicked

private void c_bntclrMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bntclrMouseReleased
    if (txtArCode.hasFocus()) {
        txtArCode.setText("");
    }
    if (_TCash.hasFocus()) {
        _TCash.setText("");
    }
    if (_CreditAmt.hasFocus()) {
        _CreditAmt.setText("");
    }
    if (_TGiftvoucher.hasFocus()) {
        _TGiftvoucher.setText("");
    }

    if (_CrCardNo.hasFocus()) {
        _CrCardNo.setText("");
    }
    if (_CrAppNo.hasFocus()) {
        _CrAppNo.setText("");
    }
}//GEN-LAST:event_c_bntclrMouseReleased

private void c_bntsalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bntsalMouseClicked
//inputfrombnt("/");
}//GEN-LAST:event_c_bntsalMouseClicked

private void c_bntsalMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_bntsalMouseReleased
    inputfrombnt("/");
}//GEN-LAST:event_c_bntsalMouseReleased

private void txtArCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtArCodeKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtArCodeExit();
        tblAr.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntExitClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F1) {
        FindAr frm = new FindAr(null, true);
        frm.setVisible(true);
        if (!PublicVar.ReturnString.equals("")) {
            txtArCode.setText(PublicVar.ReturnString);
        } else {
            txtArCode.requestFocus(true);
        }
    }
}//GEN-LAST:event_txtArCodeKeyPressed

private void txtSumArNetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSumArNetActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_txtSumArNetActionPerformed

private void tblArKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblArKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        ClearAllArMark(txtArCode.getText());
        ClearAr();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F1) {
        GetSelectedRow1();
        LoadAr(txtArCode.getText());
        LoadArMark(txtArCode.getText());
    }
    if (evt.getKeyCode() == KeyEvent.VK_TAB) {
        tblArPay.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F7) {
        if (!_SubTotalOK && _CurAmount > 0) {
            bntCashClick();
        }
    }
    if (evt.getKeyCode() == KeyEvent.VK_F8) {
        if (!_SubTotalOK && _CurAmount > 0) {
            bntCreditClick();
        }

    }
    if (evt.getKeyCode() == KeyEvent.VK_F9) {
        if (!_SubTotalOK && _CurAmount > 0) {
            bntGiftVoucherClick();
        }
    }
}//GEN-LAST:event_tblArKeyPressed

private void tblArPayKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblArPayKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        ClearAllArMark(txtArCode.getText());
        ClearAr();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F1) {
        GetSelectedRow2();
        LoadAr(txtArCode.getText());
        LoadArMark(txtArCode.getText());
    }
    if (evt.getKeyCode() == KeyEvent.VK_TAB) {
        tblAr.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F7) {
        if (!_SubTotalOK && _CurAmount > 0) {
            bntCashClick();
        }
    }
    if (evt.getKeyCode() == KeyEvent.VK_F8) {
        if (!_SubTotalOK && _CurAmount > 0) {
            bntCreditClick();
        }

    }
    if (evt.getKeyCode() == KeyEvent.VK_F9) {
        if (!_SubTotalOK && _CurAmount > 0) {
            bntGiftVoucherClick();
        }
    }
}//GEN-LAST:event_tblArPayKeyPressed

private void tblArFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblArFocusGained
}//GEN-LAST:event_tblArFocusGained

private void tblArFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblArFocusLost
}//GEN-LAST:event_tblArFocusLost

private void tblArPayFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblArPayFocusGained
}//GEN-LAST:event_tblArPayFocusGained

private void _CrAppNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event__CrAppNoFocusLost
    // TODO add your handling code here:
    _CrAppNoExit();
}//GEN-LAST:event__CrAppNoFocusLost

private void _CreditAmtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event__CreditAmtFocusLost
    // TODO add your handling code here:
    _CreditAmtExit();
}//GEN-LAST:event__CreditAmtFocusLost

private void _CrCardNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event__CrCardNoFocusLost
    // TODO add your handling code here:
    _CrCardNoExit();
}//GEN-LAST:event__CrCardNoFocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        FindAr1Click();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void _TCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__TCashActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event__TCashActionPerformed
    public void GetEDC() {
    }

    public void txtArCodeExit() {
        if (txtArCode.getText().equals("")) {
            //JOptionPane.showMessageDialog(this, "กรุณาป้อนรหัสลูกหนี้ภายนอก..");
            txtArCode.setText("");
        } else {
            if (SeekAr(txtArCode.getText())) {
                if (ChkSumArCr(txtArCode.getText())) {
                    LoadAr(txtArCode.getText());
                    LoadArMark(txtArCode.getText());
                    tblAr.requestFocus();
                } else {
                    MSG.WAR_MSG(this, "รหัสลูกหนี้ " + txtArName.getText() + " ไม่มีรายการค้างชำระ...");
                    ClearAr();
                    txtArCode.requestFocus();
                }
            } else {
                MSG.WAR_MSG(this, "ไม่พบรหัสลูกหนี้ " + txtArCode.getText() + " ในฐานข้อมูลลูกหนี้ภายนออก...");
                ClearAr();
                txtArCode.setText("");

            }
        }
    }

    public void inputfrombnt(String Str) {
        try {
            Thread.sleep(50);
        } catch (InterruptedException e) {
            MSG.ERR_MSG(this, e.getMessage());
        }
        if (_TCash.hasFocus()) {
            String tempstr;
            tempstr = _TCash.getText();
            tempstr = tempstr + Str;
            _TCash.setText(tempstr);
        } else {
            if (_CreditAmt.hasFocus()) {
                String tempstr;
                tempstr = _CreditAmt.getText();
                tempstr = tempstr + Str;
                _CreditAmt.setText(tempstr);
            } else {
                if (_TGiftvoucher.hasFocus()) {
                    String tempstr;
                    tempstr = _TGiftvoucher.getText();
                    tempstr = tempstr + Str;
                    _TGiftvoucher.setText(tempstr);
                } else {
                    if (_CrCardNo.hasFocus()) {
                        String tempstr;
                        tempstr = _CrCardNo.getText();
                        tempstr = tempstr + Str;
                        _CrCardNo.setText(tempstr);
                    } else {
                        if (_CrAppNo.hasFocus()) {
                            String tempstr;
                            tempstr = _CrAppNo.getText();
                            tempstr = tempstr + Str;
                            _CrAppNo.setText(tempstr);
                        } else {
                            if (_CreditAmt.hasFocus()) {
                                String tempstr;
                                tempstr = _CreditAmt.getText();
                                tempstr = tempstr + Str;
                                _CreditAmt.setText(tempstr);
                            } else {
                                if (txtArCode.hasFocus()) {
                                    String tempstr;
                                    tempstr = txtArCode.getText();
                                    tempstr = tempstr + Str;
                                    txtArCode.setText(tempstr);

                                }
                            }

                        }

                    }
                }

            }

        }
    }

    public void ClearCredit() {
        _Cr_Bank = "";
        _Cr_Code1 = "";
        _Cr_CardNo1 = "";
        _Cr_App_Code1 = "";
        _Cr_Amount1 = 0.0;
        _Cr_Name1 = "";
        _CrName.setText("");
        _CrCardNo.setText("");
        _CrAppNo.setText("");
        _CreditAmt.setValue(0);
        _CrCardNo.setFocusable(false);
        _CrAppNo.setFocusable(false);
        _CrAppNo.setFocusable(false);
    }

    public void ShowSubtotal() {
        _TGiftvoucher.setText(DecFmt.format(_Gift_Voucher));
        _TCash.setText(DecFmt.format(_PayAmt));
        //_CreditAmt.setText(DecFmt.format(_Cr_Amount1));
        _CrCardNo.setText(_Cr_CardNo1);
        _CrAppNo.setText(_Cr_App_Code1);
        _CrName.setText(_Cr_Name1);
        CreditSize = CreditArray.length;
        CreditList.setText("");
        if (CreditCnt > 0) {
            for (int i = 0; i < CreditSize; i++) {
                CreditList.append(CreditArray[i].TableRec_Cr_Name1 + "    " + CreditArray[i].TableRec_Cr_CardNo1 + "   " + CreditArray[i].TableRec_Cr_App_Code1 + "  " + DecFmt.format(CreditArray[i].TableRec_Cr_Amount1) + "\n");
            }
        }
        _CurAmount = _NetTotal - (_Gift_Voucher + _Cr_Amount1 + _PayAmt);
        ShowDigital("จำนวนเงิน :", _CurAmount);
        //bntfunction.requestFocus();
    }

    public void ShowDigital(String Msg, double Amount) {
        Digital_Msg.setText(Msg);
        Digital_Amount.setText(DecFmt.format(Amount));
    }

    public void bntCashClick() {
        if (!_SubTotalOK) {
            _TCash.setText("");
            _TCash.setFocusable(true);
            _TCash.requestFocus();
            _TCash.selectAll();
        }
    }

    public void bntGiftVoucherClick() {
        Giftvoucher frm = new Giftvoucher(null, true);
        frm.setVisible(true);

        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String LoadTempGift = "select sum(giftamt) "
                    + "from tempgift where macno='" + Value.MACNO + "'";
            ResultSet rec = stmt.executeQuery(LoadTempGift);
            rec.first();
            if (rec.getRow() == 0) {
                _TGiftvoucher.setValue(0.0);
            } else {
                do {
                    _TGiftvoucher.setValue(rec.getDouble("sum(giftamt)"));
                } while (rec.next());
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            MSG.ERR_MSG(this, e.getMessage());
            e.printStackTrace();
        } finally {
            mysql.close();
        }

        _TGiftvoucherExit();
        bntfunction.requestFocus();

    }

    public void bntCreditClick() {
        GetHyPer = false;
        String TempCrNo = "";
        _CreditAmt.setFocusable(true);
        FindCredit frm = new FindCredit(null, true);
        frm.setVisible(true);
        if (!PublicVar.ReturnString.equals("")) {
            TempCrNo = PublicVar.ReturnString;
        }
        if (SeekCredit(TempCrNo)) {
            _CrName.setText(CrRec.CrName);
            _Cr_Name1 = CrRec.CrName;
            _Cr_Code1 = CrRec.CrCode;
            _Cr_Bank = CrRec.CrBank;
            //_Cr_Charge = CrRec.Charge;
            //_Cr_CardNo1 = "";
            //_Cr_App_Code1 = "";
            //_Cr_Amount1 = 0.0;
        } else {
            MSG.WAR_MSG(this, "ไม่พบข้อมูลบัตรเครดิตที่ต้องการ...");
        }

    }

    public void _TGiftvoucherExit() {
        double GiftOver = 0.0;
        double CurValue;
        CurValue = Double.parseDouble(PUtility.ConvertReal(_TGiftvoucher.getText()));
        _Gift_Voucher = CurValue;
        if (_Gift_Voucher > _NetTotal) {
            if (PUtility.ShowConfirmMsg("*** ยอดการชำระด้วยบัตรกำนัล/บัตรของขวัญ มากกว่ายอดที่ต้องจ่ายจริง ยืนยันการทำรายการหรือไม่ ? ")) {
                GiftOver = _Gift_Voucher - _NetTotal;
                //AddToDept23(GiftOver);
            } else {
                /**
                 * * OPEN CONNECTION **
                 */
                MySQLConnect mysql = new MySQLConnect();
                mysql.open();
                try {
                    Statement stmt = mysql.getConnection().createStatement();
                    String DeleteGift = "delete from tempgift where (macno=?) ";
                    PreparedStatement prm = mysql.getConnection().prepareStatement(DeleteGift);
                    prm.setString(1, Value.MACNO);
                    prm.executeUpdate();
                    stmt.close();
                    prm.close();
                } catch (SQLException e) {
                    MSG.ERR_MSG(this, e.getMessage());
                    e.printStackTrace();
                } finally {
                    mysql.close();
                }

                _Gift_Voucher = 0.0;
            }
        }
        ShowSubtotal();
        if (_NetTotal - (_PayAmt + _Gift_Voucher + _Cr_Amount1) <= 0) {
            _CurAmount = _NetTotal - (_PayAmt + _Gift_Voucher + _Cr_Amount1);
            _Cash = _NetTotal - (_Gift_Voucher + _Cr_Amount1);
            _Gift_Voucher = _NetTotal - (_Cash + _Cr_Amount1);
            if (_CurAmount < 0) {
                _Ton = _CurAmount * -1;
                ShowDigital("เงินทอน   : ", _CurAmount * -1);
            } else {
                _Ton = _CurAmount;
                ShowDigital("เงินทอน   : ", _CurAmount);
            }
            _TGiftvoucher.setFocusable(false);
            if (ChkPrintOK()) {
                _SubTotalOK = true;
                SaveDataArPayment();
            } else {
                ClearAllArMark(txtArCode.getText());
                ClearAr();
            }
        } else {
            _CurAmount = _NetTotal - (_PayAmt + _Gift_Voucher + _Cr_Amount1);
            ShowDigital("จำนวนเงิน :", _CurAmount);
            _SubTotalOK = false;
            _TGiftvoucher.setFocusable(false);
            bntfunction.requestFocus();
        }
    }

    public String FindArBillNo() {
        String RetVal;
        int TempBill = 0;

        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "select *from branch ";
            ResultSet rec = stmt.executeQuery(SqlQuery);
            rec.first();
            int Cnt = 0;
            if (rec.getRow() == 0) {
                TempBill = 0;
            } else {
                TempBill = rec.getInt("arbillno");
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            MSG.ERR(e.getMessage());
            e.printStackTrace();
        }
        TempBill = TempBill + 1;
        String TempStr = IntFmt.format(TempBill);
        RetVal = PUtility.Addzero(TempStr, 7);
        try {
            Statement stmt1 = mysql.getConnection().createStatement();
            String SqlQuery = "update branch set arbillno=" + TempBill;
            stmt1.executeUpdate(SqlQuery);
            stmt1.close();
        } catch (SQLException e) {
            MSG.ERR(e.getMessage());
            e.printStackTrace();
        }

        mysql.close();

        return RetVal;
    }

    public void SaveDataArPayment() {
        String XRef_No = FindArBillNo();
        String ArCode = "";
        String ReferentNo = XRef_No;
        if (_SubTotalOK) {
            ArCode = txtArCode.getText();

            /**
             * * OPEN CONNECTION **
             */
            MySQLConnect mysql = new MySQLConnect();
            mysql.open();
            try {
                Statement stmt = mysql.getConnection().createStatement();
                String SqlQuery = "insert into billar (ref_no,ondate,arcode,stotal,cash,cupon,credit,terminal,"
                        + "cashier,fat,uservoid) "
                        + "values (?,?,?,?,?,?,?,?,?,?,?)";
                PreparedStatement prm = mysql.getConnection().prepareStatement(SqlQuery);
                prm.setString(1, XRef_No);
                prm.setString(2, Datefmt.format(date));
                prm.setString(3, ArCode);
                prm.setDouble(4, _NetTotal);

                prm.setDouble(5, _Cash);
                prm.setDouble(6, _Gift_Voucher);
                prm.setDouble(7, _Cr_Amount1);
                prm.setString(8, Value.MACNO);
                prm.setString(9, PublicVar._User);
                prm.setString(10, "N");
                prm.setString(11, "");
                prm.executeUpdate();
                stmt.close();
            } catch (SQLException e) {
                MSG.ERR(e.getMessage());
                e.printStackTrace();
            }
            try {
                Statement stmt = mysql.getConnection().createStatement();
                String SqlQuery = "select *from  accr where (arcode='" + ArCode + "') and (arflage<>'Y') and (armark='Y')";
                ResultSet rec = stmt.executeQuery(SqlQuery);
                rec.first();
                if (rec.getRow() == 0) {
                } else {
                    do {
                        Statement stmt2 = mysql.getConnection().createStatement();
                        String InsertQuery = "insert into t_ar  (ref_no,arcode,billno,billdate,amount,fat,terminal,cashier) "
                                + "values (?,?,?,?,?,?,?,?)";
                        PreparedStatement prm = mysql.getConnection().prepareStatement(InsertQuery);
                        prm.setString(1, XRef_No);
                        prm.setString(2, ArCode);
                        prm.setString(3, rec.getString("arno"));
                        prm.setString(4, Datefmt.format(rec.getDate("ardate")));
                        prm.setDouble(5, rec.getDouble("arnet"));
                        prm.setString(6, "N");
                        prm.setString(7, Value.MACNO);
                        prm.setString(8, PublicVar._User);
                        prm.executeUpdate();
                        stmt2.close();
                    } while (rec.next());
                }
                stmt.close();
            } catch (SQLException e) {
                MSG.ERR(e.getMessage());
                e.printStackTrace();
            }

            if ((_Cr_Amount1 > 0 && CreditCnt > 0)) {
                int CrCnt = CreditArray.length;
                for (int i = 0; i < CrCnt; i++) {
                    try {
                        Statement stmt = mysql.getConnection().createStatement();
                        String SqlQuery = "insert into t_crar (ref_no,crcode,crcnt,cramt,fat,crid,crapp,terminal,cashier) "
                                + "values (?,?,?,?,?,ENCODE(?,'snpfood'),?,?,?)";
                        PreparedStatement prm = mysql.getConnection().prepareStatement(SqlQuery);
                        prm.setString(1, XRef_No);
                        prm.setString(2, CreditArray[i].TableRec_Cr_Code1);
                        prm.setInt(3, 1);
                        prm.setDouble(4, CreditArray[i].TableRec_Cr_Amount1);
                        prm.setString(5, "N");
                        prm.setString(6, CreditArray[i].TableRec_Cr_CardNo1);
                        prm.setString(7, CreditArray[i].TableRec_Cr_App_Code1);
                        prm.setString(8, Value.MACNO);
                        prm.setString(9, PublicVar._User);
                        prm.executeUpdate();
                        stmt.close();
                    } catch (SQLException e) {
                        MSG.ERR(e.getMessage());
                        e.printStackTrace();
                    }
                }
            }
            try {
                Statement stmt = mysql.getConnection().createStatement();
                String SqlQuery = "update accr set arpaytype=?,ardocpay=?,arpdate=?,arflage=?,aramtpay=arnet,"
                        + "arbranpay=? "
                        + "where (arcode=?) and (arflage<>'Y') and (armark='Y')";
                PreparedStatement prm = mysql.getConnection().prepareStatement(SqlQuery);
                if (_Cr_Amount1 > 0) {
                    prm.setString(1, "3");
                } else {
                    prm.setString(1, "1");
                }
                prm.setString(2, XRef_No);
                prm.setString(3, Datefmt.format(date));
                prm.setString(4, "Y");
                prm.setString(5, PublicVar.Branch_Code);
                prm.setString(6, ArCode);
                prm.executeUpdate();
                stmt.close();
            } catch (SQLException e) {
                MSG.ERR(e.getMessage());
                e.printStackTrace();
            }

            mysql.close();
        }

        PrintBillAr(XRef_No, ArCode, ReferentNo);
        bntfunction.requestFocus();
    }

    public void PrintBillAr(String XRef_No, String ArCode, String ReferentNo) {
        int QtyLength = 5;
        int AmtLength = 10;
        if (!Value.getComPort().equals("NONE")) {
            if (Value.printdriver) {
                PrintBillArDriver(XRef_No, ArCode, ReferentNo);
            } else {
                if (prn.OpenPrint(Value.getComPort())) {
                    prn.InitPrinter();
                    prn.print(POSHW.getHeading1());
                    prn.print(POSHW.getHeading2());
                    prn.print(POSHW.getHeading3());
                    prn.print(POSHW.getHeading4());
                    prn.print("REG ID :" + Value.MACNO);
                    prn.print("  รายการรับเงินลูกหนี้ภายนอก..ไม่ใช่ใบกำกับภาษี");
                    prn.print(" ");
                    prn.print(DateTimeFmt.format(date) + " " + "Cashier:" + PublicVar._User + " Mac:" + Value.MACNO);
                    prn.print("----------------------------------------");
                    prn.print(PUtility.DataFullR(txtArCode.getText(), 8) + " " + PUtility.DataFullR(txtArName.getText(), 30));
                    prn.print("อ้างถึงใบกำกับภาษีเลขที่             จำนวนเงิน ");
                    prn.print("----------------------------------------");

                    double SumCardAmt = 0.0;
                    /**
                     * * OPEN CONNECTION **
                     */
                    MySQLConnect mysql = new MySQLConnect();
                    mysql.open();
                    try {
                        Statement stmt = mysql.getConnection().createStatement();
                        String SqlQuery = "select *from accr where ardocpay='" + XRef_No + "'";
                        ResultSet rec = stmt.executeQuery(SqlQuery);
                        rec.first();
                        if (rec.getRow() == 0) {
                        } else {
                            do {
                                prn.print(rec.getString("arno") + "  " + DatefmtShow.format(rec.getDate("ardate")) + " " + PUtility.DataFull(DecFmt.format(rec.getDouble("arnet")), 11));
                                SumCardAmt = SumCardAmt + rec.getDouble("arnet");
                            } while (rec.next());
                        }
                        rec.close();
                        stmt.close();
                    } catch (SQLException e) {
                        PUtility.showError(e.getMessage());
                    }
                    prn.print("----------------------------------------");
                    prn.print("Sum-Total                  " + PUtility.DataFull(DecFmt.format(SumCardAmt), 12));
                    prn.print("----------------------------------------");
                    if (_Gift_Voucher > 0) {
                        prn.print("     Gift Voucher.........." + PUtility.DataFull(DecFmt.format(_Gift_Voucher), 12));
                    }
                    if (_PayAmt > 0) {
                        prn.print("     Cash Payment.........." + PUtility.DataFull(DecFmt.format(_Cash), 12));
                    }
                    if (_Cr_Amount1 > 0) {
                        int CrSize = CreditArray.length;
                        for (int i = 0; i < CrSize; i++) {
                            prn.print(CreditArray[i].TableRec_Cr_Code1 + "  " + CreditArray[i].TableRec_Cr_Name1);
                            prn.print("XXXXXXXXXXX" + PUtility.Addzero(CreditArray[i].TableRec_Cr_CardNo1, 16).substring(12, 16) + "  " + CreditArray[i].TableRec_Cr_App_Code1);
                            if (CreditArray[i].TableRec_Cr_ChargeAmt > 0) {
                                prn.print("CR-Charge " + PUtility.DataFull(DecFmt.format(CreditArray[i].TableRec_Cr_Charge), QtyLength) + "%" + "(" + PUtility.DataFull(DecFmt.format(CreditArray[i].TableRec_Cr_ChargeAmt), 8) + ")  " + PUtility.DataFull(DecFmt.format(CreditArray[i].TableRec_Cr_Amount1), AmtLength));
                            } else {
                                prn.print("Credit Payment               " + PUtility.DataFull(DecFmt.format(CreditArray[i].TableRec_Cr_Amount1), AmtLength));
                            }
                            if ((CreditArray[i].TableRec_Cr_Bank.equals(POSHW.getSMPBank())) && (!CreditArray[i].TableRec_Cr_Bank.equals(""))) {

                                prn.print("----------------------------------------");
                                prn.print("   " + PUtility.DataFullR("ยอดเงินคงเหลือ (บาท)..........", 27) + PUtility.DataFull(DecFmt.format(CreditArray[i].TableRec_Cr_CardAmt), 10));
                                prn.print("   " + PUtility.DataFullR("ได้แต้มครั้งนี้ (แต้ม).............", 27) + PUtility.DataFull(IntFmt.format(CreditArray[i].TableRec_Cr_CurPoint), 10));
                                prn.print("   " + PUtility.DataFullR("แต้มคงเหลือ (แต้ม).............", 27) + PUtility.DataFull(IntFmt.format(CreditArray[i].TableRec_Cr_SumPoint), 10));
                                prn.print("----------------------------------------");
                                prn.print("   " + PUtility.DataFullR("ยอดชำระผ่านบัตร (บาท).........", 27) + PUtility.DataFull(DecFmt.format(CreditArray[i].TableRec_Cr_PurseAmt), 10));

                                if (PublicVar.SmpCouponArray != null) {
                                    if (!PublicVar.SmpCouponArray.isEmpty()) {
                                        DecimalFormat IntFmt2 = new DecimalFormat("#######0");
                                        prn.print("คูปองดิจิตอล                   ใช้ไป คงเหลือ ");
                                        for (int j = 0; j < PublicVar.SmpCouponArray.size(); j++) {
                                            SmpCoupon SmpCu = PublicVar.SmpCouponArray.get(j);
                                            prn.print(PUtility.DataFullR(SmpCu.SmpCouponName.trim() + "..................", 26) + " " + PUtility.DataFull(IntFmt2.format(-1 * SmpCu.SmpCouponqty), 6) + "  " + PUtility.DataFull(IntFmt2.format(SmpCu.SmpCouponTotal), 5));
                                        }
                                    }
                                }
                            }
                        }
                    }
                    prn.print("----------------------------------------");
                    prn.print("                AR/Pay NO " + XRef_No);
                    prn.print(" ");
                    prn.print(" ");
                    prn.print(" ");
                    prn.CutPaper();
                    prn.closePrint();
                }
            }

        }

    }

    public void PrintBillArDriver(String XRef_No, String ArCode, String ReferentNo) {
        String t = "";
        String ArName = "";
//        double SumCardAmt = 0.0;
        double ArVat = 0.0;
        if (POSHW.getHeading1().trim().length() >= 18) {
            String[] strs = POSHW.getHeading1().trim().replace(" ", Space).split("_");
            for (String data : strs) {
                t += "colspan=3 align=center><font face=Angsana New size=1>" + data + "_";
            }
        } else {
            t += "colspan=3 align=center><font face=Angsana New size=1>" + POSHW.getHeading1().trim().replace(" ", "&nbsp; ") + "_";
        }
        if (POSHW.getHeading2().length() >= 18) {
            String[] strs = POSHW.getHeading2().trim().replace(" ", Space).split("_");
            for (String data : strs) {
                t += "colspan=3 align=center><font face=Angsana New size=1>" + data + "_";
            }
        } else {
            t += "colspan=3 align=center><font face=Angsana New size=1>" + POSHW.getHeading2().trim().replace(" ", "&nbsp; ") + "_";
        }
        t += "colspan=3 align=center><font face=Angsana New size=1>" + (POSHW.getHeading3().trim()) + "_";
        t += "colspan=3 align=center><font face=Angsana New size=1>" + (POSHW.getHeading4()).trim() + "_";
        t += "colspan=3 align=center><font face=Angsana New size=1>" + "REG.ID :" + Space + (POSHW.getTerminal()) + "_";
        t += "colspan=3 align=left><font face=Angsana New size=1>" + ("_");
        t += "colspan=3 align=left><font face=Angsana New size=1>" + "Print Date" + Space + (DatefmtThai.format(date)) + "_";
        t += "colspan=3 align=left><font face=Angsana New size=1>" + "Cashier:" + PublicVar._UserName + TAB + " Mac:" + Value.MACNO + "_";
        t += "colspan=3 align=center><font face=Angsana New size=1>" + ("----------------------------------------------") + "_";
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "select *from accr where ardocpay='" + XRef_No + "'";
            ResultSet rec = stmt.executeQuery(SqlQuery);
            rec.first();
            if (rec.getRow() == 0) {
            } else {
                t += "colspan=3 align=center><font face=Angsana New size=1>" + ("รายการรับเงินลูกหนี้ภายนอก : ไม่ใช่ใบกำกับภาษี") + "_";
                do {
                    t += "colspan=3 align=left><font face=Angsana New size=1>" + "อ้างถึงใบเสร็จเลขที่" + TAB + "มูลค่า..." + "_";
                    t += "colspan=3 align=left><font face=Angsana New size=1>" + rec.getString("arno") + TAB + DatefmtShow.format(rec.getDate("ardate")) + TAB + PUtility.DataFullR(DecFmt.format(rec.getDouble("arnet")), 11) + "_";
//                    SumCardAmt = SumCardAmt + rec.getDouble("arnet");
                    ArVat = rec.getDouble("ArNet");
                    try {
                        String sqlGetCustFile = "select sp_desc,sp_cr from custfile where sp_code='" + ArCode + "'";
                        MySQLConnect c = new MySQLConnect();
                        c.open();
                        ResultSet rsCustfile = c.getConnection().createStatement().executeQuery(sqlGetCustFile);
                        if (rsCustfile.next()) {
                            ArName = ThaiUtil.ASCII2Unicode(rsCustfile.getString("sp_desc"));
                            t += "colspan=3 align=left><font face=Angsana New size=1>" + TAB + (ArName) + "_";
                        }
                        rsCustfile.close();
                        c.close();
                    } catch (Exception e) {
                        MSG.NOTICE(e.toString());
                    }
                    t += "colspan=2 align=left><font face=Angsana New size=1>" + "Sub-Total..." + "</td></font><td align=right><font face=Angsana New size=1>" + DecFmt.format(_NetTotal) + "_";
                    if (_Cash > 0) {
                        t += "colspan=2 align=left><font face=Angsana New size=1>" + "CashPay : " + _TCash.getText() + "</td></font><td align=right><font face=Angsana New size=1>Ton : " + DecFmt.format(_Ton) + "_";
                    } else if (_Gift_Voucher > 0) {
                        t += "colspan=2 align=left><font face=Angsana New size=1>" + "GiftVoucher..." + "</td></font><td align=right><font face=Angsana New size=1>" + DecFmt.format(_TGiftvoucher) + "_";
                    } else if (_Cr_Amount1 > 0) {
                        t += "colspan=2 align=left><font face=Angsana New size=1>" + "Credit : " + "</td></font><td align=right><font face=Angsana New size=1>" + DecFmt.format(_Cr_Amount1) + "_";
                    }
                    t += "colspan=3 align=center><font face=Angsana New size=1>" + ("----------------------------------------------") + "_";
                } while (rec.next());

            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            MSG.NOTICE(e.toString());
        }
        PrintDriver pd = new PrintDriver();
        String[] strs = t.split("_");

        for (String data1 : strs) {
            pd.addTextIFont(data1);
            try {
                Thread.sleep(50);
            } catch (InterruptedException e) {
            }
        }
        pd.printHTML();
    }

    public void _TCashExit() {
        double CurValue;
        CurValue = Double.parseDouble(PUtility.ConvertReal(_TCash.getText()));
        _PayAmt = CurValue;
        ShowSubtotal();
        if (_NetTotal - (_PayAmt + _Gift_Voucher + _Cr_Amount1) <= 0) {
            _CurAmount = _NetTotal - (_PayAmt + _Gift_Voucher + _Cr_Amount1);
            _Cash = _NetTotal - (_Gift_Voucher + _Cr_Amount1);
            if (_CurAmount < 0) {
                _Ton = _CurAmount * -1;
                ShowDigital("เงินทอน   : ", _CurAmount * -1);
            } else {
                _Ton = _CurAmount;
                ShowDigital("เงินทอน   : ", _CurAmount);
            }

            _TCash.setFocusable(false);
            if (ChkPrintOK()) {
                _SubTotalOK = true;
                SaveDataArPayment();
            } else {
                ClearAllArMark(txtArCode.getText());
                ClearAr();
            }
            txtArCode.requestFocus();
        } else {
            _CurAmount = _NetTotal - (_PayAmt + _Gift_Voucher + _Cr_Amount1);
            ShowDigital("จำนวนเงิน :", _CurAmount);
            _SubTotalOK = false;
            _TCash.setFocusable(false);
            bntfunction.requestFocus();
        }
    }

    public Boolean ChkPrintOK() {
        Boolean RetVal = false;
        if (!Value.getComPort().equals("NONE")) {
            if (Value.printdriver) {
                RetVal = true;
            } else {
                if (prn.OpenPrint(Value.getComPort())) {
                    prn.closePrint();
                    RetVal = true;
                }
            }

        }

        return RetVal;
    }

    public void _CrAppNoExit() {
        if (!ESCKEY) {
            if (_CrAppNo.getText().equals("")) {
                PUtility.ShowMsg("กรุณาป้อนรหัสอนุมัติ...");
                _CrAppNo.requestFocus();
            }
            if (!_CrAppNo.getText().equals("")) {
                if (_CrAppNo.getText().length() <= 6) {
                    ProcessCreditOK();
                } else {
                    MSG.WAR_MSG(this, "รหัสอนุมัติบัตรเครดิต ป้อนได้ไม่เกิน 6 ตัวอักษร...");
                    _CrAppNo.requestFocus();
                }
            }
        }
    }

    public void _CrCardNoExit() {
        if (!ESCKEY) {
            if (!_CrCardNo.getText().equals("")) {
                if (_CrCardNo.getText().length() <= 16) {
                    //_CrCardNoExit();
                    _CrAppNo.setFocusable(true);
                    _CrAppNo.requestFocus();
                } else {
                    MSG.WAR_MSG(this, "รหัสบัตรเครดิต ป้อนได้ไม่เกิน 16 ตัวอักษร...");
                    _CrCardNo.requestFocus();
                }
            } else {
                GetEDC();
            }
        }
    }

    public boolean SeekCredit(String CrCode) {
        Boolean RetVal = false;
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SeekCuList = "select *from creditfile where crcode='" + CrCode + "'";

            ResultSet rec = stmt.executeQuery(SeekCuList);
            rec.first();
            if (rec.getRow() == 0) {
                RetVal = false;
            } else {
                RetVal = true;
                CrRec = new CreditRec();
                CrRec.CrCode = rec.getString("CrCode");
                CrRec.CrName = ThaiUtil.ASCII2Unicode(rec.getString("CrName"));
                CrRec.GetCardNo = rec.getString("crgetcardno");
                CrRec.Charge = rec.getDouble("crcharge");
                CrRec.Redule = rec.getDouble("crredule");
                CrRec.CrBank = rec.getString("crbank");
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            MSG.ERR_MSG(this, e.getMessage());
            e.printStackTrace();
        } finally {
            mysql.close();
        }

        return RetVal;
    }

    public Boolean SeekAr(String ArCode) {
        Boolean RetVal = false;
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();

        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "select *from custfile where sp_code='" + ArCode + "'";

            ResultSet rec = stmt.executeQuery(SqlQuery);
            rec.first();
            int Cnt = 0;
            if (rec.getRow() == 0) {
                RetVal = false;
            } else {
                RetVal = true;
                txtArName.setText(ThaiUtil.ASCII2Unicode(rec.getString("sp_desc")));
                txtArCr.setValue(rec.getDouble("sp_cramt"));
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            MSG.ERR_MSG(this, e.getMessage());
            e.printStackTrace();
        }
        return RetVal;
    }

    public Boolean ChkSumArCr(String ArCode) {
        Boolean RetVal = false;
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "select sum(arnet),count(arno) from accr where (arcode='" + ArCode + "') and (arflage<>'Y')";

            ResultSet rec = stmt.executeQuery(SqlQuery);
            rec.first();
            int Cnt = 0;
            if (rec.getRow() == 0) {
                RetVal = false;
            } else {
                if (rec.getDouble("count(arno)") == 0) {
                    RetVal = false;
                } else {
                    RetVal = true;
                    txtArCount.setValue(rec.getDouble("count(arno)"));
                    txtSumArNet.setValue(rec.getDouble("sum(arnet)"));
                }
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            MSG.ERR_MSG(this, e.getMessage());
            e.printStackTrace();
        }

        return RetVal;
    }

    public void bntExitClick() {
        if (!txtArCode.getText().equals("")) {
            ClearAllArMark(txtArCode.getText());
        }
        this.dispose();
    }

    public void LoadAr(String ArCode) {
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "select *from accr where (arcode='" + ArCode + "') and (arflage<>'Y') and (armark<>'Y')";

            ResultSet rec = stmt.executeQuery(SqlQuery);
            Date dt = new Date();
            int RowCount = model1.getRowCount();
            for (int i = 0; i <= RowCount - 1; i++) {
                model1.removeRow(0);
            }
            rec.first();
            if (rec.getRow() == 0) {
            } else {
                do {
                    Object[] input = {rec.getString("arno"),
                        DatefmtShow.format(rec.getDate("ardate")),
                        rec.getDouble("arnet"),
                        DatefmtShow.format(rec.getDate("ardue"))
                    };
                    model1.addRow(input);
                } while (rec.next());
                RowCount = model1.getRowCount();
                showCell1(0, 0);
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            MSG.ERR_MSG(this, e.getMessage());
            e.printStackTrace();
        } finally {
            mysql.close();
        }

    }

    public void showCell1(int row, int column) {
        Rectangle rect = tblAr.getCellRect(row, column, true);
        tblAr.scrollRectToVisible(rect);
        tblAr.clearSelection();
        tblAr.setRowSelectionInterval(row, row);
    }

    public void LoadArMark(String ArCode) {
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "select *from accr where (arcode='" + ArCode + "') and (arflage<>'Y') and (armark='Y')";

            ResultSet rec = stmt.executeQuery(SqlQuery);
            Date dt = new Date();
            int RowCount = model2.getRowCount();
            for (int i = 0; i <= RowCount - 1; i++) {
                model2.removeRow(0);
            }
            rec.first();
            if (rec.getRow() == 0) {
            } else {
                do {
                    Object[] input = {rec.getString("arno"),
                        DatefmtShow.format(rec.getDate("ardate")),
                        rec.getDouble("arnet"),
                        DatefmtShow.format(rec.getDate("ardue"))
                    };
                    model2.addRow(input);
                } while (rec.next());
                RowCount = model2.getRowCount();
                showCell2(0, 0);
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            MSG.ERR_MSG(this, e.getMessage());
            e.printStackTrace();
        } finally {
            mysql.close();
        }

    }

    public void showCell2(int row, int column) {
        Rectangle rect = tblArPay.getCellRect(row, column, true);
        tblArPay.scrollRectToVisible(rect);
        tblArPay.clearSelection();
        tblArPay.setRowSelectionInterval(row, row);
    }

    public void ClearAllArMark(String ArCode) {
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "update accr set armark='N' where (arcode='" + ArCode + "') and (arflage<>'Y') ";
            stmt.executeUpdate(SqlQuery);
            stmt.close();
        } catch (SQLException e) {
            MSG.ERR_MSG(this, e.getMessage());
            e.printStackTrace();
        }

        mysql.close();
    }

    public void ClearAr() {
        CreditArray = null;
        CreditArray = new CreditPaymentRec[1];
        CreditCnt = 0;
        ClearCredit();
        int RowCount;
        RowCount = model1.getRowCount();
        for (int i = 0; i <= RowCount - 1; i++) {
            model1.removeRow(0);
        }
        RowCount = model2.getRowCount();
        for (int i = 0; i <= RowCount - 1; i++) {
            model2.removeRow(0);
        }
        _SubTotalOK = false;
        _TCash.setValue(0);
        _TGiftvoucher.setValue(0);
        _CreditAmt.setValue(0);
        _CrCardNo.setText("");
        _CrAppNo.setText("");
        _CurAmount = 0.0;
        _NetTotal = 0.0;
        _PayAmt = 0.0;
        _Cash = 0.0;
        _Ton = 0.0;
        _Gift_Voucher = 0.0;
        _Cr_Amount1 = 0.0;
        _Cr_CardNo1 = "";
        _Cr_App_Code1 = "";
        _Cr_Name1 = "";
        ShowSubtotal();
        CashPayOK = false;
        txtArCode.setText("");
        txtArName.setText("");
        txtSumArNet.setValue(0);
        txtArCr.setValue(0);
        txtArCount.setValue(0);
        txtArCode.requestFocus();
    }

    public void GetSelectedRow1() {
        String ArCode = txtArCode.getText();
        int maxrow;
        int currow = 0;
        String TableSelected = "";
        maxrow = tblAr.getRowCount();
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        if (maxrow > 0) {
            for (int i = 0; i < maxrow; i++) {
                if (tblAr.isRowSelected(i)) {
                    currow = i;
                }
            }
            TableSelected = tblAr.getValueAt(currow, 0).toString();
            PublicVar.ReturnString = TableSelected;
            try {
                Statement stmt = mysql.getConnection().createStatement();
                String SqlQuery = "update accr set armark='Y' where (arno='" + TableSelected + "')";
                stmt.executeUpdate(SqlQuery);
                stmt.close();
            } catch (SQLException e) {
                MSG.ERR_MSG(this, e.getMessage());
                e.printStackTrace();
            }
        }
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "select sum(arnet) from accr where (arcode='" + ArCode + "') and (arflage<>'Y') and (armark='Y')";

            ResultSet rec = stmt.executeQuery(SqlQuery);
            rec.first();
            if (rec.getRow() == 0) {
                _NetTotal = 0.0;
            } else {
                _NetTotal = rec.getDouble("sum(arnet)");
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            MSG.ERR_MSG(this, e.getMessage());
            e.printStackTrace();
        }

        mysql.close();

        ShowSubtotal();

    }

    public void GetSelectedRow2() {
        String ArCode = txtArCode.getText();
        int maxrow;
        int currow = 0;
        String TableSelected = "";
        maxrow = tblArPay.getRowCount();
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        if (maxrow > 0) {
            for (int i = 0; i < maxrow; i++) {
                if (tblArPay.isRowSelected(i)) {
                    currow = i;
                }
            }
            TableSelected = tblArPay.getValueAt(currow, 0).toString();
            try {
                Statement stmt = mysql.getConnection().createStatement();
                String SqlQuery = "update accr set armark='N' where (arno='" + TableSelected + "')";
                stmt.executeUpdate(SqlQuery);
                stmt.close();
            } catch (SQLException e) {
                MSG.ERR_MSG(this, e.getMessage());
                e.printStackTrace();
            }
        }
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "select sum(arnet) from accr  where (arcode='" + ArCode + "') and (arflage<>'Y') and (armark='Y')";

            ResultSet rec = stmt.executeQuery(SqlQuery);
            rec.first();
            int Cnt = 0;
            if (rec.getRow() == 0) {
                _NetTotal = 0.0;
            } else {
                _NetTotal = rec.getDouble("sum(arnet)");
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            MSG.ERR_MSG(this, e.getMessage());
            e.printStackTrace();
        }

        mysql.close();

        ShowSubtotal();
    }

    public void ProcessCreditOK() {
        double TempCreditAmt = 0.0;
        TempCreditAmt = Double.parseDouble(PUtility.ConvertReal(_CreditAmt.getText()));
        CreditCnt++;
        CreditPaymentRec CrPayRec = new CreditPaymentRec();
        CrPayRec.TableRec_Cr_Amount1 = TempCreditAmt;
        CrPayRec.TableRec_Cr_Bank = CrRec.CrBank;
        CrPayRec.TableRec_Cr_Code1 = CrRec.CrCode;
        CrPayRec.TableRec_Cr_Name1 = CrRec.CrName;
        CrPayRec.TableRec_Cr_Charge = CrRec.Charge;
        CrPayRec.TableRec_Cr_Redule = CrRec.Redule;
        CrPayRec.TableRec_Cr_CardNo1 = _CrCardNo.getText();
        CrPayRec.TableRec_Cr_App_Code1 = _CrAppNo.getText();
        if (CreditCnt > 1) {
            CreditArray = PUtility.addCreditArray(CreditArray);
        }
        CreditSize = CreditArray.length;
        CreditArray[CreditSize - 1] = CrPayRec;
        TempCreditAmt = Double.parseDouble(PUtility.ConvertReal(_CreditAmt.getText()));
        _Cr_Amount1 = _Cr_Amount1 + TempCreditAmt;
        if (_NetTotal - (_PayAmt + _Gift_Voucher + _Cr_Amount1) == 0) {
            _CurAmount = (_NetTotal - (_PayAmt + _Gift_Voucher + _Cr_Amount1));
            _Cash = _NetTotal - (_Gift_Voucher + _Cr_Amount1);
            _Gift_Voucher = _NetTotal - (_Cash + _Cr_Amount1);
            if (_CurAmount != 0) {
                _Ton = (_CurAmount * -1);
            } else {
                _Ton = (_CurAmount);
            }
            ShowSubtotal();
            ShowDigital("เงินทอน", _Ton);
            if (ChkPrintOK()) {
                _SubTotalOK = true;
                SaveDataArPayment();
            } else {
                ClearAllArMark(txtArCode.getText());
                ClearAr();
            }
            bntfunction.requestFocus();
        } else {
            _CurAmount = _NetTotal - (_PayAmt + _Gift_Voucher + _Cr_Amount1);
            ShowDigital("จำนวนเงิน :", _CurAmount);
            _SubTotalOK = false;
            _CrAppNo.setFocusable(false);
            ShowSubtotal();
        }
        _CrName.setText("");
        _CrCardNo.setText("");
        _CrAppNo.setText("");
        _CreditAmt.setValue(0);
        _CrCardNo.setFocusable(false);
        _CrAppNo.setFocusable(false);
        _CrAppNo.setFocusable(false);
        _CreditAmt.setFocusable(false);
    }

    public void _CreditAmtExit() {
        if (!ESCKEY) {
            double TempCreditAmt = 0.0;
            TempCreditAmt = Double.parseDouble(PUtility.ConvertReal(_CreditAmt.getText()));
            //if (!DecFmt.format(double.parsedouble(PUtility.ConvertReal(_CreditAmt.getText()))).equals(DecFmt.format(_CurAmount))) {
            if (Double.parseDouble(PUtility.ConvertReal(_CreditAmt.getText())) > (Double.parseDouble(PUtility.ConvertReal(DecFmt.format(_CurAmount))))) {
                JOptionPane.showMessageDialog(this, "ยอดรับชำระด้วยบัตรเครดิต มากกว่ายอดที่ต้องจ่ายจริง...");
                _CreditAmt.setValue(_CurAmount);
                _CreditAmt.requestFocus(true);
                _CreditAmt.selectAll();
            } else {
                _CreditAmt.setFocusable(false);
                if (TempCreditAmt > 0) {
                    _CrCardNo.setFocusable(true);
                    _CrCardNo.requestFocus();
                } else {
                    JOptionPane.showMessageDialog(this, "ยอดรับชำระด้วยบัตรเครดิต ต้องมากกว่า 0 บาท...");
                    _CreditAmt.setValue(_CurAmount);
                    _CreditAmt.requestFocus(true);
                    _CreditAmt.selectAll();
                }
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                ARPayment dialog = new ARPayment(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea CreditList;
    private javax.swing.JLabel Digital_Amount;
    private javax.swing.JLabel Digital_Msg;
    private javax.swing.JPanel PaymentPanel;
    private javax.swing.JTextField _CrAppNo;
    private javax.swing.JTextField _CrCardNo;
    private javax.swing.JTextField _CrName;
    private javax.swing.JFormattedTextField _CreditAmt;
    private javax.swing.JFormattedTextField _TCash;
    private javax.swing.JFormattedTextField _TGiftvoucher;
    private javax.swing.JButton bntCash;
    private javax.swing.JButton bntCredit;
    private javax.swing.JButton bntGiftVoicher;
    private javax.swing.JButton bntfunction;
    private javax.swing.JButton c_bnt0;
    private javax.swing.JButton c_bnt2;
    private javax.swing.JButton c_bnt22;
    private javax.swing.JButton c_bnt23;
    private javax.swing.JButton c_bnt24;
    private javax.swing.JButton c_bnt25;
    private javax.swing.JButton c_bnt3;
    private javax.swing.JButton c_bnt4;
    private javax.swing.JButton c_bnt5;
    private javax.swing.JButton c_bnt6;
    private javax.swing.JButton c_bntbs5;
    private javax.swing.JButton c_bntclr;
    private javax.swing.JButton c_bntdot;
    private javax.swing.JButton c_bntenter;
    private javax.swing.JButton c_bntesc;
    private javax.swing.JButton c_bntmulti;
    private javax.swing.JButton c_bntplus5;
    private javax.swing.JButton c_bntsal;
    private javax.swing.JButton c_bntsub;
    private javax.swing.JPanel calc5;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTable tblAr;
    private javax.swing.JTable tblArPay;
    private javax.swing.JTextField txtArCode;
    private javax.swing.JFormattedTextField txtArCount;
    private javax.swing.JFormattedTextField txtArCr;
    private javax.swing.JTextField txtArName;
    private javax.swing.JFormattedTextField txtSumArNet;
    // End of variables declaration//GEN-END:variables

    private void FindAr1Click() {
        FindAr frm = new FindAr(null, true);
        frm.setVisible(true);
        if (!PublicVar.ReturnString.equals("")) {
            txtArCode.setText(PublicVar.ReturnString);
            txtArCode.requestFocus();
        }
    }
}
