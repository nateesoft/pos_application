package com.softpos.posreport;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import database.MySQLConnect;
import java.sql.Statement;
import com.softpos.main.program.Jdi_report_SalePLU;
import com.softpos.main.program.PPrint;
import com.softpos.main.program.PUtility;
import com.softpos.main.program.PluRec;
import soft.virtual.KeyBoardDialog;
import sun.natee.project.util.ThaiUtil;
import util.MSG;

public class PLURep extends javax.swing.JDialog {

    PPrint prn = new PPrint();

    /**
     * Creates new form PLURep
     */
    public PLURep(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        txtMacNo1.setText("001");
        txtMacNo2.setText("999");
        txtCashNo1.setText("0000");
        txtCashNo2.setText("9999");
        txtGroup1.setText("0000");
        txtGroup2.setText("9999");
        txtPlu1.setText("0000");
        txtPlu2.setText("9999");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        bntExit = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMacNo1 = new javax.swing.JTextField();
        txtMacNo2 = new javax.swing.JTextField();
        txtCashNo1 = new javax.swing.JTextField();
        txtCashNo2 = new javax.swing.JTextField();
        txtGroup1 = new javax.swing.JTextField();
        txtGroup2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPlu1 = new javax.swing.JTextField();
        txtPlu2 = new javax.swing.JTextField();
        bntOK1 = new javax.swing.JButton();
        bntOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("รายงานการขายตามรหัสสินค้า (PLU Report)");
        setUndecorated(true);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        bntExit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bntExit.setText("ESC- ออก");
        bntExit.setFocusable(false);
        bntExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntExitActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.lightGray, 3));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("หมายเลขเครื่อง");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("รหัสพนักงาน");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("รหัสกลุ่มสินค้า");

        txtMacNo1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtMacNo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtMacNo1MouseClicked(evt);
            }
        });
        txtMacNo1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMacNo1KeyPressed(evt);
            }
        });

        txtMacNo2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtMacNo2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtMacNo2MouseClicked(evt);
            }
        });
        txtMacNo2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMacNo2KeyPressed(evt);
            }
        });

        txtCashNo1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtCashNo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCashNo1MouseClicked(evt);
            }
        });
        txtCashNo1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCashNo1KeyPressed(evt);
            }
        });

        txtCashNo2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtCashNo2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCashNo2MouseClicked(evt);
            }
        });
        txtCashNo2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCashNo2KeyPressed(evt);
            }
        });

        txtGroup1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtGroup1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtGroup1MouseClicked(evt);
            }
        });
        txtGroup1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGroup1KeyPressed(evt);
            }
        });

        txtGroup2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtGroup2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtGroup2MouseClicked(evt);
            }
        });
        txtGroup2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGroup2KeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("รหัสสินค้า (PLU)");

        txtPlu1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtPlu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPlu1MouseClicked(evt);
            }
        });
        txtPlu1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPlu1KeyPressed(evt);
            }
        });

        txtPlu2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtPlu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPlu2MouseClicked(evt);
            }
        });
        txtPlu2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPlu2KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPlu1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtGroup1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtCashNo1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtMacNo1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPlu2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtGroup2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtCashNo2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtMacNo2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMacNo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMacNo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtCashNo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCashNo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGroup1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGroup2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPlu1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPlu2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bntOK1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bntOK1.setText("F1- จอภาพ");
        bntOK1.setFocusable(false);
        bntOK1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntOK1ActionPerformed(evt);
            }
        });

        bntOK.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bntOK.setText("F5- พิมพ์");
        bntOK.setFocusable(false);
        bntOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(bntOK1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bntOK, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bntExit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntExit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntOK, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntOK1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

private void txtMacNo1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMacNo1KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntExitClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F5) {
        bntOKClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F1) {
        bntViewClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtMacNo2.requestFocus();
    }
}//GEN-LAST:event_txtMacNo1KeyPressed

private void txtMacNo2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMacNo2KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntExitClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F5) {
        bntOKClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtCashNo1.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F1) {
        bntViewClick();
    }
}//GEN-LAST:event_txtMacNo2KeyPressed

private void txtCashNo1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCashNo1KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntExitClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F5) {
        bntOKClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtCashNo2.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F1) {
        bntViewClick();
    }
}//GEN-LAST:event_txtCashNo1KeyPressed

private void txtCashNo2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCashNo2KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntExitClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F5) {
        bntOKClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtGroup1.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F1) {
        bntViewClick();
    }
}//GEN-LAST:event_txtCashNo2KeyPressed

private void txtGroup1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGroup1KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntExitClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F5) {
        bntOKClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtGroup2.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F1) {
        bntViewClick();
    }
}//GEN-LAST:event_txtGroup1KeyPressed

private void txtGroup2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGroup2KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntExitClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F5) {
        bntOKClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtPlu1.requestFocus();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F1) {
        bntViewClick();
    }
}//GEN-LAST:event_txtGroup2KeyPressed

private void bntExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntExitActionPerformed
    bntExitClick();
}//GEN-LAST:event_bntExitActionPerformed

private void txtPlu1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlu1KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntExitClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F5) {
        bntOKClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

        txtPlu2.requestFocus();

    }
    if (evt.getKeyCode() == KeyEvent.VK_F1) {
        bntViewClick();
    }
}//GEN-LAST:event_txtPlu1KeyPressed

private void txtPlu2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlu2KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntExitClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F5) {
        bntOKClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

        txtMacNo1.requestFocus();

    }
    if (evt.getKeyCode() == KeyEvent.VK_F1) {
        bntViewClick();
    }
}//GEN-LAST:event_txtPlu2KeyPressed

private void bntOK1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntOK1ActionPerformed
    bntViewClick();
}//GEN-LAST:event_bntOK1ActionPerformed

    private void txtMacNo1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMacNo1MouseClicked
        if (evt.getClickCount() == 2) {
            KeyBoardDialog.get(txtMacNo1);
        }
    }//GEN-LAST:event_txtMacNo1MouseClicked

    private void txtMacNo2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMacNo2MouseClicked
        if (evt.getClickCount() == 2) {
            KeyBoardDialog.get(txtMacNo2);
        }
    }//GEN-LAST:event_txtMacNo2MouseClicked

    private void txtCashNo1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCashNo1MouseClicked
        if (evt.getClickCount() == 2) {
            KeyBoardDialog.get(txtCashNo1);
        }
    }//GEN-LAST:event_txtCashNo1MouseClicked

    private void txtCashNo2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCashNo2MouseClicked
        if (evt.getClickCount() == 2) {
            KeyBoardDialog.get(txtCashNo2);
        }
    }//GEN-LAST:event_txtCashNo2MouseClicked

    private void txtGroup1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtGroup1MouseClicked
        if (evt.getClickCount() == 2) {
            KeyBoardDialog.get(txtGroup1);
        }
    }//GEN-LAST:event_txtGroup1MouseClicked

    private void txtGroup2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtGroup2MouseClicked
        if (evt.getClickCount() == 2) {
            KeyBoardDialog.get(txtGroup2);
        }
    }//GEN-LAST:event_txtGroup2MouseClicked

    private void txtPlu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPlu1MouseClicked
        if (evt.getClickCount() == 2) {
            KeyBoardDialog.get(txtPlu1);
        }
    }//GEN-LAST:event_txtPlu1MouseClicked

    private void txtPlu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPlu2MouseClicked
        if (evt.getClickCount() == 2) {
            KeyBoardDialog.get(txtPlu2);
        }
    }//GEN-LAST:event_txtPlu2MouseClicked

    private void bntOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntOKActionPerformed
        bntOKClick();
    }//GEN-LAST:event_bntOKActionPerformed
    public void bntViewClick() {
        String MacNo1 = txtMacNo1.getText();
        String MacNo2 = txtMacNo2.getText();
        String CashNo1 = txtCashNo1.getText();
        String CashNo2 = txtCashNo2.getText();
        String Group1 = txtGroup1.getText();
        String Group2 = txtGroup2.getText();
        String Plu1 = txtPlu1.getText();
        String Plu2 = txtPlu2.getText();

        String TempGroup = "";
        String TempPlu = "";
        String TempName = "";
        int ArraySize = 0;
        Boolean Found = false;
        PluRec[] GArray;
        GArray = new PluRec[1];
        ArraySize = 0;
        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "select *from t_sale where macno between'"+ MacNo1 + "' and '" + MacNo2 + "' "
                    + "and cashier between '" + CashNo1 + "' and '" + CashNo2 + "' "
                    + "and r_group between'" + Group1 + "' and '" + Group2 + "' "
//                    + "and r_plucode between'" + Plu1 + "' and '" + Plu2 + "' "
                    + "and r_void<>'V' and r_refund<>'V' Order by r_group,r_plucode";
//            String SqlQuery = "select *from t_sale where (macno>='" + MacNo1 + "') and (macno<='" + MacNo2 + "') "
//                    + "and (cashier>='" + CashNo1 + "') and (cashier<='" + CashNo2 + "') "
//                    + "and (r_group>='" + Group1 + "') and (r_group<='" + Group2 + "') "
//                    + "and (r_plucode>='" + Plu1 + "') and (r_plucode<='" + Plu2 + "') "
//                    + "and (r_void<>'V') and (r_refund<>'V') Order by r_group,r_plucode";
//            System.out.println(SqlQuery);
            ResultSet rec = stmt.executeQuery(SqlQuery);
            rec.first();
            TempGroup = "";
            TempPlu = "";
            TempName = "";
            Double SumEQty = 0.0;
            Double SumEAmt = 0.0;
            Double SumTQty = 0.0;
            Double SumTAmt = 0.0;
            Double SumDQty = 0.0;
            Double SumDAmt = 0.0;
            Double SumPQty = 0.0;
            Double SumPAmt = 0.0;
            Double SumWQty = 0.0;
            Double SumWAmt = 0.0;
            Double SumSQty = 0.0;
            Double SumSAmt = 0.0;
            PluRec GroupRec = new PluRec();
            GroupRec.MacNo1 = MacNo1;
            GroupRec.MacNo2 = MacNo2;
            GroupRec.Cashier1 = CashNo1;
            GroupRec.Cashier2 = CashNo2;
            GroupRec.Group1 = Group1;
            GroupRec.Group2 = Group2;
            GroupRec.Plu1 = Plu1;
            GroupRec.Plu2 = Plu2;
            GroupRec.GroupCode = TempGroup;
            GroupRec.GroupName = PUtility.SeekGroupName(TempGroup);
            GroupRec.PCode = TempPlu;
            GroupRec.PName = TempName;

            GroupRec.E_Qty = GroupRec.E_Qty + SumEQty;
            GroupRec.E_Amt = GroupRec.E_Amt + SumEAmt;

            GroupRec.T_Qty = GroupRec.T_Qty + SumTQty;
            GroupRec.T_Amt = GroupRec.T_Amt + SumTAmt;

            GroupRec.D_Qty = GroupRec.D_Qty + SumDQty;
            GroupRec.D_Amt = GroupRec.D_Amt + SumDAmt;

            GroupRec.P_Qty = GroupRec.P_Qty + SumPQty;
            GroupRec.P_Amt = GroupRec.P_Amt + SumPAmt;

            GroupRec.W_Qty = GroupRec.W_Qty + SumWQty;
            GroupRec.W_Amt = GroupRec.W_Amt + SumWAmt;

            GroupRec.S_Qty = GroupRec.S_Qty + SumSQty;
            GroupRec.S_Amt = GroupRec.S_Amt + SumSAmt;

            GArray[0] = GroupRec;
            if (rec.getRow() == 0) {
            } else {
                TempGroup = rec.getString("r_group");
                TempPlu = rec.getString("r_plucode");
                TempName = ThaiUtil.ASCII2Unicode(rec.getString("r_pname"));
                do {
                    if (!TempPlu.equals(rec.getString("r_plucode"))) {
                        GroupRec = new PluRec();
                        GroupRec.MacNo1 = MacNo1;
                        GroupRec.MacNo2 = MacNo2;
                        GroupRec.Cashier1 = CashNo1;
                        GroupRec.Cashier2 = CashNo2;
                        GroupRec.Group1 = Group1;
                        GroupRec.Group2 = Group2;
                        GroupRec.Plu1 = Plu1;
                        GroupRec.Plu2 = Plu2;
                        GroupRec.GroupCode = TempGroup;
                        GroupRec.GroupName = PUtility.SeekGroupName(TempGroup);
                        GroupRec.PCode = TempPlu;
                        GroupRec.PName = TempName;

                        GroupRec.E_Qty = GroupRec.E_Qty + SumEQty;
                        GroupRec.E_Amt = GroupRec.E_Amt + SumEAmt;

                        GroupRec.T_Qty = GroupRec.T_Qty + SumTQty;
                        GroupRec.T_Amt = GroupRec.T_Amt + SumTAmt;

                        GroupRec.D_Qty = GroupRec.D_Qty + SumDQty;
                        GroupRec.D_Amt = GroupRec.D_Amt + SumDAmt;

                        GroupRec.P_Qty = GroupRec.P_Qty + SumPQty;
                        GroupRec.P_Amt = GroupRec.P_Amt + SumPAmt;

                        GroupRec.W_Qty = GroupRec.W_Qty + SumWQty;
                        GroupRec.W_Amt = GroupRec.W_Amt + SumWAmt;

                        GroupRec.S_Qty = GroupRec.S_Qty + SumSQty;
                        GroupRec.S_Amt = GroupRec.S_Amt + SumSAmt;
                        if (ArraySize == 0) {
                            GArray[ArraySize] = GroupRec;
                            ArraySize = GArray.length;
                        } else {
                            GArray = PUtility.addPluArray(GArray);
                            ArraySize = GArray.length;
                            GArray[ArraySize - 1] = GroupRec;
                        }
                        TempGroup = rec.getString("r_group");
                        TempPlu = ThaiUtil.ASCII2Unicode(rec.getString("r_plucode"));
                        TempName = ThaiUtil.ASCII2Unicode(rec.getString("r_pname"));
                        SumEQty = 0.0;
                        SumEAmt = 0.0;
                        SumTQty = 0.0;
                        SumTAmt = 0.0;
                        SumDQty = 0.0;
                        SumDAmt = 0.0;
                        SumPQty = 0.0;
                        SumPAmt = 0.0;
                        SumWQty = 0.0;
                        SumWAmt = 0.0;
                        SumSQty = 0.0;
                        SumSAmt = 0.0;
                    }
                    if (rec.getString("r_etd").equals("E")) {
                        SumEQty = SumEQty + rec.getDouble("r_quan");
                        SumEAmt = SumEAmt + rec.getDouble("r_total");
                    }
                    if (rec.getString("r_etd").equals("T")) {
                        SumTQty = SumTQty + rec.getDouble("r_quan");
                        SumTAmt = SumTAmt + rec.getDouble("r_total");
                    }
                    if (rec.getString("r_etd").equals("D")) {
                        SumDQty = SumDQty + rec.getDouble("r_quan");
                        SumDAmt = SumDAmt + rec.getDouble("r_total");
                    }
                    if (rec.getString("r_etd").equals("P")) {
                        SumPQty = SumPQty + rec.getDouble("r_quan");
                        SumPAmt = SumPAmt + rec.getDouble("r_total");
                    }
                    if (rec.getString("r_etd").equals("W")) {
                        SumWQty = SumWQty + rec.getDouble("r_quan");
                        SumWAmt = SumWAmt + rec.getDouble("r_total");
                    }
                    SumSQty = SumSQty + rec.getDouble("r_quan");
                    SumSAmt = SumSAmt + rec.getDouble("r_total");
                } while (rec.next());
                if (SumSQty > 0) {
                    GroupRec = new PluRec();
                    GroupRec.MacNo1 = MacNo1;
                    GroupRec.MacNo2 = MacNo2;
                    GroupRec.Cashier1 = CashNo1;
                    GroupRec.Cashier2 = CashNo2;
                    GroupRec.Group1 = Group1;
                    GroupRec.Group2 = Group2;
                    GroupRec.Plu1 = Plu1;
                    GroupRec.Plu2 = Plu2;
                    GroupRec.GroupCode = TempGroup;
                    GroupRec.GroupName = PUtility.SeekGroupName(TempGroup);
                    GroupRec.PCode = TempPlu;
                    GroupRec.PName = TempName;

                    GroupRec.E_Qty = GroupRec.E_Qty + SumEQty;
                    GroupRec.E_Amt = GroupRec.E_Amt + SumEAmt;

                    GroupRec.T_Qty = GroupRec.T_Qty + SumTQty;
                    GroupRec.T_Amt = GroupRec.T_Amt + SumTAmt;

                    GroupRec.D_Qty = GroupRec.D_Qty + SumDQty;
                    GroupRec.D_Amt = GroupRec.D_Amt + SumDAmt;

                    GroupRec.P_Qty = GroupRec.P_Qty + SumPQty;
                    GroupRec.P_Amt = GroupRec.P_Amt + SumPAmt;

                    GroupRec.W_Qty = GroupRec.W_Qty + SumWQty;
                    GroupRec.W_Amt = GroupRec.W_Amt + SumWAmt;

                    GroupRec.S_Qty = GroupRec.S_Qty + SumSQty;
                    GroupRec.S_Amt = GroupRec.S_Amt + SumSAmt;
                    if (ArraySize == 0) {
                        GArray[ArraySize] = GroupRec;
                        ArraySize = GArray.length;
                    } else {
                        GArray = PUtility.addPluArray(GArray);
                        ArraySize = GArray.length;
                        GArray[ArraySize - 1] = GroupRec;
                    }
                }
            }

            rec.close();
            stmt.close();
        } catch (SQLException e) {
            MSG.ERR(e.getMessage());
        } finally {
            mysql.close();
        }

        Jdi_report_SalePLU view = new Jdi_report_SalePLU(null, true);
        view.setData(GArray);
        view.setVisible(true);

        txtMacNo1.requestFocus();
    }

    public void bntExitClick() {
        this.dispose();
    }

    public void inputfrombnt(String str) {
        if (txtMacNo1.hasFocus()) {
            String tempstr = "";
            tempstr = txtMacNo1.getText();
            tempstr = tempstr + str;
            txtMacNo1.setText(tempstr);
        }
        if (txtMacNo2.hasFocus()) {
            String tempstr = "";
            tempstr = txtMacNo2.getText();
            tempstr = tempstr + str;
            txtMacNo2.setText(tempstr);
        }
        if (txtCashNo1.hasFocus()) {
            String tempstr = "";
            tempstr = txtCashNo1.getText();
            tempstr = tempstr + str;
            txtCashNo1.setText(tempstr);
        }
        if (txtCashNo2.hasFocus()) {
            String tempstr = "";
            tempstr = txtCashNo2.getText();
            tempstr = tempstr + str;
            txtCashNo2.setText(tempstr);
        }
        if (txtGroup1.hasFocus()) {
            String tempstr = "";
            tempstr = txtGroup1.getText();
            tempstr = tempstr + str;
            txtGroup1.setText(tempstr);
        }
        if (txtGroup2.hasFocus()) {
            String tempstr = "";
            tempstr = txtGroup2.getText();
            tempstr = tempstr + str;
            txtGroup2.setText(tempstr);
        }
        if (txtPlu1.hasFocus()) {
            String tempstr = "";
            tempstr = txtPlu1.getText();
            tempstr = tempstr + str;
            txtPlu1.setText(tempstr);
        }
        if (txtPlu2.hasFocus()) {
            String tempstr = "";
            tempstr = txtPlu2.getText();
            tempstr = tempstr + str;
            txtPlu2.setText(tempstr);
        }
    }

    public void ProcessChkKey(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            bntExitClick();
        }
        if (evt.getKeyCode() == KeyEvent.VK_F5) {
            bntOKClick();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txtMacNo1.hasFocus()) {
                txtMacNo2.requestFocus();
            }
            if (txtMacNo2.hasFocus()) {
                txtCashNo1.requestFocus();
            }
            if (txtCashNo1.hasFocus()) {
                txtCashNo2.requestFocus();
            }
            if (txtCashNo2.hasFocus()) {
                txtGroup1.requestFocus();
            }
            if (txtGroup1.hasFocus()) {
                txtGroup2.requestFocus();
            }
            if (txtGroup2.hasFocus()) {
                txtPlu1.requestFocus();
            }
            if (txtPlu1.hasFocus()) {
                txtPlu2.requestFocus();
            }
            if (txtPlu2.hasFocus()) {
                txtMacNo1.requestFocus();
            }
        }
    }

    public void bntOKClick() {
        String MacNo1 = txtMacNo1.getText();
        String MacNo2 = txtMacNo2.getText();
        String CashNo1 = txtCashNo1.getText();
        String CashNo2 = txtCashNo2.getText();
        String Group1 = txtGroup1.getText();
        String Group2 = txtGroup2.getText();
        String Plu1 = txtPlu1.getText();
        String Plu2 = txtPlu2.getText();

        String TempGroup = "";
        String TempPlu = "";
        String TempName = "";
        int ArraySize = 0;
        Boolean Found = false;
        PluRec[] GArray;
        GArray = new PluRec[1];
        ArraySize = 0;

        /**
         * * OPEN CONNECTION **
         */
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "select * from t_sale "
                    + "where (macno>='" + MacNo1 + "') and (macno<='" + MacNo2 + "') "
                    + "and (cashier>='" + CashNo1 + "') and (cashier<='" + CashNo2 + "') "
                    + "and (r_group>='" + Group1 + "') and (r_group<='" + Group2 + "') "
//                    + "and (r_plucode>='" + Plu1 + "') and (r_plucode<='" + Plu2 + "') "
                    + "and (r_void<>'V') and (r_refund<>'V') "
                    //                    + "and r_date=curdate() "
                    + "Order by r_group,r_plucode";
            ResultSet rec = stmt.executeQuery(SqlQuery);
            rec.first();
            TempGroup = "";
            TempPlu = "";
            TempName = "";
            Double SumEQty = 0.0;
            Double SumEAmt = 0.0;
            Double SumTQty = 0.0;
            Double SumTAmt = 0.0;
            Double SumDQty = 0.0;
            Double SumDAmt = 0.0;
            Double SumPQty = 0.0;
            Double SumPAmt = 0.0;
            Double SumWQty = 0.0;
            Double SumWAmt = 0.0;
            Double SumSQty = 0.0;
            Double SumSAmt = 0.0;
            PluRec GroupRec = new PluRec();
            GroupRec.MacNo1 = MacNo1;
            GroupRec.MacNo2 = MacNo2;
            GroupRec.Cashier1 = CashNo1;
            GroupRec.Cashier2 = CashNo1;
            GroupRec.Group1 = Group1;
            GroupRec.Group2 = Group1;
            GroupRec.Plu1 = Plu1;
            GroupRec.Plu2 = Plu2;
            GroupRec.GroupCode = TempGroup;
            GroupRec.GroupName = PUtility.SeekGroupName(TempGroup);
            GroupRec.PCode = TempPlu;
            GroupRec.PName = TempName;

            GroupRec.E_Qty = GroupRec.E_Qty + SumEQty;
            GroupRec.E_Amt = GroupRec.E_Amt + SumEAmt;

            GroupRec.T_Qty = GroupRec.T_Qty + SumTQty;
            GroupRec.T_Amt = GroupRec.T_Amt + SumTAmt;

            GroupRec.D_Qty = GroupRec.D_Qty + SumDQty;
            GroupRec.D_Amt = GroupRec.D_Amt + SumDAmt;

            GroupRec.P_Qty = GroupRec.P_Qty + SumPQty;
            GroupRec.P_Amt = GroupRec.P_Qty + SumPAmt;

            GroupRec.W_Qty = GroupRec.W_Qty + SumWQty;
            GroupRec.W_Amt = GroupRec.W_Qty + SumWAmt;

            GroupRec.S_Qty = GroupRec.S_Qty + SumSQty;
            GroupRec.S_Amt = GroupRec.S_Amt + SumSAmt;

            GArray[0] = GroupRec;
            if (rec.getRow() == 0) {
            } else {
                TempGroup = rec.getString("r_group");
                TempPlu = rec.getString("r_plucode");
                TempName = ThaiUtil.ASCII2Unicode(rec.getString("r_pname"));
                do {
                    if (!TempPlu.equals(rec.getString("r_plucode"))) {
                        GroupRec = new PluRec();
                        GroupRec.MacNo1 = MacNo1;
                        GroupRec.MacNo2 = MacNo2;
                        GroupRec.Cashier1 = CashNo1;
                        GroupRec.Cashier2 = CashNo1;
                        GroupRec.Group1 = Group1;
                        GroupRec.Group2 = Group1;
                        GroupRec.Plu1 = Plu1;
                        GroupRec.Plu2 = Plu2;
                        GroupRec.GroupCode = TempGroup;
                        GroupRec.GroupName = PUtility.SeekGroupName(TempGroup);
                        GroupRec.PCode = TempPlu;
                        GroupRec.PName = TempName;

                        GroupRec.E_Qty = GroupRec.E_Qty + SumEQty;
                        GroupRec.E_Amt = GroupRec.E_Amt + SumEAmt;

                        GroupRec.T_Qty = GroupRec.T_Qty + SumTQty;
                        GroupRec.T_Amt = GroupRec.T_Amt + SumTAmt;

                        GroupRec.D_Qty = GroupRec.D_Qty + SumDQty;
                        GroupRec.D_Amt = GroupRec.D_Amt + SumDAmt;

                        GroupRec.P_Qty = GroupRec.P_Qty + SumPQty;
                        GroupRec.P_Amt = GroupRec.P_Amt + SumPAmt;

                        GroupRec.W_Qty = GroupRec.W_Qty + SumWQty;
                        GroupRec.W_Amt = GroupRec.W_Amt + SumWAmt;

                        GroupRec.S_Qty = GroupRec.S_Qty + SumSQty;
                        GroupRec.S_Amt = GroupRec.S_Amt + SumSAmt;
                        if (ArraySize == 0) {
                            GArray[ArraySize] = GroupRec;
                            ArraySize = GArray.length;
                        } else {
                            GArray = PUtility.addPluArray(GArray);
                            ArraySize = GArray.length;
                            GArray[ArraySize - 1] = GroupRec;
                        }
                        TempGroup = rec.getString("r_group");
                        TempPlu = rec.getString("r_plucode");
                        TempName = ThaiUtil.ASCII2Unicode(rec.getString("r_pname"));
                        SumEQty = 0.0;
                        SumEAmt = 0.0;
                        SumTQty = 0.0;
                        SumTAmt = 0.0;
                        SumDQty = 0.0;
                        SumDAmt = 0.0;
                        SumPQty = 0.0;
                        SumPAmt = 0.0;
                        SumWQty = 0.0;
                        SumWAmt = 0.0;
                        SumSQty = 0.0;
                        SumSAmt = 0.0;
                    }
                    if (rec.getString("r_etd").equals("E")) {
                        SumEQty = SumEQty + rec.getDouble("r_quan");
                        SumEAmt = SumEAmt + rec.getDouble("r_total");
                    }
                    if (rec.getString("r_etd").equals("T")) {
                        SumTQty = SumTQty + rec.getDouble("r_quan");
                        SumTAmt = SumTAmt + rec.getDouble("r_total");
                    }
                    if (rec.getString("r_etd").equals("D")) {
                        SumDQty = SumDQty + rec.getDouble("r_quan");
                        SumDAmt = SumDAmt + rec.getDouble("r_total");
                    }
                    if (rec.getString("r_etd").equals("P")) {
                        SumPQty = SumPQty + rec.getDouble("r_quan");
                        SumPAmt = SumPAmt + rec.getDouble("r_total");
                    }
                    if (rec.getString("r_etd").equals("W")) {
                        SumWQty = SumWQty + rec.getDouble("r_quan");
                        SumWAmt = SumWAmt + rec.getDouble("r_total");
                    }
                    SumSQty = SumSQty + rec.getDouble("r_quan");
                    SumSAmt = SumSAmt + rec.getDouble("r_total");
                } while (rec.next());
                if (SumSQty > 0) {
                    GroupRec = new PluRec();
                    GroupRec.MacNo1 = MacNo1;
                    GroupRec.MacNo2 = MacNo2;
                    GroupRec.Cashier1 = CashNo1;
                    GroupRec.Cashier2 = CashNo1;
                    GroupRec.Group1 = Group1;
                    GroupRec.Group2 = Group1;
                    GroupRec.Plu1 = Plu1;
                    GroupRec.Plu2 = Plu2;
                    GroupRec.GroupCode = TempGroup;
                    GroupRec.GroupName = PUtility.SeekGroupName(TempGroup);
                    GroupRec.PCode = TempPlu;
                    GroupRec.PName = TempName;

                    GroupRec.E_Qty = GroupRec.E_Qty + SumEQty;
                    GroupRec.E_Amt = GroupRec.E_Amt + SumEAmt;

                    GroupRec.T_Qty = GroupRec.T_Qty + SumTQty;
                    GroupRec.T_Amt = GroupRec.T_Amt + SumTAmt;

                    GroupRec.D_Qty = GroupRec.D_Qty + SumDQty;
                    GroupRec.D_Amt = GroupRec.D_Amt + SumDAmt;

                    GroupRec.P_Qty = GroupRec.P_Qty + SumPQty;
                    GroupRec.P_Amt = GroupRec.P_Amt + SumPAmt;

                    GroupRec.W_Qty = GroupRec.W_Qty + SumWQty;
                    GroupRec.W_Amt = GroupRec.W_Amt + SumWAmt;

                    GroupRec.S_Qty = GroupRec.S_Qty + SumSQty;
                    GroupRec.S_Amt = GroupRec.S_Amt + SumSAmt;
                    if (ArraySize == 0) {
                        GArray[ArraySize] = GroupRec;
                        ArraySize = GArray.length;
                    } else {
                        GArray = PUtility.addPluArray(GArray);
                        ArraySize = GArray.length;
                        GArray[ArraySize - 1] = GroupRec;
                    }
                }
            }

            rec.close();
            stmt.close();
        } catch (SQLException e) {
            MSG.ERR(e.getMessage());
        } finally {
            mysql.close();
        }
        prn.PrintPlu(GArray);
        txtMacNo1.requestFocus();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PLURep dialog = new PLURep(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntExit;
    private javax.swing.JButton bntOK;
    private javax.swing.JButton bntOK1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtCashNo1;
    private javax.swing.JTextField txtCashNo2;
    private javax.swing.JTextField txtGroup1;
    private javax.swing.JTextField txtGroup2;
    private javax.swing.JTextField txtMacNo1;
    private javax.swing.JTextField txtMacNo2;
    private javax.swing.JTextField txtPlu1;
    private javax.swing.JTextField txtPlu2;
    // End of variables declaration//GEN-END:variables

}
