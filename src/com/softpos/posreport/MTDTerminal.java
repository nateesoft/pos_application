package com.softpos.posreport;

import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import com.softpos.main.utils.DateChooseDialog;
import com.softpos.database.util.MySQLConnect;
import java.sql.Statement;
import javax.swing.JOptionPane;
import com.softpos.main.model.CreditRec;
import com.softpos.main.model.FinalcialRec;
import com.softpos.main.model.POSConfigSetup;
import com.softpos.main.model.POSHWSetup;
import com.softpos.main.controller.PPrint;
import com.softpos.main.utils.PUtility;
import com.softpos.main.model.PublicVar;
import com.softpos.main.model.Value;
import com.softpos.database.util.ConfigFile;
import java.util.ArrayList;
import com.softpos.main.controller.PrintDriver;
import com.softpos.main.utils.KeyBoardDialog;
import com.softpos.main.utils.DateConvert;
import com.softpos.main.utils.MSG;

public class MTDTerminal extends javax.swing.JDialog {

    private POSConfigSetup CONFIG;
    SimpleDateFormat Datefmt = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
    SimpleDateFormat DatefmtShow = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
    SimpleDateFormat Timefmt = new SimpleDateFormat("HH:mm:ss");
    Date date = new Date();
    Date TDate1 = new Date();
    Date TDate2 = new Date();
    PPrint prn = new PPrint();
    SimpleDateFormat DatefmtThai = new SimpleDateFormat("dd/MM/yyyy (HH:mm)", Locale.ENGLISH);
    SimpleDateFormat ShowDatefmt = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
    DecimalFormat DecFmt = new DecimalFormat("##,###,##0.00");
    DecimalFormat IntFmt = new DecimalFormat("##,###,##0");
    DateConvert dc = new DateConvert();
    private POSHWSetup POSHW;
    private String Space = " &nbsp; ";
    private String TAB = Space + Space + Space;

    public MTDTerminal(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        txtDate1.setText(DatefmtShow.format(date));
        txtDate2.setText(DatefmtShow.format(date));
        txtMacNo1.setText("001");
        txtMacNo2.setText("999");
        InitScreen();
        POSHW = POSHWSetup.Bean(Value.getMacno());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtDate1 = new javax.swing.JFormattedTextField();
        txtDate2 = new javax.swing.JFormattedTextField();
        cmdDateChoose1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cmdDateChoose2 = new javax.swing.JButton();
        bntExit = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txtMacNo1 = new javax.swing.JTextField();
        txtMacNo2 = new javax.swing.JTextField();
        bntOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("รายงานยอดการเงินของเครื่อง (MTD Terminal Report)");

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ช่วงวันที่ๆต้องการ (Date)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        txtDate1.setEditable(false);
        txtDate1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        txtDate1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDate1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtDate1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDate1MouseClicked(evt);
            }
        });
        txtDate1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDate1KeyPressed(evt);
            }
        });

        txtDate2.setEditable(false);
        txtDate2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        txtDate2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDate2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtDate2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDate2MouseClicked(evt);
            }
        });
        txtDate2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDate2KeyPressed(evt);
            }
        });

        cmdDateChoose1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Calendar.png"))); // NOI18N
        cmdDateChoose1.setFocusable(false);
        cmdDateChoose1.setRequestFocusEnabled(false);
        cmdDateChoose1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDateChoose1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("ถึง");

        cmdDateChoose2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Calendar.png"))); // NOI18N
        cmdDateChoose2.setFocusable(false);
        cmdDateChoose2.setRequestFocusEnabled(false);
        cmdDateChoose2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDateChoose2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdDateChoose1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDate2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdDateChoose2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdDateChoose1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtDate2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdDateChoose2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bntExit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bntExit.setText("ESC- ออก");
        bntExit.setFocusable(false);
        bntExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntExitActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.lightGray, 2), "หมายเลขเครื่อง (Mac No)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        txtMacNo1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtMacNo1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtMacNo1.setText("001");
        txtMacNo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtMacNo1MouseClicked(evt);
            }
        });
        txtMacNo1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMacNo1KeyPressed(evt);
            }
        });

        txtMacNo2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtMacNo2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtMacNo2.setText("999");
        txtMacNo2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtMacNo2MouseClicked(evt);
            }
        });
        txtMacNo2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMacNo2KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(txtMacNo1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(txtMacNo2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMacNo1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMacNo2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bntOK.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bntOK.setText("F5- พิมพ์");
        bntOK.setFocusable(false);
        bntOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(bntOK, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bntExit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntExit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntOK, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

private void txtMacNo1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMacNo1KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntExitClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F5) {
        bntOKClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtMacNo2.requestFocus();
    }
}//GEN-LAST:event_txtMacNo1KeyPressed

private void txtMacNo2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMacNo2KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntExitClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F5) {
        bntOKClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtDate1.requestFocus();
    }
}//GEN-LAST:event_txtMacNo2KeyPressed

private void bntOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntOKActionPerformed
    bntOKClick();
}//GEN-LAST:event_bntOKActionPerformed

private void bntExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntExitActionPerformed
    bntExitClick();
}//GEN-LAST:event_bntExitActionPerformed

private void txtDate2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDate2KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        bntExitClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_F5) {
        bntOKClick();
    }
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtMacNo1.requestFocus();
    }
}//GEN-LAST:event_txtDate2KeyPressed

private void cmdDateChoose1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDateChoose1ActionPerformed
    DateChooseDialog dcd = new DateChooseDialog(new Frame(), true, cmdDateChoose1.getLocationOnScreen());
    dcd.setVisible(true);
    txtDate1.setText(ShowDatefmt.format(dcd.getSelectDate().getTime()));
    txtDate1.requestFocus();
}//GEN-LAST:event_cmdDateChoose1ActionPerformed

private void cmdDateChoose2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDateChoose2ActionPerformed
    DateChooseDialog dcd = new DateChooseDialog(new Frame(), true, cmdDateChoose2.getLocationOnScreen());
    dcd.setVisible(true);
    // dcd.showDialog(new LookAndFeelFrame(), true, point);
    txtDate2.setText(ShowDatefmt.format(dcd.getSelectDate().getTime()));
    txtDate2.requestFocus();
}//GEN-LAST:event_cmdDateChoose2ActionPerformed

    private void txtDate1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDate1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            bntExitClick();
        }
        if (evt.getKeyCode() == KeyEvent.VK_F5) {
            bntOKClick();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtDate2.requestFocus();
        }
    }//GEN-LAST:event_txtDate1KeyPressed

    private void txtDate1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDate1MouseClicked
        if (evt.getClickCount() == 2) {
            KeyBoardDialog.get(txtDate1);
        }
    }//GEN-LAST:event_txtDate1MouseClicked

    private void txtDate2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDate2MouseClicked
        if (evt.getClickCount() == 2) {
            KeyBoardDialog.get(txtDate2);
        }
    }//GEN-LAST:event_txtDate2MouseClicked

    private void txtMacNo1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMacNo1MouseClicked
        if (evt.getClickCount() == 2) {
            KeyBoardDialog.get(txtMacNo1);
        }
    }//GEN-LAST:event_txtMacNo1MouseClicked

    private void txtMacNo2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMacNo2MouseClicked
        if (evt.getClickCount() == 2) {
            KeyBoardDialog.get(txtMacNo2);
        }
    }//GEN-LAST:event_txtMacNo2MouseClicked
    public void InitScreen() {
        txtDate1.requestFocus();
    }

    public void inputfrombnt(String str) {
        if (txtMacNo1.hasFocus()) {
            String tempstr = "";
            tempstr = txtMacNo1.getText();
            tempstr = tempstr + str;
            txtMacNo1.setText(tempstr);
        }
        if (txtMacNo2.hasFocus()) {
            String tempstr = "";
            tempstr = txtMacNo2.getText();
            tempstr = tempstr + str;
            txtMacNo2.setText(tempstr);
        }

    }

    public void bntExitClick() {
        this.dispose();
    }

    public void Action() {
        String TDate = txtDate1.getText();

        try {
            TDate1 = DatefmtShow.parse(txtDate1.getText());
            TDate2 = DatefmtShow.parse(txtDate2.getText());
            if (!PUtility.ChkValidDate(TDate1)) {
                txtDate1.requestFocus();
            }
            if (!PUtility.ChkValidDate(TDate2)) {
                txtDate2.requestFocus();
            }
            ProcessProc();
            InitScreen();
        } catch (ParseException ex) {
            MSG.ERR(this, "กรุณาป้อนวันที่ให้ถูกต้อง (Format=dd/MM/yyyy EXP 01/01/2009)");
        }
    }

    public void bntOKClick() {
        Action();
    }

    public void ProcessProc() {
        FinalcialRec frec = new FinalcialRec();
        CreditRec[] CrArray;

        CrArray = null;

        int ArraySize = 0;
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "select *from s_invoice "
                    + "where (s_date>='" + Datefmt.format(TDate1) + "') "
                    + "and (s_date<='" + Datefmt.format(TDate2) + "') "
                    + "and (b_macno>='" + txtMacNo1.getText() + "') "
                    + "and (b_macno<='" + txtMacNo2.getText() + "')";
//                    + "and (b_macno<='" + txtMacNo2.getText() + "') and b_void<>'V'";
            ResultSet rec = stmt.executeQuery(SqlQuery);
            String sqlGetEntertainPay = "select sum(B_Entertain) EntertainAMT,sum(B_NetDiff) B_NetDiff from s_invoice where b_void<>'V'  "
                    + "and s_date between '" + Datefmt.format(TDate1) + "' and '" + Datefmt.format(TDate2) + "';";
            ResultSet rsGetEntertain = mysql.getConnection().createStatement().executeQuery(sqlGetEntertainPay);
            String sqlSumBillno = "select count(B_Refno) b_refno from s_invoice where b_entertain<>'0' and b_void<>'V' "
                    + "and s_date between '" + Datefmt.format(TDate1) + "' and '" + Datefmt.format(TDate2) + "';";
            ResultSet rsGetSumBillno = mysql.getConnection().createStatement().executeQuery(sqlSumBillno);
            if (rsGetEntertain.next()) {
                frec.Entertain = rsGetEntertain.getDouble("EntertainAMT");
                frec.B_NetDiff = rsGetEntertain.getDouble("B_NetDiff");
            }
            if (rsGetSumBillno.next()) {
                frec.BillEntertain = rsGetSumBillno.getDouble("b_refno");
            }
            rec.first();
            if (rec.getRow() == 0) {
            } else {
                frec.StBill = rec.getString("b_refno");
                do {
                    frec.SpBill = rec.getString("b_refno");
                    if (!rec.getString("b_void").equals("V")) {
                        frec.Dept_Sum = frec.Dept_Sum + rec.getDouble("b_total");
                        if (rec.getDouble("b_serviceamt") != 0.0) {
                            frec.Service = frec.Service + rec.getDouble("b_serviceamt");
                            frec.ServiceCnt++;
                        }
                        if (rec.getDouble("b_crchargeamt1") != 0.0) {
                            frec.Charge = frec.Charge + rec.getDouble("b_crchargeamt1");
                            frec.ChargeCnt++;
                        }
                        if (rec.getDouble("b_memdiscamt") != 0.0) {
                            frec.Vip_Disc = frec.Vip_Disc + rec.getDouble("b_memdiscamt");
                            frec.Vip_DiscCnt++;
                        }
                        if (rec.getDouble("b_empdiscamt") != 0.0) {
                            frec.Emp_Disc = frec.Emp_Disc + rec.getDouble("b_empdiscamt");
                            frec.Emp_DiscCnt++;
                        }
                        if (rec.getDouble("b_fastdiscamt") != 0.0) {
                            frec.Fast_Disc = frec.Fast_Disc + rec.getDouble("b_fastdiscamt");
                            frec.Fast_DiscCnt++;
                        }
                        if (rec.getDouble("b_Traindiscamt") != 0.0) {
                            frec.Train_Disc = frec.Train_Disc + rec.getDouble("b_traindiscamt");
                            frec.Train_DiscCnt++;
                        }
                        if (rec.getDouble("b_subdiscamt") != 0.0) {
                            frec.Sub_Disc = frec.Sub_Disc + rec.getDouble("b_subdiscamt");
                            frec.Sub_DiscCnt++;
                        }
                        if (rec.getDouble("b_subdiscbath") != 0.0) {
                            frec.Gen_Refund = frec.Gen_Refund + rec.getDouble("b_subdiscbath");
                            frec.Gen_RefundCnt++;
                        }
                        if (rec.getDouble("b_cupondiscamt") != 0.0) {
                            frec.Cupon_Disc = frec.Cupon_Disc + rec.getDouble("b_cupondiscamt");
                            frec.Cupon_DiscCnt++;
                        }
                        if (rec.getDouble("b_prodiscamt") != 0.0) {
                            frec.Promotion = frec.Promotion + rec.getDouble("b_prodiscamt");
                            frec.PromotionCnt++;
                        }
                        if (rec.getDouble("b_spadiscamt") != 0.0) {
                            frec.Spacial = frec.Spacial + rec.getDouble("b_spadiscamt");
                            frec.SpacialCnt++;
                        }
                        if (rec.getDouble("b_itemdiscamt") != 0.0) {
                            frec.Item_Disc = frec.Item_Disc + rec.getDouble("b_itemdiscamt");
                            frec.Item_DiscCnt++;
                        }
                        frec.Net_Sale = frec.Net_Sale + (rec.getDouble("b_nettotal") + rec.getDouble("b_crchargeamt1"));
                        if (rec.getDouble("b_cash") != 0.0) {
                            frec.Cash = frec.Cash + rec.getDouble("b_cash");
                            frec.CashCnt++;
                        }
                        if (rec.getDouble("b_giftvoucher") != 0.0) {
                            frec.Gift = frec.Gift + rec.getDouble("b_giftvoucher");
                            frec.GiftCnt++;
                        }
                        if (rec.getDouble("b_earnest") != 0.0) {
                            frec.Earnest = frec.Earnest + rec.getDouble("b_earnest");
                            frec.EarnestCnt++;
                        }
                        if (rec.getDouble("b_accramt") != 0.0) {
                            frec.ArPayment = frec.ArPayment + rec.getDouble("b_accramt");
                            frec.ArPaymentCnt++;
                        }
                        if (rec.getDouble("b_cramt1") != 0.0) {
                            frec.Credit_Card = frec.Credit_Card + rec.getDouble("b_cramt1");
                            frec.Credit_CardCnt++;
                        }
                        frec.SaleVat = frec.SaleVat + rec.getDouble("b_netvat");
                        frec.SaleNonVat = frec.SaleNonVat + rec.getDouble("b_netnonvat");
                        frec.VatAmt = frec.VatAmt + rec.getDouble("b_vat");
                        frec.CntBill++;
                        if (rec.getDouble("b_food") != 0.0) {
                            frec.Food = frec.Food + rec.getDouble("b_food");
                        }
                        if (rec.getDouble("b_drink") != 0.0) {
                            frec.Drink = frec.Drink + rec.getDouble("b_drink");
                        }
                        if (rec.getDouble("b_product") != 0.0) {
                            frec.Product = frec.Product + rec.getDouble("b_product");
                        }
                        if (rec.getInt("b_cust") != 0) {
                            frec.Customer = frec.Customer + rec.getInt("b_cust");
                        }
                        if (rec.getString("b_etd").equals("E")) {
                            frec.Eat_In_Cnt++;
                            frec.Eat_In_Amt = frec.Eat_In_Amt + rec.getDouble("b_total");
                            frec.Eat_In_Cust = frec.Eat_In_Cust + rec.getInt("b_cust");
                            frec.Eat_In_Net = frec.Eat_In_Net + rec.getDouble("b_nettotal");
                        }
                        if (rec.getString("b_etd").equals("T")) {
                            frec.Take_AwayCnt++;
                            frec.Take_AwayAmt = frec.Take_AwayAmt + rec.getDouble("b_total");
                            frec.Take_AwayCust = frec.Take_AwayCust + rec.getInt("b_cust");
                            frec.Take_AwayNet = frec.Take_AwayNet + rec.getDouble("b_nettotal");
                        }
                        if (rec.getString("b_etd").equals("D")) {
                            frec.DeliveryCnt++;
                            frec.DeliveryAmt = frec.DeliveryAmt + rec.getDouble("b_total");
                            frec.DeliveryCust = frec.DeliveryCust + rec.getInt("b_cust");
                            frec.DeliveryNet = frec.DeliveryNet + rec.getDouble("b_nettotal");
                            String amt = frec.DeliveryAmt + "";
                            String cust = frec.DeliveryCust + "";
                            String net = frec.DeliveryNet + "";
                            System.out.println(amt + ":" + cust + ":" + net);
                        }
                        if (rec.getString("b_etd").equals("P")) {
                            frec.PintoCnt++;
                            frec.PintoAmt = frec.PintoAmt + rec.getDouble("b_total");
                            frec.PintoCust = frec.PintoCust + rec.getInt("b_cust");
                            frec.PintoNet = frec.PintoNet + rec.getDouble("b_nettotal");
                        }
                        if (rec.getString("b_etd").equals("W")) {
                            frec.WholeCnt++;
                            frec.WholeAmt = frec.WholeAmt + rec.getDouble("b_total");
                            frec.WholeCust = frec.WholeCust + rec.getInt("b_cust");
                            frec.WholeNet = frec.WholeNet + rec.getDouble("b_nettotal");
                        }
                    } else {
                        frec.AmtBillVoid = frec.AmtBillVoid + (rec.getDouble("b_nettotal") + rec.getDouble("b_crchargeamt1"));
                        frec.CntBillVoid++;
                        frec.CntBill++;
                    }
                } while (rec.next());
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            MSG.ERR(e.getMessage());
        }

        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "select *from s_paidio where (flage='I') and (terminal>='" + txtMacNo1.getText() + "') and (terminal<='" + txtMacNo2.getText() + "') and (s_date>='" + Datefmt.format(TDate1) + "') and (s_date<='" + Datefmt.format(TDate2) + "')";
            ResultSet rec = stmt.executeQuery(SqlQuery);
            rec.first();
            if (rec.getRow() == 0) {
            } else {
                do {
                    frec.Paid_InCnt++;
                    frec.Paid_In = frec.Paid_In + rec.getDouble("paidamt");
                } while (rec.next());
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            MSG.ERR(e.getMessage());
        }
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "select *from s_paidio where (flage='O') and (terminal>='" + txtMacNo1.getText() + "') and (terminal<='" + txtMacNo2.getText() + "') and (s_date>='" + Datefmt.format(TDate1) + "') and (s_date<='" + Datefmt.format(TDate2) + "')";
            ResultSet rec = stmt.executeQuery(SqlQuery);
            rec.first();
            if (rec.getRow() == 0) {
            } else {
                do {
                    frec.Paid_OutCnt++;
                    frec.Paid_Out = frec.Paid_Out + rec.getDouble("paidamt");
                } while (rec.next());
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            MSG.ERR(e.getMessage());
        }
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "select *from s_void where (macno>='" + txtMacNo1.getText() + "') and (macno<='" + txtMacNo2.getText() + "') and (s_date>='" + Datefmt.format(TDate1) + "') and (s_date<='" + Datefmt.format(TDate2) + "')";
            ResultSet rec = stmt.executeQuery(SqlQuery);
            rec.first();
            if (rec.getRow() == 0) {
            } else {
                do {
                    frec.CntVoid++;
                    frec.VoidValue = frec.VoidValue + rec.getDouble("amt");
                } while (rec.next());
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            MSG.ERR(e.getMessage());
        }
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "select *from s_invoice where (b_macno>='" + txtMacNo1.getText() + "') and (b_macno<='" + txtMacNo2.getText() + "') and (s_date>='" + Datefmt.format(TDate1) + "') and (s_date<='" + Datefmt.format(TDate2) + "') and (b_void<>'V') and (b_cramt1<>0)";
            ResultSet rec = stmt.executeQuery(SqlQuery);
            rec.first();
            Boolean XFound;
            Boolean First = true;
            if (rec.getRow() == 0) {
            } else {
                CrArray = new CreditRec[1];
                do {
                    XFound = false;
                    ArraySize = CrArray.length;
                    if (First) {
                        CreditRec CrRec = new CreditRec();
                        CrRec.CrCode = rec.getString("b_crcode1");
                        CrRec.CrCnt++;
                        CrRec.CrAmt = rec.getDouble("b_cramt1");
                        CrRec.CrName = PUtility.SeekCreditName(rec.getString("b_crcode1"));
                        First = false;
                        CrArray[ArraySize - 1] = CrRec;

                    } else {
                        for (int i = 0; i < ArraySize; i++) {
                            if (rec.getString("b_crcode1").equals(CrArray[i].CrCode)) {
                                CrArray[i].CrCnt++;
                                CrArray[i].CrAmt = CrArray[i].CrAmt + rec.getDouble("b_cramt1");
                                XFound = true;
                            }
                        }
                        if (!XFound) {
                            CrArray = PUtility.addCrArray(CrArray);

                            CreditRec CrRec = new CreditRec();
                            ArraySize = CrArray.length;
                            CrRec.CrCode = rec.getString("b_crcode1");
                            CrRec.CrCnt++;
                            CrRec.CrAmt = rec.getDouble("b_cramt1");
                            CrRec.CrName = PUtility.SeekCreditName(rec.getString("b_crcode1"));
                            CrArray[ArraySize - 1] = CrRec;
                        }
                    }
                } while (rec.next());
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            MSG.ERR(e.getMessage());
        }

        PrintTerminalEngForm(frec, CrArray, txtMacNo1.getText(), txtMacNo2.getText());
    }

    public void PrintTerminal(FinalcialRec frec, CreditRec[] CrArray) {
        if (Value.printdriver) {
            JOptionPane.showMessageDialog(null, Value.driverNotSupport);
        } else if (!Value.getComPort().equals("NONE")) {
            if (prn.OpenPrint(Value.getComPort())) {
                prn.InitPrinter();
                prn.print(POSHW.getHeading1());
                prn.print(POSHW.getHeading2());
                prn.print(POSHW.getHeading3());
                prn.print(POSHW.getHeading4());
                prn.print("REG ID :" + Value.MACNO);
                prn.print("   รายงานยอดการเงิน (MTD Terminal Report)");
                prn.print("ช่วงวันที่ : " + DatefmtShow.format(TDate1) + " ถึง " + DatefmtShow.format(TDate2));
                prn.print("หมายเลขเครื่อง : " + txtMacNo1.getText() + " ถึง " + txtMacNo2.getText());
                Date dateP = new Date();
                prn.print(DatefmtThai.format(dateP) + " " + "Cashier:" + PublicVar._User + " Mac:" + Value.MACNO);
                prn.print("----------------------------------------");
                prn.print(PUtility.DataFullR("ยอดรวมค่าอาหาร                 ", 26) + PUtility.DataFull(DecFmt.format(frec.Food), 13));
                prn.print(PUtility.DataFullR("ยอดรวมค่าเครื่องดื่ม               ", 26) + PUtility.DataFull(DecFmt.format(frec.Drink), 13));
                prn.print(PUtility.DataFullR("ยอดรวมค่าสินค้าทั่วไป              ", 26) + PUtility.DataFull(DecFmt.format(frec.Product), 13));
                prn.print(PUtility.DataFullR("ยอดขายตามป้าย (Dept-Sum)       ", 26) + PUtility.DataFull(DecFmt.format(frec.Dept_Sum), 13));
                prn.print("                       ==============");
                prn.print(PUtility.DataFullR("ค่าบริการ Service       ", 20) + PUtility.DataFull(IntFmt.format(frec.ServiceCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Service), 13));
                prn.print(PUtility.DataFullR("Charge บัตรเครดิต       ", 20) + PUtility.DataFull(IntFmt.format(frec.ChargeCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Charge), 13));
                prn.print(PUtility.DataFullR("ส่วนลดสมาชิก VIP        ", 20) + PUtility.DataFull(IntFmt.format(frec.Vip_DiscCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Vip_Disc), 13));
                prn.print(PUtility.DataFullR("ส่วนลดเทศกาล           ", 20) + PUtility.DataFull(IntFmt.format(frec.Fast_DiscCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Fast_Disc), 13));
                prn.print(PUtility.DataFullR("ส่วนลดพนักงาน           ", 20) + PUtility.DataFull(IntFmt.format(frec.Emp_DiscCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Emp_Disc), 13));
                prn.print(PUtility.DataFullR("ส่วนลดพนักงาน Trainee   ", 20) + PUtility.DataFull(IntFmt.format(frec.Train_DiscCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Train_Disc), 13));
                prn.print(PUtility.DataFullR("ส่วนลดคูปอง              ", 20) + PUtility.DataFull(IntFmt.format(frec.Sub_DiscCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Sub_Disc), 13));
                prn.print(PUtility.DataFullR("ส่วนลดบาท               ", 20) + PUtility.DataFull(IntFmt.format(frec.Gen_RefundCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Gen_Refund), 13));
                prn.print(PUtility.DataFullR("ส่วนลด Promotion        ", 20) + PUtility.DataFull(IntFmt.format(frec.PromotionCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Promotion), 13));
                prn.print(PUtility.DataFullR("ส่วนลดพิเศษ (Special)    ", 20) + PUtility.DataFull(IntFmt.format(frec.SpacialCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Spacial), 13));
                prn.print(PUtility.DataFullR("ส่วนลดตามรายการ (Item)  ", 20) + PUtility.DataFull(IntFmt.format(frec.Item_DiscCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Item_Disc), 13));
                prn.print(PUtility.DataFullR("ส่วนลดบัตรคูปอง (Coupon)  ", 20) + PUtility.DataFull(IntFmt.format(frec.Cupon_DiscCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Cupon_Disc), 13));
                prn.print(PUtility.DataFullR("หักคืนเงินมัดจำ            ", 20) + PUtility.DataFull(IntFmt.format(frec.EarnestCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Earnest), 13));
                prn.print("----------------------------------------");
                prn.print(PUtility.DataFullR("ยอดขายสุทธิ (Net-Sales)           ", 26) + PUtility.DataFull(DecFmt.format(frec.Net_Sale), 13));
                prn.print("                       ==============");
                prn.print(PUtility.DataFullR("เงินลด Cash             ", 20) + PUtility.DataFull(IntFmt.format(frec.CashCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Cash), 13));
                prn.print(PUtility.DataFullR("บัตรกำนัล Gift Voucher   ", 20) + PUtility.DataFull(IntFmt.format(frec.GiftCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Gift), 13));
                prn.print(PUtility.DataFullR("ลูกหนี้การค้า              ", 20) + PUtility.DataFull(IntFmt.format(frec.ArPaymentCnt), 6) + PUtility.DataFull(DecFmt.format(frec.ArPayment), 13));
                if (frec.Credit_Card > 0) {
                    int ArraySize = CrArray.length;
                    for (int i = 0; i < ArraySize; i++) {
                        prn.print(PUtility.DataFullR(CrArray[i].CrName + "                     ", 20) + PUtility.DataFull(IntFmt.format(CrArray[i].CrCnt), 6) + PUtility.DataFull(DecFmt.format(CrArray[i].CrAmt), 13));
                    }
                }
                prn.print(PUtility.DataFullR("PAID-IN                ", 20) + PUtility.DataFull(IntFmt.format(frec.Paid_InCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Paid_In), 13));
                prn.print(PUtility.DataFullR("PAID-OUT               ", 20) + PUtility.DataFull(IntFmt.format(frec.Paid_OutCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Paid_Out), 13));
                prn.print("----------------------------------------");
                prn.print(PUtility.DataFullR("ยอดขายสินค้า/บริการ คิดภาษี       ", 26) + PUtility.DataFull(DecFmt.format(frec.SaleVat), 13));
                prn.print(PUtility.DataFullR("ยอดขายไม่คิดภาษี                ", 26) + PUtility.DataFull(DecFmt.format(frec.SaleNonVat), 13));
                prn.print(PUtility.DataFullR("ภาษีมูลค่าเพิ่ม (Vat)             ", 26) + PUtility.DataFull(DecFmt.format(frec.VatAmt), 13));
                prn.print("----------------------------------------");
                prn.print(PUtility.DataFullR("จำนวนลูกค้าทั้งสิ้น                ", 26) + PUtility.DataFull(IntFmt.format(frec.Customer), 8) + " คน");
                prn.print(PUtility.DataFullR("จำนวนใบกำกับภาษีอย่างย่อ         ", 26) + PUtility.DataFull(IntFmt.format(frec.CntBill), 8) + " ใบ");
                MySQLConnect mysql = new MySQLConnect();
                mysql.open();
                try {
                    Statement stmt = mysql.getConnection().createStatement();
                    String SqlQuery = "select b_macno,min(b_refno),max(b_refno) from s_invoice "
                            + "where (s_date>='" + Datefmt.format(TDate1) + "') and (s_date<='" + Datefmt.format(TDate2) + "') and (b_macno>='" + txtMacNo1.getText() + "') and (b_macno<='" + txtMacNo2.getText() + "') "
                            + " group by b_macno order by b_macno";
                    ResultSet rec = stmt.executeQuery(SqlQuery);
                    rec.first();
                    if (rec.getRow() == 0) {
                    } else {
                        do {
                            prn.print("MacNo " + rec.getString("b_macno") + " เลขที่เริ่มต้น " + rec.getString("min(b_refno)") + " ถึง " + rec.getString("max(b_refno)"));

                        } while (rec.next());
                    }
                    rec.close();
                    stmt.close();
                } catch (SQLException e) {
                    MSG.ERR(e.getMessage());
                }
                //prn.Print_Str("    เลขที่เริ่มต้น  :" + frec.StBill + "   ถึง  : " + frec.SpBill);
                prn.print(PUtility.DataFullR("ใบกำกับภาษีที่ยกเลิก       ", 20) + PUtility.DataFull(IntFmt.format(frec.CntBillVoid), 6) + PUtility.DataFull(DecFmt.format(frec.AmtBillVoid), 13));
                prn.print(PUtility.DataFullR("มูลค่าสินค้าที่ทำการ Void   ", 20) + PUtility.DataFull(IntFmt.format(frec.CntVoid), 6) + PUtility.DataFull(DecFmt.format(frec.VoidValue), 13));
                prn.print("----------------------------------------");
                prn.print("ประเภทการขาย   บิล        ลูกค้า  จำนวนเงิน");
                prn.print("----------------------------------------");
                prn.print("Eat-In      " + PUtility.DataFull(IntFmt.format(frec.Eat_In_Cnt), 6) + PUtility.DataFull(IntFmt.format(frec.Eat_In_Cust), 8) + PUtility.DataFull(DecFmt.format(frec.Eat_In_Amt), 13));
                prn.print("Take Away   " + PUtility.DataFull(IntFmt.format(frec.Take_AwayCnt), 6) + PUtility.DataFull(IntFmt.format(frec.Take_AwayCust), 8) + PUtility.DataFull(DecFmt.format(frec.Take_AwayAmt), 13));
                prn.print("Delivery    " + PUtility.DataFull(IntFmt.format(frec.DeliveryCnt), 6) + PUtility.DataFull(IntFmt.format(frec.DeliveryCust), 8) + PUtility.DataFull(DecFmt.format(frec.DeliveryAmt), 13));
                prn.print("Pinto       " + PUtility.DataFull(IntFmt.format(frec.PintoCnt), 6) + PUtility.DataFull(IntFmt.format(frec.PintoCust), 8) + PUtility.DataFull(DecFmt.format(frec.PintoAmt), 13));
                prn.print("Whole Sales " + PUtility.DataFull(IntFmt.format(frec.WholeCnt), 6) + PUtility.DataFull(IntFmt.format(frec.WholeCust), 8) + PUtility.DataFull(DecFmt.format(frec.WholeAmt), 13));
                prn.print("----------------------------------------");
                prn.print("");
                prn.print("");
                prn.print("");

                Double SumAmt = 0.0;
                prn.print("    รายงานการรับชำระจากลูกหนี้ภายนอก ");
                prn.print("        MTD AR Payment Report");
                prn.print("หมายเลขเครื่อง : " + Value.MACNO);
                prn.print(DatefmtThai.format(dateP) + " " + "Cashier:" + PublicVar._User + " Mac:" + Value.MACNO);
                prn.print("----------------------------------------");
                prn.print("AR Code    เลขที่ใบเสร็จรับเงิน/วันที่  จำนวนเงิน");
                prn.print("----------------------------------------");
                try {
                    Statement stmt = mysql.getConnection().createStatement();
                    String SqlQuery = "select *from s_tar where (fat<>'V') and (terminal>='" + txtMacNo1.getText() + "') and (terminal<='" + txtMacNo2.getText() + "') and (s_date>='" + Datefmt.format(TDate1) + "') and (s_date<='" + Datefmt.format(TDate2) + "')";
                    ResultSet rec = stmt.executeQuery(SqlQuery);
                    rec.first();
                    if (rec.getRow() == 0) {
                    } else {
                        do {
                            prn.print(PUtility.DataFull(rec.getString("arcode"), 4) + "  " + rec.getString("billno") + "  " + ShowDatefmt.format(rec.getDate("billdate")) + PUtility.DataFull(DecFmt.format(rec.getDouble("amount")), 9));
                            SumAmt = SumAmt + rec.getDouble("amount");
                        } while (rec.next());
                    }
                    rec.close();
                    stmt.close();
                } catch (SQLException e) {
                    MSG.ERR(e.getMessage());
                }
                prn.print("----------------------------------------");
                prn.print(PUtility.DataFullR("Total Amount  ", 26) + PUtility.DataFull(DecFmt.format(SumAmt), 13));
                prn.print("----------------------------------------");
                prn.print("");
                Double SumCash = 0.0;
                Double SumCupon = 0.0;
                int CntBill = 0;
                try {
                    Statement stmt = mysql.getConnection().createStatement();
                    String SqlQuery = "select *from s_billar where (fat<>'V') and (terminal>='" + txtMacNo1.getText() + "') and (terminal<='" + txtMacNo2.getText() + "') and (s_date>='" + Datefmt.format(TDate1) + "') and (s_date<='" + Datefmt.format(TDate2) + "')";
                    ResultSet rec = stmt.executeQuery(SqlQuery);
                    rec.first();
                    if (rec.getRow() == 0) {
                    } else {
                        do {
                            CntBill++;
                            SumCash = SumCash + rec.getDouble("cash");
                            SumCupon = SumCupon + rec.getDouble("cupon");
                        } while (rec.next());
                    }
                    rec.close();
                    stmt.close();
                } catch (SQLException e) {
                    MSG.ERR(e.getMessage());
                }
                prn.print(PUtility.DataFullR("     เงินสด Cash              ", 26) + PUtility.DataFull(DecFmt.format(SumCash), 13));
                prn.print(PUtility.DataFullR("     บัตรกำนัล Coupon          ", 26) + PUtility.DataFull(DecFmt.format(SumCupon), 13));
                try {
                    Statement stmt = mysql.getConnection().createStatement();
                    String SqlQuery = "select *from s_tcrar where (fat<>'V') and (terminal>='" + txtMacNo1.getText() + "') and (terminal<='" + txtMacNo2.getText() + "') and (s_date>='" + Datefmt.format(TDate1) + "') and (s_date<='" + Datefmt.format(TDate2) + "')";
                    ResultSet rec = stmt.executeQuery(SqlQuery);
                    rec.first();
                    if (rec.getRow() == 0) {
                    } else {
                        do {
                            prn.print(PUtility.DataFullR(PUtility.SeekCreditName(rec.getString("crcode") + "                "), 20) + PUtility.DataFull(IntFmt.format(rec.getInt("crcnt")), 6) + PUtility.DataFull(DecFmt.format(rec.getDouble("cramt")), 13));

                        } while (rec.next());
                    }
                    rec.close();
                    stmt.close();
                } catch (SQLException e) {
                    MSG.ERR(e.getMessage());
                }
                prn.print("ยอดรับชำระ AR    : " + PUtility.DataFull(IntFmt.format(CntBill), 6));
                prn.print("----------------------------------------");
                prn.print(" ");
                prn.print("ยอดยกเลิกรายการ การรับชำระจากลูกหนี้ภายนอก");
                prn.print("AR Pay-No    Amount  Mac  User User Void ");
                prn.print("----------------------------------------");
                try {
                    Statement stmt = mysql.getConnection().createStatement();
                    String SqlQuery = "select *from s_billar where (fat='V') and (terminal>='" + txtMacNo1.getText() + "') and (terminal<='" + txtMacNo2.getText() + "') and (s_date>='" + Datefmt.format(TDate1) + "') and (s_date<='" + Datefmt.format(TDate2) + "')";
                    ResultSet rec = stmt.executeQuery(SqlQuery);
                    rec.first();
                    if (rec.getRow() == 0) {
                    } else {
                        do {
                            prn.print(rec.getString("ref_no") + "  " + PUtility.DataFull(DecFmt.format(rec.getDouble("stotal")), 9) + "  " + rec.getString("terminal") + "  " + PUtility.DataFull(rec.getString("cashier"), 6) + "  " + PUtility.DataFull(rec.getString("uservoid"), 6));

                        } while (rec.next());
                    }
                    rec.close();
                    stmt.close();
                } catch (SQLException e) {
                    MSG.ERR(e.getMessage());
                }

                mysql.close();
                prn.print("----------------------------------------");
                prn.print("");
                prn.print("");
                prn.print("");

                prn.CutPaper();
                prn.closePrint();
            }
        }
    }

    public void PrintTerminalEngForm(FinalcialRec frec, CreditRec[] CrArray, String macNo1, String macNo2) {
        CONFIG = POSConfigSetup.Bean();
        if (Value.printdriver) {
            PrintTerminalEngFormDriver(frec, CrArray, macNo1, macNo1);
        } else {
            if (!Value.getComPort().equals("NONE")) {
                ArrayList<Object[]> list1 = DocAnalyse(Datefmt.format(TDate1) + "", Datefmt.format(TDate2) + "");
                String countE = "", countT = "", countD = "", etdE = "", etdT = "", etdD = "";
                double totalE = 0.00, totalT = 0.00, totalD = 0.00, nettotalE = 0.00, nettotalT = 0.00, nettotalD = 0.00;
                double countCCE = 0.00, countCCT = 0.00, countCCD = 0.00, countBillE = 0.00, countBillT = 0.00, countBillD = 0.00;
                double AVG_DockE = 0.00;
                double AVG_DockT = 0.00;
                double AVG_DockD = 0.00;
                double AVG_CCE = 0.00;
                double AVG_CCT = 0.00;
                double AVG_CCD = 0.00;
                if (list1 != null && list1.size() > 0) {
                    countE = list1.get(0)[0].toString();
                    etdE = list1.get(0)[1].toString();
                    countCCE = Double.parseDouble(list1.get(0)[2].toString());
                    totalE = Double.parseDouble(list1.get(0)[4].toString());
                    nettotalE = Double.parseDouble(list1.get(0)[5].toString());

                    countT = list1.get(1)[0].toString();
                    etdT = list1.get(1)[1].toString();
                    countCCT = Double.parseDouble(list1.get(1)[2].toString());
                    nettotalT = Double.parseDouble(list1.get(1)[4].toString());
                    totalT = Double.parseDouble(list1.get(1)[5].toString());

                    countD = list1.get(2)[0].toString();
                    etdD = list1.get(2)[1].toString();
                    countCCD = Double.parseDouble(list1.get(2)[2].toString());
                    nettotalD = Double.parseDouble(list1.get(2)[4].toString());
                    totalD = Double.parseDouble(list1.get(2)[5].toString());

                    countBillE = Double.parseDouble(list1.get(0)[0].toString());
                    countBillT = Double.parseDouble(list1.get(1)[0].toString());
                    countBillD = Double.parseDouble(list1.get(2)[0].toString());

                    AVG_DockE = nettotalE / countBillE;
                    AVG_DockT = nettotalT / countBillT;
                    AVG_DockD = nettotalD / countBillD;
                    AVG_CCE = nettotalE / countCCE;
                    AVG_CCT = nettotalT / countCCT;
                    AVG_CCD = nettotalD / countCCD;

                    if (nettotalE == 0.00 && countBillE == 0.00) {
                        AVG_DockE = 0.00;
                    }
                    if (nettotalT == 0.00 && countBillT == 0.00) {
                        AVG_DockT = 0.00;
                    }
                    if (nettotalD == 0.00 && countBillD == 0.00) {
                        AVG_DockD = 0.00;
                    }
                    if (nettotalE == 0.00 && countCCE == 0) {
                        AVG_CCE = 0.00;
                    }
                    if (nettotalT == 0.00 & countCCT == 0) {
                        AVG_CCT = 0.00;
                    }
                    if (nettotalD == 0.00 & countCCD == 0) {
                        AVG_CCD = 0.00;
                    }
                } else {

                }
                if (prn.OpenPrint(Value.getComPort())) {
                    prn.InitPrinter();
                    prn.print(POSHW.getHeading1());
                    prn.print(POSHW.getHeading2());
                    prn.print(POSHW.getHeading3());
                    prn.print(POSHW.getHeading4());
                    //prn.print("REG ID :");
                    prn.print("   *** MTD Terminal Report ***");
                    prn.print("Date From : " + DatefmtShow.format(TDate1));
                    prn.print("Date To..   " + DatefmtShow.format(TDate2));
                    prn.print("Terminal : " + txtMacNo1.getText() + " To Terminal : " + txtMacNo2.getText());
                    Date dateP = new Date();
                    prn.print("Print Time :" + DatefmtThai.format(dateP));
                    prn.print("Print By Cashier:" + PublicVar._User + " Mac:" + Value.MACNO);

                    double NetSale_VatExclude = frec.Net_Sale * CONFIG.getP_Vat() / (100 + CONFIG.getP_Vat());
                    double NetSale = frec.Net_Sale - NetSale_VatExclude;

                    prn.print("----------------------------------------");
                    prn.print(PUtility.DataFullR("FOOD                         ", 26) + PUtility.DataFull(DecFmt.format(frec.Food), 13));
                    prn.print(PUtility.DataFullR("BEVERAGE                     ", 26) + PUtility.DataFull(DecFmt.format(frec.Drink), 13));
                    if (frec.Product > 0) {
                        prn.print(PUtility.DataFullR("PRODUCT                      ", 26) + PUtility.DataFull(DecFmt.format(frec.Product), 13));
                    }
                    prn.print(PUtility.DataFullR("TOTAL-SALES                  ", 26) + PUtility.DataFull(DecFmt.format(frec.Dept_Sum), 13));
                    prn.print("                       ================");
                    //prn.print(PUtility.DataFullR("ค่าบริการ Service       ", 20) + PUtility.DataFull(IntFmt.format(frec.ServiceCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Service), 13));
                    if (frec.ChargeCnt > 0) {
                        prn.print(PUtility.DataFullR("Charge  Credit               ", 20) + PUtility.DataFull(IntFmt.format(frec.ChargeCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Charge), 13));
                    }
                    if (frec.Vip_DiscCnt > 0) {
                        prn.print(PUtility.DataFullR("Discount Member              ", 20) + PUtility.DataFull(IntFmt.format(frec.Vip_DiscCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Vip_Disc), 13));
                    }
                    if (frec.Fast_DiscCnt > 0) {
                        prn.print(PUtility.DataFullR("Discount Festival            ", 20) + PUtility.DataFull(IntFmt.format(frec.Fast_DiscCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Fast_Disc), 13));
                    }
                    if (frec.Emp_DiscCnt > 0) {
                        prn.print(PUtility.DataFullR("Discount Employ              ", 20) + PUtility.DataFull(IntFmt.format(frec.Emp_DiscCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Emp_Disc), 13));
                    }
                    if (frec.Train_DiscCnt > 0) {
                        prn.print(PUtility.DataFullR("Discount Staff Disc          ", 20) + PUtility.DataFull(IntFmt.format(frec.Train_DiscCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Train_Disc), 13));
                    }
                    if (frec.Sub_DiscCnt > 0) {
                        prn.print(PUtility.DataFullR("Discount Cupon               ", 20) + PUtility.DataFull(IntFmt.format(frec.Sub_DiscCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Sub_Disc), 13));
                    }
                    if (frec.Gen_RefundCnt > 0) {
                        prn.print(PUtility.DataFullR("Discount Bath.               ", 20) + PUtility.DataFull(IntFmt.format(frec.Gen_RefundCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Gen_Refund), 13));
                    }
                    if (frec.PromotionCnt > 0) {
                        prn.print(PUtility.DataFullR("Discount Promotion           ", 20) + PUtility.DataFull(IntFmt.format(frec.PromotionCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Promotion), 13));
                    }
                    if (frec.SpacialCnt > 0) {
                        prn.print(PUtility.DataFullR("Discount Special             ", 20) + PUtility.DataFull(IntFmt.format(frec.SpacialCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Spacial), 13));
                    }
                    if (frec.Item_DiscCnt > 0) {
                        prn.print(PUtility.DataFullR("Discount Item                ", 20) + PUtility.DataFull(IntFmt.format(frec.Item_DiscCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Item_Disc), 13));
                    }
                    if (frec.Cupon_DiscCnt > 0) {
                        MySQLConnect c = new MySQLConnect();
                        c.open();
                        try {
                            String sql = "select sum(cuquan) cuquan ,sum(cuamt) cuamt "
                                    + "from s_cupon "
                                    + "where s_date between'" + dc.dateDatabase(txtDate1.getText()) + "' "
                                    + "and '" + dc.dateDatabase(txtDate2.getText()) + "' "
                                    + "and cuquan<>'0' and cuamt<>'0'";
                            ResultSet rs = c.getConnection().createStatement().executeQuery(sql);
                            while (rs.next()) {
                                double cuamt = rs.getDouble("cuamt");
                                double quan = rs.getDouble("cuquan");
                                prn.print(PUtility.DataFullR("Special  Coupon              ", 20) + PUtility.DataFull(IntFmt.format(quan), 6) + PUtility.DataFull(DecFmt.format(cuamt), 13));
                            }

                        } catch (Exception e) {
                            c.close();
                        }
                    }
                    //prn.print(PUtility.DataFullR("หักคืนเงินมัดจำ            ", 20) + PUtility.DataFull(IntFmt.format(frec.EarnestCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Earnest), 13));
                    prn.print("----------------------------------------");
                    prn.print(PUtility.DataFullR("Gross-Sales                  ", 26) + PUtility.DataFull(DecFmt.format(frec.Net_Sale), 13));
                    prn.print("                       ================");
                    if (frec.Gift > 0) {
                        prn.print(PUtility.DataFullR("Gift Voucher           ", 20) + PUtility.DataFull(IntFmt.format(frec.GiftCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Gift), 13));
                    }
                    if (frec.Entertain > 0) {
                        prn.print(PUtility.DataFullR("Entertain                       ", 20) + PUtility.DataFull(IntFmt.format(frec.BillEntertain), 6) + PUtility.DataFull(DecFmt.format(frec.Entertain), 13));
                    }
                    prn.print(PUtility.DataFullR("Cash                   ", 20) + PUtility.DataFull(IntFmt.format(frec.CashCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Cash), 13));
                    String[] credit = credit(macNo1, macNo2);
                    if (!credit.equals("")) {
                        String cd = credit[0];
                        String am = credit[1];
                        prn.print(PUtility.DataFullR("CRADIT                 ", 20) + PUtility.DataFull(cd, 6) + PUtility.DataFull(am, 13));
                    }
                    ArrayList<String[]> list = CreName(macNo1, macNo2);
                    for (int i = 0; i < list.size(); i++) {
                        String[] CreName = (String[]) list.get(i);

                        String name = CreName[0];
                        String num = CreName[1];
                        String amt = CreName[2];
                        prn.print(" " + PUtility.DataFull(name, 6) + PUtility.DataFull(num, 18) + PUtility.DataFull(amt, 13));
                    }
                    prn.print(PUtility.DataFullR("FLOAT-IN                ", 20) + PUtility.DataFull(IntFmt.format(frec.Paid_InCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Paid_In), 13));
                    prn.print(PUtility.DataFullR("FLOAT-OUT               ", 20) + PUtility.DataFull(IntFmt.format(frec.Paid_OutCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Paid_Out), 13));
                    prn.print("----------------------------------------");
                    prn.print(PUtility.DataFullR("Bank In                     ", 20) + PUtility.DataFull(IntFmt.format(frec.CashCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Cash), 13));
                    prn.print("----------------------------------------");
                    prn.print(PUtility.DataFullR("Vat                         ", 26) + PUtility.DataFull(DecFmt.format(frec.VatAmt), 13));
                    prn.print(PUtility.DataFullR("Net-Sales              ", 20) + PUtility.DataFull(DecFmt.format(frec.Net_Sale - NetSale_VatExclude), 19));
                    //prn.print(PUtility.DataFullR("Net-Sales                   ", 26) + PUtility.DataFull(DecFmt.format(frec.Dept_Sum - frec.VatAmt), 13));
                    prn.print("----------------------------------------");
                    prn.print(PUtility.DataFullR("Customer                    ", 26) + PUtility.DataFull(IntFmt.format(frec.Customer), 8));
                    prn.print(PUtility.DataFullR("MGR Refund                  ", 20) + PUtility.DataFull(IntFmt.format(frec.CntBillVoid), 6) + PUtility.DataFull(DecFmt.format(frec.AmtBillVoid), 13));
                    prn.print(PUtility.DataFullR("MGR Void                    ", 20) + PUtility.DataFull(IntFmt.format(frec.CntVoid), 6) + PUtility.DataFull(DecFmt.format(frec.VoidValue), 13));
                    prn.print("----------------------------------------");
                    prn.print(PUtility.DataFullR("Docket                      ", 26) + PUtility.DataFull(IntFmt.format(frec.CntBill), 8) + " ");
                    MySQLConnect mysql = new MySQLConnect();
                    mysql.open();
                    try {
                        Statement stmt = mysql.getConnection().createStatement();
                        String SqlQuery = "select b_macno,min(b_refno),max(b_refno) from s_invoice "
                                + "where (s_date>='" + Datefmt.format(TDate1) + "') and (s_date<='" + Datefmt.format(TDate2) + "') "
                                + "and (b_macno>='" + txtMacNo1.getText() + "') "
                                + "and (b_macno<='" + txtMacNo2.getText() + "') "
                                + " group by b_macno order by b_macno";
                        ResultSet rec = stmt.executeQuery(SqlQuery);
                        rec.first();
                        if (rec.getRow() == 0) {
                        } else {
                            do {
                                prn.print(" Start Docket    " + rec.getString("min(b_refno)") + " To    " + rec.getString("max(b_refno)"));

                            } while (rec.next());
                        }
                        rec.close();
                        stmt.close();
                    } catch (SQLException e) {
                        MSG.ERR(e.getMessage());
                    } finally {
                        mysql.close();
                    }
                    prn.print("----------------------------------------");
                    prn.print("SaleType   Docket        CC       Amount");
                    prn.print("----------------------------------------");
//                prn.print("   " + PUtility.DataFullR((etdE.replace("E", "Dine-In")), 5) + PUtility.DataFull((countE), 7) + " " + PUtility.DataFull((DecFmt.format(countCCE)), 10) + PUtility.DataFull((DecFmt.format(totalE)), 13));
//                prn.print("   " + PUtility.DataFullR((etdT.replace("T", "Take Away")), 5) + PUtility.DataFull((countT), 7) + " " + PUtility.DataFull((DecFmt.format(countCCT)), 10) + PUtility.DataFull((DecFmt.format(totalT)), 13));
                    prn.print("Dine-In    " + PUtility.DataFull(IntFmt.format(frec.Eat_In_Cnt), 6) + PUtility.DataFull(IntFmt.format(frec.Eat_In_Cust), 8) + PUtility.DataFull(DecFmt.format(frec.Eat_In_Amt), 13));
                    prn.print("Take Away  " + PUtility.DataFull(IntFmt.format(frec.Take_AwayCnt), 6) + PUtility.DataFull(IntFmt.format(frec.Take_AwayCust), 8) + PUtility.DataFull(DecFmt.format(frec.Take_AwayAmt), 13));
                    prn.print("Delivery   " + PUtility.DataFull(IntFmt.format(frec.DeliveryCnt), 6) + PUtility.DataFull(IntFmt.format(frec.DeliveryCust), 8) + PUtility.DataFull(DecFmt.format(frec.DeliveryAmt), 13));
                    prn.print("----------------------------------------");
                    prn.print("");
                    prn.print("                Analysts");
                    prn.print("              ***Format***");
                    prn.print("");
                    prn.print("");
                    prn.print("     " + PUtility.DataFullR(" DineIn", 10) + PUtility.DataFullR("   TakeAway", 16) + PUtility.DataFullR("Delivery", 18));
                    prn.print("Gross Sales");
                    prn.print("Net Sales");
                    prn.print("Docket");
                    prn.print("Customer");
                    prn.print("AVG/Dock");
                    prn.print("AVG/Head");
                    prn.print("----------------------------------------");
                    prn.print("" + PUtility.DataFull(DecFmt.format(totalE), 10) + " " + PUtility.DataFull(DecFmt.format(totalT), 14) + "" + PUtility.DataFull(DecFmt.format(totalD), 15));
                    prn.print("" + PUtility.DataFull(DecFmt.format(nettotalE), 10) + " " + PUtility.DataFull(DecFmt.format(nettotalT), 14) + "" + PUtility.DataFull(DecFmt.format(nettotalD), 15));
                    prn.print("" + PUtility.DataFull(IntFmt.format(countBillE), 10) + " " + PUtility.DataFull(IntFmt.format(countBillT), 14) + "" + PUtility.DataFull(IntFmt.format(countBillD), 15));
                    prn.print("" + PUtility.DataFull(DecFmt.format(countCCE), 10) + " " + PUtility.DataFull(DecFmt.format(countCCT), 14) + "" + PUtility.DataFull(DecFmt.format(countCCD), 15));
                    prn.print("" + PUtility.DataFull(DecFmt.format(AVG_DockE), 10) + " " + PUtility.DataFull(DecFmt.format(AVG_DockT), 14) + "" + PUtility.DataFull(DecFmt.format(AVG_DockD), 15));
                    prn.print("" + PUtility.DataFull(DecFmt.format(AVG_CCE), 10) + " " + PUtility.DataFull(DecFmt.format(AVG_CCT), 14) + "" + PUtility.DataFull(DecFmt.format(AVG_CCD), 15));
                    prn.print("");
//                prn.print("          Dine In        TakeAway");
//                prn.print("Gross Sales  " + PUtility.DataFull(DecFmt.format(totalE), 15) + "  " + PUtility.DataFull(DecFmt.format(totalT), 20));
//                prn.print("Net Sales  " + PUtility.DataFull(DecFmt.format(nettotalE), 10) + "" + PUtility.DataFull(DecFmt.format(nettotalT), 15));
//                prn.print("Docket     " + PUtility.DataFull(IntFmt.format(countBillE), 10) + "" + PUtility.DataFull(IntFmt.format(countBillT), 15));
//                prn.print("Customer   " + PUtility.DataFull(DecFmt.format(countCCE), 10) + "" + PUtility.DataFull(DecFmt.format(countCCT), 15));
//                prn.print("AVG/Dock   " + PUtility.DataFull(DecFmt.format(AVG_DockE), 10) + "" + PUtility.DataFull(DecFmt.format(AVG_DockT), 15));
//                prn.print("AVG/Head   " + PUtility.DataFull(DecFmt.format(AVG_CCE), 10) + "" + PUtility.DataFull(DecFmt.format(AVG_CCT), 15));
                    prn.print("----------------------------------------");
                    prn.print("");
                    prn.print("");
                    prn.print("");
                    prn.print("");
                    prn.print("");
                    prn.print("");
                    prn.print("");
                    prn.print("");
                    prn.print("");
                    prn.print("");
                    prn.print("");
                    prn.print("");
                    prn.print("");
                    prn.CutPaper();
                    prn.closePrint();

                }
            }
        }
    }

    public void PrintTerminalEngFormDriver(FinalcialRec frec, CreditRec[] CrArray, String macNo1, String macNo2) {
        String t = "";
        double sumCuponAmt = 0.00;
        CONFIG = POSConfigSetup.Bean();
        ArrayList<Object[]> list1 = DocAnalyse(Datefmt.format(TDate1) + "", Datefmt.format(TDate2) + "");
        String countE = "", countT = "", countD = "", etdE = "", etdT = "", etdD = "";
        double totalE = 0.00, totalT = 0.00, totalD = 0.00, nettotalE = 0.00, nettotalT = 0.00, nettotalD = 0.00;
        double countCCE = 0.00, countCCT = 0.00, countCCD = 0.00, countBillE = 0.00, countBillT = 0.00, countBillD = 0.00;
        double AVG_DockE = 0.00;
        double AVG_DockT = 0.00;
        double AVG_DockD = 0.00;
        double AVG_CCE = 0.00;
        double AVG_CCT = 0.00;
        double AVG_CCD = 0.00;
        if (list1 != null && list1.size() > 0) {
            countE = list1.get(0)[0].toString();
            etdE = list1.get(0)[1].toString();
            countCCE = Double.parseDouble(list1.get(0)[2].toString());
            totalE = Double.parseDouble(list1.get(0)[4].toString()) - frec.Service - frec.VatAmt;
            nettotalE = Double.parseDouble(list1.get(0)[5].toString());

            countT = list1.get(1)[0].toString();
            etdT = list1.get(1)[1].toString();
            countCCT = Double.parseDouble(list1.get(1)[2].toString());
            nettotalT = Double.parseDouble(list1.get(1)[4].toString());
            totalT = Double.parseDouble(list1.get(1)[5].toString());

            countD = list1.get(2)[0].toString();
            etdD = list1.get(2)[1].toString();
            countCCD = Double.parseDouble(list1.get(2)[2].toString());
            nettotalD = Double.parseDouble(list1.get(2)[4].toString());
            totalD = Double.parseDouble(list1.get(2)[5].toString());

            countBillE = Double.parseDouble(list1.get(0)[0].toString());
            countBillT = Double.parseDouble(list1.get(1)[0].toString());
            countBillD = Double.parseDouble(list1.get(2)[0].toString());

            AVG_DockE = nettotalE / countBillE;
            AVG_DockT = nettotalT / countBillT;
            AVG_DockD = nettotalD / countBillD;
            AVG_CCE = nettotalE / countCCE;
            AVG_CCT = nettotalT / countCCT;
            AVG_CCD = nettotalD / countCCD;

            if (nettotalE == 0.00 && countBillE == 0.00) {
                AVG_DockE = 0.00;
            }
            if (nettotalT == 0.00 && countBillT == 0.00) {
                AVG_DockT = 0.00;
            }
            if (nettotalD == 0.00 && countBillD == 0.00) {
                AVG_DockD = 0.00;
            }
            if (nettotalE == 0.00 && countCCE == 0) {
                AVG_CCE = 0.00;
            }
            if (nettotalT == 0.00 & countCCT == 0) {
                AVG_CCT = 0.00;
            }
            if (nettotalD == 0.00 & countCCD == 0) {
                AVG_CCD = 0.00;
            }
        } else {

        }
        double totalDiscount = 0.00;
        totalDiscount = frec.Vip_Disc + frec.Fast_Disc + frec.Emp_Disc
                + frec.Train_Disc + frec.Sub_Disc + frec.Gen_Refund + frec.Promotion
                + frec.Spacial + frec.Item_Disc + frec.Cupon_Disc;
        if (POSHW.getHeading1().trim().length() >= 18) {
            String[] strs = POSHW.getHeading1().trim().replace(" ", Space).split("_");
            for (String data : strs) {
                t += "colspan=3 align=center><font face=Angsana New size=1>" + data + "_";
            }
        } else {
            t += "colspan=3 align=center><font face=Angsana New size=1>" + POSHW.getHeading1().trim().replace(" ", "&nbsp; ") + "_";
        }
        if (POSHW.getHeading2().length() >= 18) {
            String[] strs = POSHW.getHeading2().trim().replace(" ", Space).split("_");
            for (String data : strs) {
                t += "colspan=3 align=center><font face=Angsana New size=1>" + data + "_";
            }
        } else {
            t += "colspan=3 align=center><font face=Angsana New size=1>" + POSHW.getHeading2().trim().replace(" ", "&nbsp; ") + "_";
        }
        t += "colspan=3 align=center><font face=Angsana New size=1>" + (POSHW.getHeading3()).trim() + "_";
        t += "colspan=3 align=center><font face=Angsana New size=1>" + (POSHW.getHeading4()).trim() + "_";
        t += "colspan=3 align=center><font face=Angsana New size=1>" + "REG.ID :" + Space + (POSHW.getTerminal()) + "_";
        t += ("colspan=3 align=center><font face=Angsana New size=1>_");
        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "*** MTD Terminal Report ***") + "_";
        t += ("colspan=3 align=center><font face=Angsana New size=1>_");
        t += ("colspan=3 align=left><font face=Angsana New size=1>" + "Date From :" + DatefmtShow.format(TDate1) + "To." + Space + DatefmtShow.format(TDate2)) + "_";
//        t += "colspan=3 align=left><font face=Angsana New size=1>" + "Date To..." + DatefmtShow.format(TDate2) + "_";
        t += ("colspan=3 align=left><font face=Angsana New size=1>" + "Terminal : " + Space + txtMacNo1.getText() + Space + " To : " + txtMacNo2.getText()) + "_";
        Date dateP = new Date();
        t += "colspan=3 align=left><font face=Angsana New size=1>" + "Print Time :" + DatefmtThai.format(dateP) + Space + PublicVar._User + " Mac:" + Value.MACNO + "_";

        double NetSale_VatExclude = frec.Net_Sale * CONFIG.getP_Vat() / (100 + CONFIG.getP_Vat());
        double NetSale = frec.Net_Sale - NetSale_VatExclude;

        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "-----------------------------------------------") + "_";
        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "FOOD" + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(frec.Food)) + "_";
        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "BEVERAGE" + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(frec.Drink)) + "_";
        if (frec.Product > 0) {
            t += ("colspan=2 align=left><font face=Angsana New size=1>" + "PRODUCT" + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(frec.Product)) + "_";
        }
        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "TOTAL-SALES" + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(frec.Dept_Sum)) + "_";
        //prn.print(PUtility.DataFullR("ค่าบริการ Service       ", 20) + PUtility.DataFull(IntFmt.format(frec.ServiceCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Service), 13));
        if (frec.ChargeCnt > 0) {
            t += ("colspan=3 align=center><font face=Angsana New size=1>" + PUtility.DataFullR("Charge  Credit", 20) + PUtility.DataFull(IntFmt.format(frec.ChargeCnt), 6) + PUtility.DataFullR(DecFmt.format(frec.Charge), 13)) + "_";
        }
        if (frec.Vip_DiscCnt > 0) {
            t += ("colspan=3 align=center><font face=Angsana New size=1>" + PUtility.DataFullR("Discount Member", 20) + PUtility.DataFull(IntFmt.format(frec.Vip_DiscCnt), 6) + PUtility.DataFullR(DecFmt.format(frec.Vip_Disc), 13)) + "_";
        }
        if (frec.Fast_DiscCnt > 0) {
            t += ("colspan=3 align=center><font face=Angsana New size=1>" + PUtility.DataFullR("Discount Festival", 20) + PUtility.DataFull(IntFmt.format(frec.Fast_DiscCnt), 6) + PUtility.DataFullR(DecFmt.format(frec.Fast_Disc), 13)) + "_";
        }
        if (frec.Emp_DiscCnt > 0) {
            t += ("colspan=3 align=center><font face=Angsana New size=1>" + PUtility.DataFullR("Discount Employ", 20) + PUtility.DataFull(IntFmt.format(frec.Emp_DiscCnt), 6) + PUtility.DataFullR(DecFmt.format(frec.Emp_Disc), 13)) + "_";
        }
        if (frec.Train_DiscCnt > 0) {
            t += ("colspan=3 align=center><font face=Angsana New size=1>" + PUtility.DataFullR("Discount Staff Disc", 20) + PUtility.DataFull(IntFmt.format(frec.Train_DiscCnt), 6) + PUtility.DataFullR(DecFmt.format(frec.Train_Disc), 13)) + "_";
        }
        if (frec.Sub_DiscCnt > 0) {
            t += ("colspan=3 align=center><font face=Angsana New size=1>" + PUtility.DataFullR("Discount Cupon", 20) + PUtility.DataFull(IntFmt.format(frec.Sub_DiscCnt), 6) + PUtility.DataFullR(DecFmt.format(frec.Sub_Disc), 13)) + "_";
        }
        if (frec.Gen_RefundCnt > 0) {
            t += ("colspan=3 align=center><font face=Angsana New size=1>" + PUtility.DataFullR("Discount Bath.", 20) + PUtility.DataFull(IntFmt.format(frec.Gen_RefundCnt), 6) + PUtility.DataFullR(DecFmt.format(frec.Gen_Refund), 13)) + "_";
        }
        if (frec.PromotionCnt > 0) {
            t += ("colspan=3 align=center><font face=Angsana New size=1>" + PUtility.DataFullR("Discount Promotion", 20) + PUtility.DataFull(IntFmt.format(frec.PromotionCnt), 6) + PUtility.DataFullR(DecFmt.format(frec.Promotion), 13)) + "_";
        }
        if (frec.SpacialCnt > 0) {
            t += ("colspan=3 align=center><font face=Angsana New size=1>" + PUtility.DataFullR("Discount Special", 20) + PUtility.DataFull(IntFmt.format(frec.SpacialCnt), 6) + PUtility.DataFullR(DecFmt.format(frec.Spacial), 13)) + "_";
        }
        if (frec.Item_DiscCnt > 0) {
            t += ("colspan=3 align=center><font face=Angsana New size=1>" + PUtility.DataFullR("Discount Item", 20) + PUtility.DataFull(IntFmt.format(frec.Item_DiscCnt), 6) + PUtility.DataFullR(DecFmt.format(frec.Item_Disc), 13)) + "_";
        }
        if (frec.Cupon_DiscCnt > 0) {
            MySQLConnect c = new MySQLConnect();
            c.open();
            try {
                String sql = "select sum(cuquan) cuquan ,sum(cuamt) cuamt "
                        + "from s_cupon "
                        + "where s_date between'" + dc.dateDatabase(txtDate1.getText()) + "' "
                        + "and '" + dc.dateDatabase(txtDate2.getText()) + "' "
                        + "and cuquan<>'0' and cuamt<>'0' and refund<>'V'";
                ResultSet rs = c.getConnection().createStatement().executeQuery(sql);
                while (rs.next()) {
                    double cuamt = rs.getDouble("cuamt");
                    double quan = rs.getDouble("cuquan");
                    t += ("align=left><font face=Angsana New size=1>" + "Special Coupon" + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(IntFmt.format(quan), 6) + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFullR(DecFmt.format(cuamt), 13)) + "_";
                }

            } catch (Exception e) {
                
                c.close();
            }
        }
        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "===========================") + "_";
//        t += ("colspan=2 align=left><font face=Angsana New size=1>" + PUtility.DataFullR("Gross-Sales", 26) + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(DecFmt.format(frec.Net_Sale), 13)) + "_";
        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Gross-Sales" + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(frec.Dept_Sum - totalDiscount) + "_");

        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "===========================") + "_";
        if (frec.Gift > 0) {
            t += ("align=left><font face=Angsana New size=1>" + PUtility.DataFullR("Gift Voucher", 20) + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(IntFmt.format(frec.GiftCnt), 6) + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFullR(DecFmt.format(frec.Gift), 13)) + "_";
        }
        if (frec.Entertain > 0) {
            t += ("align=lfet><font face=Angsana New size=1>" + PUtility.DataFullR("Entertain", 20) + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(IntFmt.format(frec.BillEntertain), 6) + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFullR(DecFmt.format(frec.Entertain), 13) + "_");
        }
        t += ("align=left><font face=Angsana New size=1>" + "Cash" + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(IntFmt.format(frec.CashCnt), 6) + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFullR(DecFmt.format(frec.Cash), 13)) + "_";
        String[] credit = credit(macNo1, macNo2);
        if (!credit.equals("")) {
            String cd = credit[0];
            String am = credit[1];
            if (am == null) {
                am = "0";
            }
            double am1 = Double.parseDouble(am);
            t += ("align=left><font face=Angsana New size=1>" + "CRADIT" + "</td><td align=right><font face=Angsana New size=1>" + cd + TAB + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(am1)) + "_";
        }
        ArrayList<String[]> list = CreName(macNo1, macNo2);
        for (int i = 0; i < list.size(); i++) {
            String[] CreName = (String[]) list.get(i);

            String name = CreName[0];
            String num = CreName[1];
            String amt = CreName[2];
            double amt1 = Double.parseDouble(amt);
            t += ("align=left><font face=Angsana New size=1>" + TAB + PUtility.DataFull(name, 6) + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(("" + num), 8) + "</td><td  align=right><font face=Angsana New size=1>" + PUtility.DataFullR(DecFmt.format(amt1), 13)) + "_";
        }
        t += ("align=left><font face=Angsana New size=1>" + "FLOAT-IN" + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(IntFmt.format(frec.Paid_InCnt), 6) + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFullR(DecFmt.format(frec.Paid_In), 13)) + "_";
        t += ("align=left><font face=Angsana New size=1>" + "FLOAT-OUT" + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(IntFmt.format(frec.Paid_OutCnt), 6) + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFullR(DecFmt.format(frec.Paid_Out), 13)) + "_";
        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "-----------------------------------------------") + "_";
        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Bank In" + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFullR(DecFmt.format(frec.Cash + frec.Paid_In - frec.Paid_Out), 13)) + "_";
        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "-----------------------------------------------") + "_";
        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Service Charge" + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFullR(DecFmt.format(frec.Service), 13)) + "_";
        if (CONFIG.getP_VatType().contains("I")) {
            t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Net-Sales" + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFullR(DecFmt.format(frec.Net_Sale - NetSale_VatExclude), 19) + "_");
        }
        if (CONFIG.getP_VatType().contains("E")) {
            t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Net-Sales" + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFullR(DecFmt.format(frec.Net_Sale), 19) + "_");
            t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Net (มูลค่า)" + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFullR(DecFmt.format(frec.Net_Sale - NetSale_VatExclude), 19) + "_");
//            totalE = totalE - frec.Service;
        }
        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Round Total" + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(frec.B_NetDiff) + "_");
        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Vat" + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFullR(DecFmt.format(frec.VatAmt), 13)) + "_";

//        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Net-Sales" + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(DecFmt.format(frec.Net_Sale - NetSale_VatExclude), 19)) + "_";
        //prn.print(PUtility.DataFullR("Net-Sales                   ", 26) + PUtility.DataFull(DecFmt.format(frec.Dept_Sum - frec.VatAmt), 13));
        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "-----------------------------------------------") + "_";
        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Customer" + "</td><td align=right><font face=Angsana New size=1>" + IntFmt.format(frec.Customer)) + "_";
//        t += ("align=left><font face=Angsana New size=1>" + "MGR Refund" + "</td><td align=right><font face=Angsana New size=1>" + IntFmt.format(frec.CntBillVoid) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(frec.AmtBillVoid)) + "_";
//        t += ("align=left><font face=Angsana New size=1>" + "MGR Void" + "</td><td align=right><font face=Angsana New size=1>" + IntFmt.format(frec.CntVoid) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(frec.VoidValue)) + "_";
        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "MGR Refund" + Space + PUtility.DataFull(IntFmt.format(frec.CntBillVoid), 6) + Space + "Doc." + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFullR(DecFmt.format(frec.AmtBillVoid), 13) + "_");
        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "MGR Void" + Space + TAB + PUtility.DataFull(IntFmt.format(frec.CntVoid), 6) + Space + "Items." + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFullR(DecFmt.format(frec.VoidValue), 13) + "_");
        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "-----------------------------------------------") + "_";
        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Docket" + "</td><td align=right><font face=Angsana New size=1>" + IntFmt.format(frec.CntBill) + " ") + "_";
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "select b_macno,min(b_refno),max(b_refno) from s_invoice "
                    + "where (s_date>='" + Datefmt.format(TDate1) + "') and (s_date<='" + Datefmt.format(TDate2) + "') "
                    + "and (b_macno>='" + txtMacNo1.getText() + "') "
                    + "and (b_macno<='" + txtMacNo2.getText() + "') "
                    + " group by b_macno order by b_macno";
            ResultSet rec = stmt.executeQuery(SqlQuery);
            rec.first();
            if (rec.getRow() == 0) {
            } else {
                do {
                    t += ("colspan=3 align=left><font face=Angsana New size=1>" + "Start Docket" + Space + rec.getString("min(b_refno)") + TAB + " To" + Space + rec.getString("max(b_refno)")) + "_";
                } while (rec.next());
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            MSG.ERR(e.getMessage());
        } finally {
            mysql.close();
        }

        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "===========================") + "_";
        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "SaleType" + TAB + "Docket" + TAB + "CC" + "</td><td align=center><font face=Angsana New size=1>" + "Amount" + "_");
        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "===========================") + "_";
        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Dine - In" + TAB + IntFmt.format(frec.Eat_In_Cnt) + TAB + PUtility.DataFullSpace(IntFmt.format(frec.Eat_In_Cust), 4) + TAB + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFullR(DecFmt.format(frec.Eat_In_Amt), 8) + "_");
        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Take Away" + TAB + IntFmt.format(frec.Take_AwayCnt) + TAB + PUtility.DataFullSpace(IntFmt.format(frec.Take_AwayCust), 4) + TAB + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFullR(DecFmt.format(frec.Take_AwayAmt), 8) + "_");
        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Delivery" + TAB + IntFmt.format(frec.DeliveryCnt) + TAB + PUtility.DataFullSpace(IntFmt.format(frec.DeliveryCust), 4) + TAB + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFullR(DecFmt.format(frec.DeliveryAmt), 8) + "_");
        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "===========================") + "_";
        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "Analysts") + "_";
        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "_");
        t += ("align=right><font face=Angsana New size=1>" + "DineIn" + TAB + "</td><td align=center><font face=Angsana New size=1>" + "TakeAway" + "</td><td align=right><font face=Angsana New size=1>" + "Delivery" + "_");
        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "-----------------------------------------------") + "_";
        t += ("colspan=3 align=left><font face=Angsana New size=1>" + "Gross Sales") + "_";
        t += ("width=10 align=left><font face=Angsana New size=1>" + TAB + PUtility.DataFullSpace(DecFmt.format(frec.Dept_Sum - totalDiscount), 13) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(totalT) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(totalD)) + "_";
        t += ("colspan=3 align=left><font face=Angsana New size=1>" + "Net Sales") + "_";
        t += ("align=left><font face=Angsana New size=1>" + TAB + PUtility.DataFullSpace(DecFmt.format(nettotalE), 13) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(nettotalT) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(nettotalD)) + "_";
        t += ("colspan=3 align=left><font face=Angsana New size=1>" + "Docket") + "_";
        t += ("align=left><font face=Angsana New size=1>" + TAB + PUtility.DataFullSpace(IntFmt.format(countBillE), 13) + "</td><td align=right><font face=Angsana New size=1>" + IntFmt.format(countBillT) + "</td><td align=right><font face=Angsana New size=1>" + IntFmt.format(countBillD)) + "_";
        t += ("colspan=3 align=left><font face=Angsana New size=1>" + "Customer") + "_";
        t += ("align=left><font face=Angsana New size=1>" + TAB + PUtility.DataFullSpace(DecFmt.format(countCCE), 13) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(countCCT) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(countCCD)) + "_";
        t += ("colspan=3 align=left><font face=Angsana New size=1>" + "AVG/Dock") + "_";
        t += ("align=left><font face=Angsana New size=1>" + TAB + PUtility.DataFullSpace(DecFmt.format(AVG_DockE), 13) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(AVG_DockT) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(AVG_DockD)) + "_";
        t += ("colspan=3 align=left><font face=Angsana New size=1>" + "AVG/Head") + "_";
        t += ("align=left><font face=Angsana New size=1>" + TAB + PUtility.DataFullSpace(DecFmt.format(AVG_CCE), 13) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(AVG_CCT) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(AVG_CCD)) + "_";
        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "-----------------------------------------------") + "_";
        t = changeReportLanguage(t);
        PrintDriver pd = new PrintDriver();
        String[] strs = t.split("_");

        for (String data1 : strs) {
            pd.addTextIFont(data1);
            try {
                Thread.sleep(50);
            } catch (InterruptedException e) {
            }
        }
        pd.printHTML();
    }
//    public void PrintTerminalEngFormDriver(FinalcialRec frec, CreditRec[] CrArray, String macNo1, String macNo2) {
//        String t = "";
//        double sumCuponAmt = 0.00;
//        CONFIG = POSConfigSetup.Bean();
//        ArrayList<Object[]> list1 = DocAnalyse(Datefmt.format(TDate1) + "", Datefmt.format(TDate2) + "");
//        String countE = "", countT = "", countD = "", etdE = "", etdT = "", etdD = "";
//        double totalE = 0.00, totalT = 0.00, totalD = 0.00, nettotalE = 0.00, nettotalT = 0.00, nettotalD = 0.00;
//        double countCCE = 0.00, countCCT = 0.00, countCCD = 0.00, countBillE = 0.00, countBillT = 0.00, countBillD = 0.00;
//        double AVG_DockE = 0.00;
//        double AVG_DockT = 0.00;
//        double AVG_DockD = 0.00;
//        double AVG_CCE = 0.00;
//        double AVG_CCT = 0.00;
//        double AVG_CCD = 0.00;
//        if (list1 != null && list1.size() > 0) {
//            countE = list1.get(0)[0].toString();
//            etdE = list1.get(0)[1].toString();
//            countCCE = Double.parseDouble(list1.get(0)[2].toString());
//            totalE = Double.parseDouble(list1.get(0)[4].toString()) - frec.Service - frec.VatAmt;
//            nettotalE = Double.parseDouble(list1.get(0)[5].toString());
//
//            countT = list1.get(1)[0].toString();
//            etdT = list1.get(1)[1].toString();
//            countCCT = Double.parseDouble(list1.get(1)[2].toString());
//            nettotalT = Double.parseDouble(list1.get(1)[4].toString());
//            totalT = Double.parseDouble(list1.get(1)[5].toString());
//
//            countD = list1.get(2)[0].toString();
//            etdD = list1.get(2)[1].toString();
//            countCCD = Double.parseDouble(list1.get(2)[2].toString());
//            nettotalD = Double.parseDouble(list1.get(2)[4].toString());
//            totalD = Double.parseDouble(list1.get(2)[5].toString());
//
//            countBillE = Double.parseDouble(list1.get(0)[0].toString());
//            countBillT = Double.parseDouble(list1.get(1)[0].toString());
//            countBillD = Double.parseDouble(list1.get(2)[0].toString());
//
//            AVG_DockE = nettotalE / countBillE;
//            AVG_DockT = nettotalT / countBillT;
//            AVG_DockD = nettotalD / countBillD;
//            AVG_CCE = nettotalE / countCCE;
//            AVG_CCT = nettotalT / countCCT;
//            AVG_CCD = nettotalD / countCCD;
//
//            if (nettotalE == 0.00 && countBillE == 0.00) {
//                AVG_DockE = 0.00;
//            }
//            if (nettotalT == 0.00 && countBillT == 0.00) {
//                AVG_DockT = 0.00;
//            }
//            if (nettotalD == 0.00 && countBillD == 0.00) {
//                AVG_DockD = 0.00;
//            }
//            if (nettotalE == 0.00 && countCCE == 0) {
//                AVG_CCE = 0.00;
//            }
//            if (nettotalT == 0.00 & countCCT == 0) {
//                AVG_CCT = 0.00;
//            }
//            if (nettotalD == 0.00 & countCCD == 0) {
//                AVG_CCD = 0.00;
//            }
//        } else {
//
//        }
//        double totalDiscount = 0.00;
//        totalDiscount = frec.Vip_Disc + frec.Fast_Disc + frec.Emp_Disc
//                + frec.Train_Disc + frec.Sub_Disc + frec.Gen_Refund + frec.Promotion
//                + frec.Spacial + frec.Item_Disc + frec.Cupon_Disc;
//        if (POSHW.getHeading1().trim().length() >= 18) {
//            String[] strs = POSHW.getHeading1().trim().replace(" ", Space).split("_");
//            for (String data : strs) {
//                t += "colspan=3 align=center><font face=Angsana New size=1>" + data + "_";
//            }
//        } else {
//            t += "colspan=3 align=center><font face=Angsana New size=1>" + POSHW.getHeading1().trim().replace(" ", "&nbsp; ") + "_";
//        }
//        if (POSHW.getHeading2().length() >= 18) {
//            String[] strs = POSHW.getHeading2().trim().replace(" ", Space).split("_");
//            for (String data : strs) {
//                t += "colspan=3 align=center><font face=Angsana New size=1>" + data + "_";
//            }
//        } else {
//            t += "colspan=3 align=center><font face=Angsana New size=1>" + POSHW.getHeading2().trim().replace(" ", "&nbsp; ") + "_";
//        }
//        t += "colspan=3 align=center><font face=Angsana New size=1>" + (POSHW.getHeading3()).trim() + "_";
//        t += "colspan=3 align=center><font face=Angsana New size=1>" + (POSHW.getHeading4()).trim() + "_";
//        t += "colspan=3 align=center><font face=Angsana New size=1>" + "REG.ID :" + Space + (POSHW.getTerminal()) + "_";
//        t += ("colspan=3 align=center><font face=Angsana New size=1>_");
//        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "*** MTD Terminal Report ***") + "_";
//        t += ("colspan=3 align=center><font face=Angsana New size=1>_");
//        t += ("colspan=3 align=left><font face=Angsana New size=1>" + "Date From :" + DatefmtShow.format(TDate1)) + "To." + Space + DatefmtShow.format(TDate2) + "_";
////        t += "colspan=3 align=left><font face=Angsana New size=1>" + "Date To..." + DatefmtShow.format(TDate2) + "_";
//        t += ("colspan=3 align=left><font face=Angsana New size=1>" + "Terminal : " + Space + txtMacNo1.getText() + Space + " To Terminal : " + txtMacNo2.getText()) + "_";
//        Date dateP = new Date();
//        t += "colspan=3 align=left><font face=Angsana New size=1>" + "Print Time :" + DatefmtThai.format(dateP) + Space + PublicVar._User + " Mac:" + Value.MACNO + "_";
//
//        double NetSale_VatExclude = frec.Net_Sale * CONFIG.getP_Vat() / (100 + CONFIG.getP_Vat());
//        double NetSale = frec.Net_Sale - NetSale_VatExclude;
//
//        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "------------------------------------------------------------------") + "_";
//        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "FOOD" + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(frec.Food)) + "_";
//        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "BEVERAGE" + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(frec.Drink)) + "_";
//        if (frec.Product > 0) {
//            t += ("colspan=2 align=left><font face=Angsana New size=1>" + "PRODUCT" + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(frec.Product)) + "_";
//        }
//        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "TOTAL-SALES" + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(frec.Dept_Sum)) + "_";
//        //prn.print(PUtility.DataFullR("ค่าบริการ Service       ", 20) + PUtility.DataFull(IntFmt.format(frec.ServiceCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Service), 13));
//        if (frec.ChargeCnt > 0) {
//            t += ("colspan=3 align=center><font face=Angsana New size=1>" + PUtility.DataFullR("Charge  Credit", 20) + PUtility.DataFull(IntFmt.format(frec.ChargeCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Charge), 13)) + "_";
//        }
//        if (frec.Vip_DiscCnt > 0) {
//            t += ("colspan=3 align=center><font face=Angsana New size=1>" + PUtility.DataFullR("Discount Member", 20) + PUtility.DataFull(IntFmt.format(frec.Vip_DiscCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Vip_Disc), 13)) + "_";
//        }
//        if (frec.Fast_DiscCnt > 0) {
//            t += ("colspan=3 align=center><font face=Angsana New size=1>" + PUtility.DataFullR("Discount Festival", 20) + PUtility.DataFull(IntFmt.format(frec.Fast_DiscCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Fast_Disc), 13)) + "_";
//        }
//        if (frec.Emp_DiscCnt > 0) {
//            t += ("colspan=3 align=center><font face=Angsana New size=1>" + PUtility.DataFullR("Discount Employ", 20) + PUtility.DataFull(IntFmt.format(frec.Emp_DiscCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Emp_Disc), 13)) + "_";
//        }
//        if (frec.Train_DiscCnt > 0) {
//            t += ("colspan=3 align=center><font face=Angsana New size=1>" + PUtility.DataFullR("Discount Staff Disc", 20) + PUtility.DataFull(IntFmt.format(frec.Train_DiscCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Train_Disc), 13)) + "_";
//        }
//        if (frec.Sub_DiscCnt > 0) {
//            t += ("colspan=3 align=center><font face=Angsana New size=1>" + PUtility.DataFullR("Discount Cupon", 20) + PUtility.DataFull(IntFmt.format(frec.Sub_DiscCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Sub_Disc), 13)) + "_";
//        }
//        if (frec.Gen_RefundCnt > 0) {
//            t += ("colspan=3 align=center><font face=Angsana New size=1>" + PUtility.DataFullR("Discount Bath.", 20) + PUtility.DataFull(IntFmt.format(frec.Gen_RefundCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Gen_Refund), 13)) + "_";
//        }
//        if (frec.PromotionCnt > 0) {
//            t += ("colspan=3 align=center><font face=Angsana New size=1>" + PUtility.DataFullR("Discount Promotion", 20) + PUtility.DataFull(IntFmt.format(frec.PromotionCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Promotion), 13)) + "_";
//        }
//        if (frec.SpacialCnt > 0) {
//            t += ("colspan=3 align=center><font face=Angsana New size=1>" + PUtility.DataFullR("Discount Special", 20) + PUtility.DataFull(IntFmt.format(frec.SpacialCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Spacial), 13)) + "_";
//        }
//        if (frec.Item_DiscCnt > 0) {
//            t += ("colspan=3 align=center><font face=Angsana New size=1>" + PUtility.DataFullR("Discount Item", 20) + PUtility.DataFull(IntFmt.format(frec.Item_DiscCnt), 6) + PUtility.DataFull(DecFmt.format(frec.Item_Disc), 13)) + "_";
//        }
//        if (frec.Cupon_DiscCnt > 0) {
//            MySQLConnect c = new MySQLConnect();
//            c.open();
//            try {
//                String sql = "select sum(cuquan) cuquan ,sum(cuamt) cuamt "
//                        + "from s_cupon "
//                        + "where s_date between'" + dc.dateDatabase(txtDate1.getText()) + "' "
//                        + "and '" + dc.dateDatabase(txtDate2.getText()) + "' "
//                        + "and cuquan<>'0' and cuamt<>'0' and refund<>'V'";
//                ResultSet rs = c.getConnection().createStatement().executeQuery(sql);
//                while (rs.next()) {
//                    double cuamt = rs.getDouble("cuamt");
//                    double quan = rs.getDouble("cuquan");
//                    t += ("align=left><font face=Angsana New size=1>" + "Special Coupon" + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(IntFmt.format(quan), 6) + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(DecFmt.format(cuamt), 13)) + "_";
//                }
//
//            } catch (Exception e) {
//                c.close();
//            }
//        }
//        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "=====================================") + "_";
////        t += ("colspan=2 align=left><font face=Angsana New size=1>" + PUtility.DataFullR("Gross-Sales", 26) + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(DecFmt.format(frec.Net_Sale), 13)) + "_";
//        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Gross-Sales" + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(frec.Dept_Sum - totalDiscount) + "_");
//
//        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "=====================================") + "_";
//        if (frec.Gift > 0) {
//            t += ("align=left><font face=Angsana New size=1>" + PUtility.DataFullR("Gift Voucher", 20) + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(IntFmt.format(frec.GiftCnt), 6) + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(DecFmt.format(frec.Gift), 13)) + "_";
//        }
//        if (frec.Entertain > 0) {
//            t += ("align=lfet><font face=Angsana New size=1>" + PUtility.DataFullR("Entertain", 20) + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(IntFmt.format(frec.BillEntertain), 6) + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(DecFmt.format(frec.Entertain), 13) + "_");
//        }
//        t += ("align=left><font face=Angsana New size=1>" + "Cash" + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(IntFmt.format(frec.CashCnt), 6) + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(DecFmt.format(frec.Cash), 13)) + "_";
//        String[] credit = credit(macNo1, macNo2);
//        if (!credit.equals("")) {
//            String cd = credit[0];
//            String am = credit[1];
//            if (am == null) {
//                am = "0";
//            }
//            double am1 = Double.parseDouble(am);
//            t += ("align=left><font face=Angsana New size=1>" + "CRADIT" + "</td><td align=right><font face=Angsana New size=1>" + cd + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(am1)) + "_";
//        }
//        ArrayList<String[]> list = CreName(macNo1, macNo2);
//        for (int i = 0; i < list.size(); i++) {
//            String[] CreName = (String[]) list.get(i);
//
//            String name = CreName[0];
//            String num = CreName[1];
//            String amt = CreName[2];
//            double amt1 = Double.parseDouble(amt);
//            t += ("align=left><font face=Angsana New size=1>" + TAB + PUtility.DataFull(name, 6) + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(("" + num), 8) + "</td><td  align=right><font face=Angsana New size=1>" + PUtility.DataFull(DecFmt.format(amt1), 13)) + "_";
//        }
//        t += ("align=left><font face=Angsana New size=1>" + "FLOAT-IN" + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(IntFmt.format(frec.Paid_InCnt), 6) + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(DecFmt.format(frec.Paid_In), 13)) + "_";
//        t += ("align=left><font face=Angsana New size=1>" + "FLOAT-OUT" + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(IntFmt.format(frec.Paid_OutCnt), 6) + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(DecFmt.format(frec.Paid_Out), 13)) + "_";
//        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "------------------------------------------------------------------") + "_";
//        t += ("align=left><font face=Angsana New size=1>" + "Bank In" + "</td><td colspan=2 align=right><font face=Angsana New size=1>" + PUtility.DataFull(DecFmt.format(frec.Cash + frec.Paid_In - frec.Paid_Out), 13)) + "_";
//        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "------------------------------------------------------------------") + "_";
//        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Service Charge" + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(DecFmt.format(frec.Service), 13)) + "_";
//        if (CONFIG.getP_VatType().contains("I")) {
//            t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Net-Sales" + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(DecFmt.format(frec.Net_Sale - NetSale_VatExclude), 19) + "_");
//        }
//        if (CONFIG.getP_VatType().contains("E")) {
//            t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Net-Sales" + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(DecFmt.format(frec.Net_Sale), 19) + "_");
////            totalE = totalE - frec.Service;
//        }
//        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Round Total" + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(frec.B_NetDiff) + "_");
//        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Vat" + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(DecFmt.format(frec.VatAmt), 13)) + "_";
//
////        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Net-Sales" + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(DecFmt.format(frec.Net_Sale - NetSale_VatExclude), 19)) + "_";
//        //prn.print(PUtility.DataFullR("Net-Sales                   ", 26) + PUtility.DataFull(DecFmt.format(frec.Dept_Sum - frec.VatAmt), 13));
//        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "------------------------------------------------------------------") + "_";
//        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Customer" + "</td><td align=right><font face=Angsana New size=1>" + IntFmt.format(frec.Customer)) + "_";
////        t += ("align=left><font face=Angsana New size=1>" + "MGR Refund" + "</td><td align=right><font face=Angsana New size=1>" + IntFmt.format(frec.CntBillVoid) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(frec.AmtBillVoid)) + "_";
////        t += ("align=left><font face=Angsana New size=1>" + "MGR Void" + "</td><td align=right><font face=Angsana New size=1>" + IntFmt.format(frec.CntVoid) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(frec.VoidValue)) + "_";
//        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "MGR Refund" + Space + PUtility.DataFull(IntFmt.format(frec.CntBillVoid), 6) + Space + "Doc." + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(DecFmt.format(frec.AmtBillVoid), 13) + "_");
//        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "MGR Void" + Space + TAB + PUtility.DataFull(IntFmt.format(frec.CntVoid), 6) + Space + "Items." + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(DecFmt.format(frec.VoidValue), 13) + "_");
//        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "------------------------------------------------------------------") + "_";
//        t += ("colspan=2 align=left><font face=Angsana New size=1>" + "Docket" + "</td><td align=right><font face=Angsana New size=1>" + IntFmt.format(frec.CntBill) + " ") + "_";
//        MySQLConnect mysql = new MySQLConnect();
//        mysql.open();
//        try {
//            Statement stmt = mysql.getConnection().createStatement();
//            String SqlQuery = "select b_macno,min(b_refno),max(b_refno) from s_invoice "
//                    + "where (s_date>='" + Datefmt.format(TDate1) + "') and (s_date<='" + Datefmt.format(TDate2) + "') "
//                    + "and (b_macno>='" + txtMacNo1.getText() + "') "
//                    + "and (b_macno<='" + txtMacNo2.getText() + "') "
//                    + " group by b_macno order by b_macno";
//            ResultSet rec = stmt.executeQuery(SqlQuery);
//            rec.first();
//            if (rec.getRow() == 0) {
//            } else {
//                do {
//                    t += ("colspan=3 align=left><font face=Angsana New size=1>" + " Start Docket" + Space + rec.getString("min(b_refno)") + TAB + " To" + Space + rec.getString("max(b_refno)")) + "_";
//                } while (rec.next());
//            }
//            rec.close();
//            stmt.close();
//        } catch (SQLException e) {
//            MSG.ERR(e.getMessage());
//        } finally {
//            mysql.close();
//        }
//
//        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "=====================================") + "_";
//        t += ("align=left><font face=Angsana New size=1>" + "SaleType" + "</td><td align=left><font face=Angsana New size=1>" + "Docket" + TAB + "CC" + "</td><td align=center><font face=Angsana New size=1>" + "Amount" + "_");
//        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "=====================================") + "_";
//        t += ("align=left><font face=Angsana New size=1>" + "Dine - In" + "</td><td align=right><font face=Angsana New size=1>" + IntFmt.format(frec.Eat_In_Cnt) + TAB + PUtility.DataFullSpace(IntFmt.format(frec.Eat_In_Cust), 4) + TAB + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(DecFmt.format(frec.Eat_In_Amt), 8) + "_");
//        t += ("align=left><font face=Angsana New size=1>" + "Take Away" + "</td><td align=right><font face=Angsana New size=1>" + IntFmt.format(frec.Take_AwayCnt) + TAB + PUtility.DataFullSpace(IntFmt.format(frec.Take_AwayCust), 4) + TAB + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(DecFmt.format(frec.Take_AwayAmt), 8) + "_");
//        t += ("align=left><font face=Angsana New size=1>" + "Delivery" + "</td><td align=right><font face=Angsana New size=1>" + IntFmt.format(frec.DeliveryCnt) + TAB + PUtility.DataFullSpace(IntFmt.format(frec.DeliveryCust), 4) + TAB + "</td><td align=right><font face=Angsana New size=1>" + PUtility.DataFull(DecFmt.format(frec.DeliveryAmt), 8) + "_");
//        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "=====================================") + "_";
//        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "Analysts") + "_";
//        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "_");
//        t += ("align=right><font face=Angsana New size=1>" + "DineIn" + TAB + "</td><td align=center><font face=Angsana New size=1>" + "TakeAway" + "</td><td align=right><font face=Angsana New size=1>" + "Delivery" + "_");
//        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "------------------------------------------------------------------") + "_";
//        t += ("colspan=3 align=left><font face=Angsana New size=1>" + "Gross Sales") + "_";
//        t += ("width=10 align=left><font face=Angsana New size=1>" + TAB + PUtility.DataFullSpace(DecFmt.format(frec.Dept_Sum - totalDiscount), 13) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(totalT) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(totalD)) + "_";
//        t += ("colspan=3 align=left><font face=Angsana New size=1>" + "Net Sales") + "_";
//        t += ("align=left><font face=Angsana New size=1>" + TAB + PUtility.DataFullSpace(DecFmt.format(nettotalE), 13) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(nettotalT) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(nettotalD)) + "_";
//        t += ("colspan=3 align=left><font face=Angsana New size=1>" + "Docket") + "_";
//        t += ("align=left><font face=Angsana New size=1>" + TAB + PUtility.DataFullSpace(IntFmt.format(countBillE), 13) + "</td><td align=right><font face=Angsana New size=1>" + IntFmt.format(countBillT) + "</td><td align=right><font face=Angsana New size=1>" + IntFmt.format(countBillD)) + "_";
//        t += ("colspan=3 align=left><font face=Angsana New size=1>" + "Customer") + "_";
//        t += ("align=left><font face=Angsana New size=1>" + TAB + PUtility.DataFullSpace(DecFmt.format(countCCE), 13) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(countCCT) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(countCCD)) + "_";
//        t += ("colspan=3 align=left><font face=Angsana New size=1>" + "AVG/Dock") + "_";
//        t += ("align=left><font face=Angsana New size=1>" + TAB + PUtility.DataFullSpace(DecFmt.format(AVG_DockE), 13) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(AVG_DockT) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(AVG_DockD)) + "_";
//        t += ("colspan=3 align=left><font face=Angsana New size=1>" + "AVG/Head") + "_";
//        t += ("align=left><font face=Angsana New size=1>" + TAB + PUtility.DataFullSpace(DecFmt.format(AVG_CCE), 13) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(AVG_CCT) + "</td><td align=right><font face=Angsana New size=1>" + DecFmt.format(AVG_CCD)) + "_";
//        t += ("colspan=3 align=center><font face=Angsana New size=1>" + "------------------------------------------------------------------") + "_";
//        t = changeReportLanguage(t);
//        PrintDriver pd = new PrintDriver();
//        String[] strs = t.split("_");
//
//        for (String data1 : strs) {
//            pd.addTextIFont(data1);
//            try {
//                Thread.sleep(50);
//            } catch (InterruptedException e) {
//            }
//        }
//        pd.printHTML();
//    }

    private ArrayList<Object[]> DocAnalyse(String date1, String date2) {
        ArrayList<Object[]> listObj = new ArrayList<>();
        String sqlSelectDocTypeE = "select count(b_refno)b_refno,"
                + "b_ondate, "
                + "b_macno, "
                + "b_etd,sum(b_cust) b_cust, "
                + "sum(b_nettotal) b_nettotal,"
                + " sum(b_vat) b_vat "
                + "from s_invoice "
                + "where s_date between '" + date1 + "' and '" + date2 + "' "
                + "and b_void<>'V'"
                + "and b_etd='E' "
                + "group by b_etd";
        String sqlSelectDocTypeT = "select count(b_refno)b_refno,"
                + "b_ondate, "
                + "b_macno, "
                + "b_etd,sum(b_cust) b_cust, "
                + "sum(b_nettotal) b_nettotal,"
                + " sum(b_vat) b_vat "
                + "from s_invoice "
                + "where s_date between '" + date1 + "' and '" + date2 + "' "
                + "and b_void<>'V'"
                + "and b_etd='T' "
                + "group by b_etd";
        String sqlSelectDocTypeD = "select count(b_refno)b_refno,"
                + "b_ondate, "
                + "b_macno, "
                + "b_etd,sum(b_cust) b_cust, "
                + "sum(b_nettotal) b_nettotal,"
                + " sum(b_vat) b_vat "
                + "from s_invoice "
                + "where s_date between '" + date1 + "' and '" + date2 + "' "
                + "and b_void<>'V'"
                + "and b_etd='D' "
                + "group by b_etd";
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            ResultSet rs = stmt.executeQuery(sqlSelectDocTypeE);
            int countb_refnoE = 0;
            int countb_refnoT = 0;
            int countb_refnoD = 0;
            String b_etd = "";
            String b_cust = "";
            if (rs.next()) {
                int countb_refno = rs.getInt("b_refno");
                b_etd = rs.getString("b_etd");
                b_cust = rs.getString("b_cust");
                double b_nettotal = rs.getDouble("b_nettotal");
                double b_vat = rs.getDouble("b_vat");
                double nettotal = b_nettotal - b_vat;
                System.out.println(b_etd + " " + b_cust + " " + b_nettotal + " " + b_vat);
                listObj.add(new Object[]{countb_refno, b_etd, b_cust, b_vat, nettotal, b_nettotal,});
            } else {
                listObj.add(new Object[]{"0", "E", "0", 0.00, 0.00, 0.00});
            }
            rs.close();
            stmt.close();

            stmt = mysql.getConnection().createStatement();
            ResultSet rs4 = stmt.executeQuery(sqlSelectDocTypeT);
            if (rs4.next()) {
                int countb_refno = rs4.getInt("b_refno");
                b_etd = rs4.getString("b_etd");
                b_cust = rs4.getString("b_cust");
                double b_nettotal = rs4.getDouble("b_nettotal");
                double b_vat = rs4.getDouble("b_vat");
                double nettotal = b_nettotal - b_vat;
                System.out.println(b_etd + " " + b_cust + " " + b_nettotal + " " + b_vat);
                listObj.add(new Object[]{countb_refno, b_etd, b_cust, b_vat, nettotal, b_nettotal,});
            } else {
                listObj.add(new Object[]{"0", "T", "0", 0.00, 0.00, 0.00});
            }
            rs4.close();
            stmt.close();
            ResultSet rsD = mysql.getConnection().createStatement().executeQuery(sqlSelectDocTypeD);
            if (rsD.next()) {
                int countb_refno = rsD.getInt("b_refno");
                b_etd = rsD.getString("b_etd");
                b_cust = rsD.getString("b_cust");
                double b_nettotal = rsD.getDouble("b_nettotal");
                double b_vat = rsD.getDouble("b_vat");
                double nettotal = b_nettotal - b_vat;
                System.out.println(b_etd + " " + b_cust + " " + b_nettotal + " " + b_vat);
                listObj.add(new Object[]{countb_refno, b_etd, b_cust, b_vat, nettotal, b_nettotal,});
            } else {
                listObj.add(new Object[]{"0", "D", "0", 0.00, 0.00, 0.00});
            }
            rsD.close();

            String sqlCountBillnoE = "select count(b_refno) cb_refnoE "
                    + "from s_invoice "
                    + "where s_date between '" + date1 + "' and '" + date2 + "' "
                    + "and b_etd='E' and b_void<>'V'";
            stmt = mysql.getConnection().createStatement();
            ResultSet rs1 = stmt.executeQuery(sqlCountBillnoE);
            if (rs1.next()) {
                countb_refnoE = rs1.getInt("cb_refnoE");
            } else {
                countb_refnoE = 0;
            }
            rs1.close();
            stmt.close();

            listObj.add(new Object[]{countb_refnoE});
            String sqlCountBillnoT = "select count(b_refno) cb_refnoT "
                    + "from s_invoice "
                    + "where s_date between '" + date1 + "' and '" + date2 + "' "
                    + "and b_etd='T' and b_void<>'V'";
            stmt = mysql.getConnection().createStatement();
            ResultSet rs2 = stmt.executeQuery(sqlCountBillnoT);
            if (rs2.next()) {
                countb_refnoT = rs2.getInt("cb_refnoT");
            } else {
                countb_refnoT = 0;
            }
            rs2.close();
            stmt.close();
            listObj.add(new Object[]{countb_refnoT});
            rs2.close();
            String sqlCountBillnoD = "select count(b_refno) cb_refnoD "
                    + "from s_invoice "
                    + "where s_date between '" + date1 + "' and '" + date2 + "' "
                    + "and b_etd='D' and b_void<>'V'";
            stmt = mysql.getConnection().createStatement();
            ResultSet rs6 = stmt.executeQuery(sqlCountBillnoD);
            if (rs6.next()) {
                countb_refnoD = rs6.getInt("cb_refnoD");
            } else {
                countb_refnoD = 0;
            }
            rs6.close();
            stmt.close();
            listObj.add(new Object[]{countb_refnoD});
        } catch (SQLException e) {
            MSG.ERR(e.getMessage());
            
        }

        mysql.close();

        return listObj;
    }

    private ArrayList<String[]> CreName(String macNo1, String macNo2) {
        ArrayList<String[]> list = new ArrayList<>();
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            SimpleDateFormat Datefmt = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "select b_macno, B_CrCode1,B_cardNo1, sum(B_CrAmt1) B_CrAmt1 "
                    + "from s_invoice "
                    + "where b_macno='" + macNo1 + "' and '" + macNo2 + "' "
                    + "and s_date between '" + Datefmt.format(TDate1) + "' and '" + Datefmt.format(TDate2) + "' "
                    + "and b_crcode1<>'' "
                    + "and b_cramt1 <>'0' "
                    + "and b_void<>'V' "
                    + "group by b_crcode1 order by b_crcode1";
            ResultSet rec = stmt.executeQuery(SqlQuery);
            while (rec.next()) {
                String[] CreName = new String[]{"", "", ""};
                String name = rec.getString("B_CrCode1");
                String code = rec.getString("B_CardNo1");
                String amount = rec.getString("B_CrAmt1");
                CreName[0] = name;
                CreName[1] = "";
//                CreName[1] = code;
                CreName[2] = amount;
                list.add(CreName);
            }

            rec.close();
            stmt.close();
        } catch (SQLException ex) {
            MSG.ERR(ex.getMessage());
            
        } finally {
            mysql.close();
        }

        return list;
    }

    private String[] credit(String macNo1, String macNo2) {
        String[] credit = new String[]{"", ""};
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "select count(b_crcode1) b_crcode1,b_crcode1,sum(B_CrAmt1) "
                    + "from S_invoice "
                    + "where b_macno between'" + macNo1 + "' and '" + macNo2 + "' "
                    + "and s_date between'" + Datefmt.format(TDate1) + "' and '" + Datefmt.format(TDate2) + "' "
                    + "and B_CardNo1 <>'' "
                    + "and b_void<>'V' group by b_crcode1 order by b_crcode1";
//            String SqlQuery = "select COUNT(B_CardNo1),sum(B_CrAmt1) "
//                    + "from S_invoice "
//                    + "where b_macno between'" + macNo1 + "' and '" + macNo2 + "' "
//                    + "and s_date between'" + Datefmt.format(TDate1) + "' and '" + Datefmt.format(TDate2) + "' "
//                    + "and B_CardNo1 <>'' "
//                    + "and b_void<>'V' order by b_refno";
            ResultSet rec = stmt.executeQuery(SqlQuery);
            String CardNo = "";
            String Amt = "";
            int dCardNo = 0;
            double dAmt = 0.00;
            while (rec.next()) {
                CardNo = rec.getString("b_crcode1");
                Amt = rec.getString("sum(B_CrAmt1)");
                dCardNo += Integer.parseInt(CardNo);
                dAmt += Double.parseDouble(Amt);
            }
            credit[0] = dCardNo + "";
            credit[1] = dAmt + "";
            rec.close();
            stmt.close();
        } catch (SQLException ex) {
            MSG.ERR(ex.getMessage());
            
        } finally {
            mysql.close();
        }

        return credit;
    }

    private String[] specialCupon(String macNo1, String macNo2) {
        String[] cupon = new String[]{"", ""};
        MySQLConnect mysql = new MySQLConnect();
        mysql.open();
        try {
            Statement stmt = mysql.getConnection().createStatement();
            String SqlQuery = "select sum(cuquan) cuquan, "
                    + "sum(cuamt) cuamt "
                    + "from s_cupon "
                    + "where cuquan<>'0' "
                    + "and cuant<>'0' "
                    + "and macno between'" + macNo1 + "' and '" + macNo2 + "';";
            ResultSet rec = stmt.executeQuery(SqlQuery);
            if (rec.next()) {
                cupon[0] = rec.getString("cuquan");
                cupon[1] = rec.getString("cuamt");
            }
            rec.close();
            stmt.close();
        } catch (SQLException ex) {
            MSG.ERR(ex.getMessage());
            
        } finally {
            mysql.close();
        }

        return cupon;
    }

    public String changeReportLanguage(String text) {
        String t = text;
        String billLanguage = ConfigFile.getProperties("languagebillSubtotal");
        if (billLanguage.equals("th")) {
            t = t.replace("CASH IN DRAWER", "เงินสดในลิ้นชัก");
            t = t.replace("FOOD", "อาหาร");
            t = t.replace("BEVERAGE", "เครื่องดื่ม");
            t = t.replace("PRODUCT", "สินค้า");
            t = t.replace("TOTAL-SALES", "รวมยอดขายตามป้าย");
            t = t.replace("Discount Bath", "ส่วนลด บาท");
            t = t.replace("Discount Item", "ส่วนลด รายการ");
            t = t.replace("Gross-Sales", "ยอดขายหลังหักส่วนลด");
            t = t.replace("CASH", "เงินสด");
            t = t.replace("CRADIT", "เครดิต");
            t = t.replace("Bank In", "ยอดเงินสดนำส่ง");
            t = t.replace("Service Charge", "ค่าบริการ");
            t = t.replace("Net-Sales", "ยอดขายรวมทั้งสิ้น");
            t = t.replace("Net-Sale", "ยอดขายรวมทั้งสิ้น");
            t = t.replace("Round Total", "ยอดปัดเศษ");
            t = t.replace("Vat", "ภาษีมูลค่าเพิ่ม");
            t = t.replace("Customer", "จำนวนลูกค้า");
            t = t.replace("MGR Refund", "ยกเลิกใบเสร็จ").replace("Doc.", "ใบ");
            t = t.replace("MGR Void", "ยกเลิกรายการ").replace("Items.", "รายการ");
            t = t.replace("Total Docket", "จำนวนใบเสร็จ");
            t = t.replace("Start Docket", "ใบเสร็จเริ่มต้น");
            t = t.replace("To..", "ถึง..");
            t = t.replace("SaleType", "ประเภทขาย");
            t = t.replace("Docket", "ใบเสร็จ");
            t = t.replace("CC", "ลูกค้า");
            t = t.replace("Amount", "มูลค่า");
            t = t.replace("DineIn", "ทานในร้าน");
            t = t.replace("Dine-In", "ทานในร้าน");
            t = t.replace("Dine - In", "ทานในร้าน");
            t = t.replace("TakeAway", "ห่อกลับ");
            t = t.replace("Take Away", "ห่อกลับ");
            t = t.replace("Delivery", "ส่ง");
            t = t.replace("Analysts", "วิเคราะห์");
            t = t.replace("Gross Sales", "ยอดขายหลังหักส่วนลด");
            t = t.replace("Net Sales", "ยอดขายรวมภาษีมูลค่าเพิ่ม");
            t = t.replace("Customer", "จำนวนลูกค้า");
            t = t.replace("AVG/Dock", "ยอดเฉลี่ยต่อใบเสร็จ");
            t = t.replace("AVG/Head", "ยอดเฉลี่ยต่อคน");
            t = t.replace("Cash", "เงินสด");
            t = t.replace("FLOAT IN", "เงินสำรองทอนเข้า");
            t = t.replace("FLOAT OUT", "เงินสำรองทอนออก");
            t = t.replace("FLOAT-IN", "เงินสำรองทอนเข้า");
            t = t.replace("FLOAT-OUT", "เงินสำรองทอนออก");
            t = t.replace("Service Charge", "ค่าบริการ");

        }
        return t;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntExit;
    private javax.swing.JButton bntOK;
    private javax.swing.JButton cmdDateChoose1;
    private javax.swing.JButton cmdDateChoose2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JFormattedTextField txtDate1;
    private javax.swing.JFormattedTextField txtDate2;
    private javax.swing.JTextField txtMacNo1;
    private javax.swing.JTextField txtMacNo2;
    // End of variables declaration//GEN-END:variables
}
